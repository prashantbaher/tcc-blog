(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{121:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return l})),a.d(t,"metadata",(function(){return b})),a.d(t,"rightToc",(function(){return o})),a.d(t,"default",(function(){return s}));var n=a(2),r=a(6),c=(a(0),a(152)),l={id:"sw-sketch-macro-edit-circular-sketch-pattern",title:"Edit Circular Sketch Pattern"},b={unversionedId:"solidworks-macros/sw-sketch-macro-edit-circular-sketch-pattern",id:"solidworks-macros/sw-sketch-macro-edit-circular-sketch-pattern",isDocsHomePage:!1,title:"Edit Circular Sketch Pattern",description:"In this post, I tell you about how to Edit Circular Sketch Pattern using Solidworks VBA Macros in a Sketch.",source:"@site/docs\\solidworks-macros\\2020-04-05-edit-circular-skech-pattern.md",slug:"/solidworks-macros/sw-sketch-macro-edit-circular-sketch-pattern",permalink:"/docs/solidworks-macros/sw-sketch-macro-edit-circular-sketch-pattern",version:"current",sidebar:"swvba",previous:{title:"Circular Sketch Pattern",permalink:"/docs/solidworks-macros/sw-sketch-macro-circular-sketch-patterm"},next:{title:"Move/Copy Sketch Entities",permalink:"/docs/solidworks-macros/sw-sketch-macro-move-or-copy-sketch-entities"}},o=[{value:"Code Sample",id:"code-sample",children:[{value:"Understanding the Code",id:"understanding-the-code",children:[]}]},{value:"<strong>Cases</strong>",id:"cases",children:[{value:"CASE 1 : Update Arc Radius",id:"case-1--update-arc-radius",children:[]},{value:"CASE 2 : Update Arc Angle",id:"case-2--update-arc-angle",children:[]},{value:"CASE 3 : Update Number of Instances",id:"case-3--update-number-of-instances",children:[]},{value:"CASE 4 : Update Pattern Spacing",id:"case-4--update-pattern-spacing",children:[]},{value:"CASE 5 : Update Display Rotation of Pattern",id:"case-5--update-display-rotation-of-pattern",children:[]},{value:"CASE 6 : Update Number of Instances to Delete",id:"case-6--update-number-of-instances-to-delete",children:[]},{value:"CASE 7 : Update Display Radius Dimension",id:"case-7--update-display-radius-dimension",children:[]},{value:"CASE 8 : Update Display Angle Dimension",id:"case-8--update-display-angle-dimension",children:[]},{value:"CASE 9 : Update Display Number of Instances",id:"case-9--update-display-number-of-instances",children:[]}]}],i={rightToc:o};function s(e){var t=e.components,l=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(n.a)({},i,l,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"In this post, I tell you about ",Object(c.b)("strong",{parentName:"p"},"how to Edit Circular Sketch Pattern using Solidworks VBA Macros")," in a Sketch."),Object(c.b)("p",null,"In this post, I explain about ",Object(c.b)("inlineCode",{parentName:"p"},"EditCircularSketchStepAndRepeat")," method from ",Object(c.b)("strong",{parentName:"p"},"Solidworks")," ",Object(c.b)("inlineCode",{parentName:"p"},"SketchManager")," object."),Object(c.b)("p",null,"This method is ",Object(c.b)("strong",{parentName:"p"},Object(c.b)("em",{parentName:"strong"},"most updated"))," method, I found in ",Object(c.b)("em",{parentName:"p"},"Solidworks API Help"),". "),Object(c.b)("p",null,"So ",Object(c.b)("strong",{parentName:"p"},Object(c.b)("em",{parentName:"strong"},"use this method"))," if you want to ",Object(c.b)("em",{parentName:"p"},"edit existing Circular Sketch Pattern"),"."),Object(c.b)("p",null,"This post is a little different of previous ",Object(c.b)("strong",{parentName:"p"},Object(c.b)("a",Object(n.a)({parentName:"strong"},{href:"sw-sketch-macro-circular-sketch-patterm"}),"Solidworks Macro - Circular Sketch Pattern From VBA Macro"))," post."),Object(c.b)("p",null,"There are 2 changes I have made, which I am going to use on future posts also."),Object(c.b)("p",null,"These change are explain below:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},"In this post I used ",Object(c.b)("inlineCode",{parentName:"p"},"code sample")," from ",Object(c.b)("strong",{parentName:"p"},Object(c.b)("a",Object(n.a)({parentName:"strong"},{href:"sw-sketch-macro-fix-unit-issue"}),"Fix Unit Issue"))," post to fix unit conversion issue and show how to use it.")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},"In input parameter of ",Object(c.b)("inlineCode",{parentName:"p"},"EditCircularSketchStepAndRepeat")," method, I passed variables not direct values. This helps us to maintain the code and modification of existing code is simple."))),Object(c.b)("hr",null),Object(c.b)("h2",{id:"code-sample"},"Code Sample"),Object(c.b)("p",null,"Below is the ",Object(c.b)("inlineCode",{parentName:"p"},"code")," sample to ",Object(c.b)("em",{parentName:"p"},"edit Circular Sketch Pattern"),"."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-vb"}),"Option Explicit\n\n' Create variable for Solidworks application\nDim swApp As SldWorks.SldWorks\n\n' Create variable for Solidworks document\nDim swDoc As SldWorks.ModelDoc2\n\n' Boolean Variable\nDim BoolStatus As Boolean\n\n' Create variable for Solidworks Sketch Manager\nDim swSketchManager As SldWorks.SketchManager\n\n' Create Variable for Solidworks Sketch Segment\nDim swSketchSegment As SldWorks.SketchSegment\n\n' Main function of our VBA program\nSub main()\n\n  ' Set Solidworks variable to Solidworks application\n  Set swApp = Application.SldWorks\n  \n  ' Create string type variable for storing default part location\n  Dim defaultTemplate As String\n\n  ' Set value of this string type variable to \"Default part template\"\n  defaultTemplate = swApp.GetUserPreferenceStringValue(swUserPreferenceStringValue_e.swDefaultTemplatePart)\n\n  ' Set Solidworks document to new part document\n  Set swDoc = swApp.NewDocument(defaultTemplate, 0, 0, 0)\n  \n  '-----------------------UNIT CONVERSION----------------------------------------\n\n  ' Local variables used as Conversion Factors\n  Dim LengthConversionFactor As Double\n  Dim AngleConversionFactor As Double\n  \n  ' Use a Select Case, to get the length of active Unit and set the different factors\n  Select Case swDoc.GetUnits(0)       ' GetUnits function gives us, active unit\n    \n    Case swMETER    ' If length is in Meter\n      LengthConversionFactor = 1\n      AngleConversionFactor = 1\n    \n    Case swMM       ' If length is in MM\n      LengthConversionFactor = 1 / 1000\n      AngleConversionFactor = 1 * 0.01745329\n    \n    Case swCM       ' If length is in CM\n      LengthConversionFactor = 1 / 100\n      AngleConversionFactor = 1 * 0.01745329\n    \n    Case swINCHES   ' If length is in INCHES\n      LengthConversionFactor = 1 * 0.0254\n      AngleConversionFactor = 1 * 0.01745329\n    \n    Case swFEET     ' If length is in FEET\n      LengthConversionFactor = 1 * (0.0254 * 12)\n      AngleConversionFactor = 1 * 0.01745329\n    \n    Case swFEETINCHES     ' If length is in FEET & INCHES\n      LengthConversionFactor = 1 * 0.0254  ' For length we use sama as Inch\n      AngleConversionFactor = 1 * 0.01745329\n    \n    Case swANGSTROM        ' If length is in ANGSTROM\n      LengthConversionFactor = 1 / 10000000000#\n      AngleConversionFactor = 1 * 0.01745329\n    \n    Case swNANOMETER       ' If length is in NANOMETER\n      LengthConversionFactor = 1 / 1000000000\n      AngleConversionFactor = 1 * 0.01745329\n    \n    Case swMICRON       ' If length is in MICRON\n      LengthConversionFactor = 1 / 1000000\n      AngleConversionFactor = 1 * 0.01745329\n  End Select\n\n  '----------------------------------------------------------------\n\n  ' Select Front Plane\n  BoolStatus = swDoc.Extension.SelectByID2(\"Front Plane\", \"PLANE\", 0, 0, 0, False, 0, Nothing, swSelectOption_e.swSelectOptionDefault)\n\n  ' Set Sketch manager for our sketch\n  Set swSketchManager = swDoc.SketchManager\n\n  ' Insert a sketch into selected plane\n  swSketchManager.InsertSketch True\n  \n  ' Circle Radius\n  Dim circleRadius As Double\n  circleRadius = 5 * LengthConversionFactor\n  \n  ' Set Sketch Segment value and Create a Circle\n  Set swSketchSegment = swSketchManager.CreateCircleByRadius(0, 0, 0, circleRadius)\n  \n  ' De-select the lines after creation\n  swDoc.ClearSelection2 True\n\n  ' Select Circle we want to Pattern\n  BoolStatus = swDoc.Extension.SelectByID2(\"Arc1\", \"SKETCHSEGMENT\", 0, 0, 0, True, 0, Nothing, swSelectOption_e.swSelectOptionDefault)\n  \n  ' Arc Radius\n  Dim arcRadius As Double\n  arcRadius = 10 * LengthConversionFactor\n  \n  ' Arc Angle\n  Dim arcAngle As Double\n  arcAngle = 0 * AngleConversionFactor\n  \n  ' Number of Instances\n  Dim numberOfInstance As Double\n  numberOfInstance = 3\n  \n  ' Pattern Spacing\n  Dim patternSpacing As Double\n  patternSpacing = 5 * AngleConversionFactor\n  \n  ' Create a Circular Sketch Pattern\n  BoolStatus = swSketchManager.CreateCircularSketchStepAndRepeat(arcRadius, arcAngle, numberOfInstance, patternSpacing, True, \"\", True, True, True)\n  \n  ' De-select the Sketch Segment after Circular Sketch Pattern\n  swDoc.ClearSelection2 True\n  \n  ' Update Arc Radius\n  arcRadius = 20 * LengthConversionFactor\n\n  ' Edit a Circular Sketch Pattern\n  BoolStatus = swSketchManager.EditCircularSketchStepAndRepeat(arcRadius, arcAngle, numberOfInstance, patternSpacing, True, \"\", True, True, True, \"Arc1_\")\n\n  ' Show Front View after Circular Sketch Pattern\n  swDoc.ShowNamedView2 \"\", swStandardViews_e.swFrontView\n  \n  ' Zoom to fit screen in Solidworks Window\n  swDoc.ViewZoomtofit2\n  \nEnd Sub\n")),Object(c.b)("hr",null),Object(c.b)("h3",{id:"understanding-the-code"},"Understanding the Code"),Object(c.b)("p",null,"Now let us walk through ",Object(c.b)("strong",{parentName:"p"},"each line")," in the above code, and ",Object(c.b)("strong",{parentName:"p"},"understand")," the meaning and purpose of every line."),Object(c.b)("p",null,"I also give some link so that you can go through them if there are anything I explained in ",Object(c.b)("strong",{parentName:"p"},"previous posts"),"."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-vb"}),"Option Explicit\n")),Object(c.b)("p",null,"This line forces us to define every variable we are going to use. "),Object(c.b)("p",null,"For more information please visit ",Object(c.b)("strong",{parentName:"p"},Object(c.b)("a",Object(n.a)({parentName:"strong"},{href:"sw-macro-open-part"}),"Solidworks Macros - Open new Part document"))," post."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-vb"}),"' Create variable for Solidworks application\nDim swApp As SldWorks.SldWorks\n")),Object(c.b)("p",null,"In this line, we create a variable which we named as ",Object(c.b)("inlineCode",{parentName:"p"},"swApp")," and the type of this ",Object(c.b)("inlineCode",{parentName:"p"},"swApp")," variable is ",Object(c.b)("inlineCode",{parentName:"p"},"SldWorks.SldWorks"),"."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-vb"}),"' Create variable for Solidworks document\nDim swDoc As SldWorks.ModelDoc2\n")),Object(c.b)("p",null,"In this line, we create a variable which we named as ",Object(c.b)("inlineCode",{parentName:"p"},"swDoc")," and the type of this ",Object(c.b)("inlineCode",{parentName:"p"},"swDoc")," variable is ",Object(c.b)("inlineCode",{parentName:"p"},"SldWorks.ModelDoc2"),"."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-vb"}),"' Boolean Variable\nDim BoolStatus As Boolean\n")),Object(c.b)("p",null,"In this line, we create a variable named ",Object(c.b)("inlineCode",{parentName:"p"},"BoolStatus")," as ",Object(c.b)("inlineCode",{parentName:"p"},"Boolean")," object type."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-vb"}),"' Create variable for Solidworks Sketch Manager\nDim swSketchManager As SldWorks.SketchManager\n")),Object(c.b)("p",null,"In above line, we create variable ",Object(c.b)("inlineCode",{parentName:"p"},"swSketchManager")," for ",Object(c.b)("strong",{parentName:"p"},"Solidworks Sketch Manager"),"."),Object(c.b)("p",null,"As the name suggested, a ",Object(c.b)("strong",{parentName:"p"},"Sketch Manager")," holds variours methods and properties to manage ",Object(c.b)("em",{parentName:"p"},"Sketches"),"."),Object(c.b)("p",null,"To see methods and properties related to ",Object(c.b)("inlineCode",{parentName:"p"},"SketchManager")," object, please visit ",Object(c.b)("strong",{parentName:"p"},Object(c.b)("a",Object(n.a)({parentName:"strong"},{href:"https://help.solidworks.com/2017/english/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.ISketchManager_members.html"}),"this page")),"."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-vb"}),"' Create variable for Solidworks Sketch Segment\nDim swSketchSegment As SldWorks.SketchSegment\n")),Object(c.b)("p",null,"In this line, we Create a variable which we named as ",Object(c.b)("inlineCode",{parentName:"p"},"swSketchSegment")," and the type of this ",Object(c.b)("inlineCode",{parentName:"p"},"swSketchSegment")," variable is ",Object(c.b)("inlineCode",{parentName:"p"},"SldWorks.SketchSegment"),"."),Object(c.b)("p",null,"We create variable ",Object(c.b)("inlineCode",{parentName:"p"},"swSketchSegment")," for ",Object(c.b)("strong",{parentName:"p"},"Solidworks Sketch Segments"),"."),Object(c.b)("p",null,"To see methods and properties related to ",Object(c.b)("inlineCode",{parentName:"p"},"swSketchSegment")," object, please visit ",Object(c.b)("strong",{parentName:"p"},Object(c.b)("a",Object(n.a)({parentName:"strong"},{href:"http://help.solidworks.com/2019/English/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.ISketchSegment_members.html"}),"this page")),"."),Object(c.b)("p",null,"These all are our global variables."),Object(c.b)("p",null,"As you can see in code sample, they are ",Object(c.b)("strong",{parentName:"p"},"Solidworks API Objects"),"."),Object(c.b)("p",null,"So basically I group all the ",Object(c.b)("strong",{parentName:"p"},"Solidworks API Objects")," in one place."),Object(c.b)("p",null,"I have also place ",Object(c.b)("inlineCode",{parentName:"p"},"boolean")," type object at top also, because after certain point we will ",Object(c.b)("em",{parentName:"p"},"need")," this variable frequently."),Object(c.b)("p",null,"Thus, I have started placing it here."),Object(c.b)("p",null,"Next is our ",Object(c.b)("inlineCode",{parentName:"p"},"Sub")," procedure which has name of ",Object(c.b)("inlineCode",{parentName:"p"},"main"),". "),Object(c.b)("p",null,"This procedure hold all the ",Object(c.b)("em",{parentName:"p"},"statements (instructions)")," we give to computer."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-vb"}),"' Set Solidworks variable to Solidworks application\nSet swApp = Application.SldWorks\n")),Object(c.b)("p",null,"In this line, we set the value of our Solidworks variable ",Object(c.b)("inlineCode",{parentName:"p"},"swApp"),"; which we define earlier; to Solidworks application."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-vb"}),"' Create string type variable for storing default part location\nDim defaultTemplate As String\n' Set value of this string type variable to \"Default part template\"\ndefaultTemplate = swApp.GetUserPreferenceStringValue(swUserPreferenceStringValue_e.swDefaultTemplatePart)\n")),Object(c.b)("p",null,"In 1st statement of above example, we are defining a variable of ",Object(c.b)("inlineCode",{parentName:"p"},"string")," type and named it as ",Object(c.b)("inlineCode",{parentName:"p"},"defaultTemplate"),"."),Object(c.b)("p",null,"This variable ",Object(c.b)("inlineCode",{parentName:"p"},"defaultTemplate"),", hold the location the location of ",Object(c.b)("strong",{parentName:"p"},"Default Part Template"),"."),Object(c.b)("p",null,"In 2nd line of above example. we assign value to our newly define ",Object(c.b)("inlineCode",{parentName:"p"},"defaultTemplate")," variable."),Object(c.b)("p",null,"We assign the value by using a ",Object(c.b)("em",{parentName:"p"},"Method")," named ",Object(c.b)("inlineCode",{parentName:"p"},"GetUserPreferenceStringValue()"),". "),Object(c.b)("p",null,"This ",Object(c.b)("inlineCode",{parentName:"p"},"GetUserPreferenceStringValue()")," method is a part of our main Solidworks variable ",Object(c.b)("inlineCode",{parentName:"p"},"swApp"),"."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-vb"}),"' Set Solidworks document to new part document\nSet swDoc = swApp.NewDocument(defaultTemplate, 0, 0, 0)\n")),Object(c.b)("p",null,"In this line, we set the value of our ",Object(c.b)("inlineCode",{parentName:"p"},"swDoc")," variable to new document."),Object(c.b)("p",null,"For ",Object(c.b)("strong",{parentName:"p"},"detailed information")," about these lines please visit ",Object(c.b)("strong",{parentName:"p"},Object(c.b)("a",Object(n.a)({parentName:"strong"},{href:"sw-macro-open-part"}),"Solidworks Macros - Open new Part document"))," post."),Object(c.b)("p",null,"I have discussed them ",Object(c.b)("strong",{parentName:"p"},"thoroghly")," in ",Object(c.b)("strong",{parentName:"p"},Object(c.b)("a",Object(n.a)({parentName:"strong"},{href:"sw-macro-open-part"}),"Solidworks Macros - Open new Part document"))," post, so do checkout that post if you want to understand above code in more detail."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-vb"}),"'-----------------------UNIT CONVERSION----------------------------------------\n\n' Local variables used as Conversion Factors\nDim LengthConversionFactor As Double\nDim AngleConversionFactor As Double\n\n' Use a Select Case, to get the length of active Unit and set the different factors\nSelect Case swDoc.GetUnits(0)       ' GetUnits function gives us, active unit\n  \n  Case swMETER    ' If length is in Meter\n    LengthConversionFactor = 1\n    AngleConversionFactor = 1\n  \n  Case swMM       ' If length is in MM\n    LengthConversionFactor = 1 / 1000\n    AngleConversionFactor = 1 * 0.01745329\n  \n  Case swCM       ' If length is in CM\n    LengthConversionFactor = 1 / 100\n    AngleConversionFactor = 1 * 0.01745329\n  \n  Case swINCHES   ' If length is in INCHES\n    LengthConversionFactor = 1 * 0.0254\n    AngleConversionFactor = 1 * 0.01745329\n  \n  Case swFEET     ' If length is in FEET\n    LengthConversionFactor = 1 * (0.0254 * 12)\n    AngleConversionFactor = 1 * 0.01745329\n  \n  Case swFEETINCHES     ' If length is in FEET & INCHES\n    LengthConversionFactor = 1 * 0.0254  ' For length we use sama as Inch\n    AngleConversionFactor = 1 * 0.01745329\n  \n  Case swANGSTROM        ' If length is in ANGSTROM\n    LengthConversionFactor = 1 / 10000000000#\n    AngleConversionFactor = 1 * 0.01745329\n  \n  Case swNANOMETER       ' If length is in NANOMETER\n    LengthConversionFactor = 1 / 1000000000\n    AngleConversionFactor = 1 * 0.01745329\n  \n  Case swMICRON       ' If length is in MICRON\n    LengthConversionFactor = 1 / 1000000\n    AngleConversionFactor = 1 * 0.01745329\nEnd Select\n\n'----------------------------------------------------------------\n")),Object(c.b)("p",null,"Above code sample shows how to ",Object(c.b)("strong",{parentName:"p"},"fix Solidworks API Unit issue"),". "),Object(c.b)("p",null,"We ",Object(c.b)("em",{parentName:"p"},"1st")," get the ",Object(c.b)("em",{parentName:"p"},"current unit")," of the part and apply the ",Object(c.b)("em",{parentName:"p"},"switch")," statements to update our ",Object(c.b)("em",{parentName:"p"},"Length and Angle Conversion factors"),". "),Object(c.b)("p",null,"I have already explained in detail about ",Object(c.b)("strong",{parentName:"p"},"Fixing Solidworks API Unit Issue")," in ",Object(c.b)("strong",{parentName:"p"},Object(c.b)("a",Object(n.a)({parentName:"strong"},{href:"sw-sketch-macro-fix-unit-issue"}),"Fix Unit Issue"))," blog post. "),Object(c.b)("p",null,"Do checkout above post for Fixing Solidworks API Issue."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-vb"}),'\' Select Front Plane\nBoolStatus = swDoc.Extension.SelectByID2("Front Plane", "PLANE", 0, 0, 0, False, 0, Nothing, swSelectOption_e.swSelectOptionDefault)\n')),Object(c.b)("p",null,"In above line, we select the ",Object(c.b)("em",{parentName:"p"},"front plane")," by using ",Object(c.b)("inlineCode",{parentName:"p"},"SelectByID2")," method from ",Object(c.b)("inlineCode",{parentName:"p"},"Extension")," object."),Object(c.b)("p",null,"For more information about selection method please visit ",Object(c.b)("strong",{parentName:"p"},Object(c.b)("a",Object(n.a)({parentName:"strong"},{href:"sw-macro-selection-methods"}),"Solidworks Macros - Selection Methods"))," post."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-vb"}),"' Set Sketch manager for our sketch\nSet swSketchManager = swDoc.SketchManager\n")),Object(c.b)("p",null,"In above line, we set the ",Object(c.b)("em",{parentName:"p"},"Sketch manager")," variable to ",Object(c.b)("em",{parentName:"p"},"current document's sketch manager"),"."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-vb"}),"' Insert a sketch into selected plane\nswSketchManager.InsertSketch True\n")),Object(c.b)("p",null,"In above line, we use ",Object(c.b)("inlineCode",{parentName:"p"},"InsertSketch")," method of ",Object(c.b)("em",{parentName:"p"},"SketchManager")," and give ",Object(c.b)("inlineCode",{parentName:"p"},"True")," value."),Object(c.b)("p",null,"This method allows us to insert a sketch in selected plane."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-vb"}),"' Circle Radius\nDim circleRadius As Double\ncircleRadius = 5 * LengthConversionFactor\n")),Object(c.b)("p",null,"In above code sample, we do following:"),Object(c.b)("ol",null,Object(c.b)("li",{parentName:"ol"},Object(c.b)("p",{parentName:"li"},"Create a local variable named ",Object(c.b)("inlineCode",{parentName:"p"},"circleRadius"),", which is ",Object(c.b)("inlineCode",{parentName:"p"},"Double")," type.")),Object(c.b)("li",{parentName:"ol"},Object(c.b)("p",{parentName:"li"},"In 2nd line, we assign a value of ",Object(c.b)("strong",{parentName:"p"},"5")," to our ",Object(c.b)("inlineCode",{parentName:"p"},"circleRadius")," variable, also we multiple with our ",Object(c.b)("inlineCode",{parentName:"p"},"LengthConversionFactor")," variable."))),Object(c.b)("p",null,"Since I am using ",Object(c.b)("em",{parentName:"p"},"IPS unit system"),", I want to create a circle of Radius ",Object(c.b)("em",{parentName:"p"},"5 inch"),"."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-vb"}),"' Set Sketch Segment value and Create a Circle\nSet swSketchSegment = swSketchManager.CreateCircleByRadius(0, 0, 0, circleRadius)\n")),Object(c.b)("p",null,"In above line, we set the value of Solidworks Sketch Segment variable ",Object(c.b)("inlineCode",{parentName:"p"},"swSketchSegment")," by ",Object(c.b)("inlineCode",{parentName:"p"},"CreateCircleByRadius")," method from ",Object(c.b)("em",{parentName:"p"},"Solidworks Sketch Manager"),"."),Object(c.b)("p",null,"This ",Object(c.b)("inlineCode",{parentName:"p"},"CreateCircleByRadius")," method creates ",Object(c.b)("em",{parentName:"p"},"a Circle")," at given point with radius."),Object(c.b)("p",null,"For more information about ",Object(c.b)("inlineCode",{parentName:"p"},"CreateCircleByRadius")," method, you can read my ",Object(c.b)("strong",{parentName:"p"},Object(c.b)("a",Object(n.a)({parentName:"strong"},{href:"sw-sketch-macro-create-circle-by-radius"}),"Solidworks Macro - Create Circle By Radius From VBA Macro"))," post."),Object(c.b)("p",null,"That post describe all the parameters we need for this ",Object(c.b)("inlineCode",{parentName:"p"},"CreateCircleByRadius")," method in details."),Object(c.b)("p",null,"In above line, we create a Circle with:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"Circle Centerpoint")," : At origin i.e. ",Object(c.b)("em",{parentName:"p"},"(0, 0, 0)"))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"Circle Radius")," : ",Object(c.b)("em",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"em"},"circleRadius"))))),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-vb"}),"' De-select the Sketch after creation\nswDoc.ClearSelection2 True\n")),Object(c.b)("p",null,"In the above line of code, we deselect the ",Object(c.b)("strong",{parentName:"p"},"Sketch")," after the ",Object(c.b)("em",{parentName:"p"},"Circular Sketch Pattern")," operation."),Object(c.b)("p",null,"For de-selecting, we use ",Object(c.b)("inlineCode",{parentName:"p"},"ClearSelection2")," method from our Solidworks document name ",Object(c.b)("inlineCode",{parentName:"p"},"swDoc"),"."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-vb"}),'\' Select Circle we want to Pattern\nBoolStatus = swDoc.Extension.SelectByID2("Arc1", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, swSelectOption_e.swSelectOptionDefault)\n')),Object(c.b)("p",null,"In above line of code, we select the Circle i.e. ",Object(c.b)("strong",{parentName:"p"},"Arc 1")," and add it to selection list."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-vb"}),"' Arc Radius\nDim arcRadius As Double\narcRadius = 10 * LengthConversionFactor\n")),Object(c.b)("p",null,"Above code sample creates a variable for ",Object(c.b)("strong",{parentName:"p"},"Arc Radius")," and assign value."),Object(c.b)("p",null,"While assigning the value we multiple with ",Object(c.b)("inlineCode",{parentName:"p"},"LengthConversionFactor")," to get correct length."),Object(c.b)("p",null,"Variable Name: ",Object(c.b)("inlineCode",{parentName:"p"},"arcRadius")),Object(c.b)("p",null,"Variable type: ",Object(c.b)("inlineCode",{parentName:"p"},"Double")),Object(c.b)("p",null,"Variable Value: 10 inch"),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"We want Arc Radius to 10 inch.")),Object(c.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(c.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(c.b)("h5",{parentName:"div"},Object(c.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(c.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(c.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(c.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(c.b)("p",{parentName:"div"},"By creating the variables we can handle the values more effciently."))),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-vb"}),"' Arc Angle\nDim arcAngle As Double\narcAngle = 0 * AngleConversionFactor\n")),Object(c.b)("p",null,"Above code sample creates a variable for ",Object(c.b)("strong",{parentName:"p"},"Arc Angle")," and assign value."),Object(c.b)("p",null,"While assigning the value we multiple with ",Object(c.b)("inlineCode",{parentName:"p"},"AngleConversionFactor")," to get correct angle."),Object(c.b)("p",null,"Variable Name: ",Object(c.b)("inlineCode",{parentName:"p"},"arcAngle")),Object(c.b)("p",null,"Variable type: ",Object(c.b)("inlineCode",{parentName:"p"},"Double")),Object(c.b)("p",null,"Variable Value: 0"),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"We want Arc Angle to 0 degree.")),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-vb"}),"' Number of Instances\nDim numberOfInstance As Double\nnumberOfInstance = 3\n")),Object(c.b)("p",null,"Above code sample creates a variable for ",Object(c.b)("strong",{parentName:"p"},"Number of Instances")," and assign value."),Object(c.b)("p",null,"Variable Name: ",Object(c.b)("inlineCode",{parentName:"p"},"numberOfInstance")),Object(c.b)("p",null,"Variable type: ",Object(c.b)("inlineCode",{parentName:"p"},"Double")),Object(c.b)("p",null,"Variable Value: 3"),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"We want 3 copies of the circle including the seed i.e. original circle.")),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-vb"}),"' Pattern Spacing\nDim patternSpacing As Double\npatternSpacing = 5 * AngleConversionFactor\n")),Object(c.b)("p",null,"Above code sample creates a variable for ",Object(c.b)("strong",{parentName:"p"},"Pattern Spacing")," and assign value."),Object(c.b)("p",null,"While assigning the value we multiple with ",Object(c.b)("inlineCode",{parentName:"p"},"AngleConversionFactor")," to get correct angle."),Object(c.b)("p",null,"Variable Name: ",Object(c.b)("inlineCode",{parentName:"p"},"patternSpacing")),Object(c.b)("p",null,"Variable type: ",Object(c.b)("inlineCode",{parentName:"p"},"Double")),Object(c.b)("p",null,"Variable Value: 5"),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"We want 5 degree of spacing between each circle.")),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-vb"}),'\' Create a Circular Sketch Pattern\nBoolStatus = swSketchManager.CreateCircularSketchStepAndRepeat(arcRadius, arcAngle, numberOfInstance, patternSpacing, True, "", True, True, True)\n')),Object(c.b)("p",null,"In above code sample we ",Object(c.b)("em",{parentName:"p"},"Create a Circular Sketch Pattern")," of the selected circle by ",Object(c.b)("inlineCode",{parentName:"p"},"CreateCircularSketchStepAndRepeat")," method from ",Object(c.b)("em",{parentName:"p"},"Solidworks Sketch Manger")," variable."),Object(c.b)("p",null,"As you can see we pass our ",Object(c.b)("em",{parentName:"p"},"previously created variables")," ",Object(c.b)("inlineCode",{parentName:"p"},"arcRadius"),", ",Object(c.b)("inlineCode",{parentName:"p"},"arcAngle"),", ",Object(c.b)("inlineCode",{parentName:"p"},"numberOfInstance")," and ",Object(c.b)("inlineCode",{parentName:"p"},"patternSpacing")," in ",Object(c.b)("inlineCode",{parentName:"p"},"CreateCircularSketchStepAndRepeat")," method as parameters."),Object(c.b)("p",null,"I have explained ",Object(c.b)("inlineCode",{parentName:"p"},"CreateCircularSketchStepAndRepeat")," method in detail in ",Object(c.b)("strong",{parentName:"p"},Object(c.b)("a",Object(n.a)({parentName:"strong"},{href:"sw-sketch-macro-circular-sketch-patterm"}),"Sketch - Circular Sketch Pattern"))," post."),Object(c.b)("p",null,"Please see above post if you want to learn more about ",Object(c.b)("inlineCode",{parentName:"p"},"CreateCircularSketchStepAndRepeat")," method and its parameters."),Object(c.b)("p",null,"Below image shows Circular Sketch Pattern Parameter."),Object(c.b)("p",null,Object(c.b)("img",{alt:"before-edit-circular-pattern",src:a(189).default})),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-vb"}),"' De-select the Sketch Segment after Circular Sketch Pattern\nswDoc.ClearSelection2 True\n")),Object(c.b)("p",null,"In above line we ",Object(c.b)("em",{parentName:"p"},"de-select")," the ",Object(c.b)("em",{parentName:"p"},"Sketch Segment")," after creating ",Object(c.b)("em",{parentName:"p"},"Circular Sketch Pattern"),"."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-vb"}),"' Update Arc Radius\narcRadius = 20 * LengthConversionFactor\n")),Object(c.b)("p",null,"In above line we ",Object(c.b)("strong",{parentName:"p"},"Update Arc Radius")," to new value which we will use in ",Object(c.b)("em",{parentName:"p"},"Editing previously created Circular Sketch pattern"),"."),Object(c.b)("p",null,"Variable Name: ",Object(c.b)("inlineCode",{parentName:"p"},"arcRadius")),Object(c.b)("p",null,"Updated Value: 20 inch"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-vb"}),'\' Edit a Circular Sketch Pattern\nBoolStatus = swSketchManager.EditCircularSketchStepAndRepeat(arcRadius, arcAngle, numberOfInstance, patternSpacing, True, "", True, True, True, "Arc1_")\n')),Object(c.b)("p",null,'For "',Object(c.b)("strong",{parentName:"p"},"editing"),'" a Circular Sketch pattern, we need ',Object(c.b)("inlineCode",{parentName:"p"},"EditCircularSketchStepAndRepeat")," method from ",Object(c.b)("em",{parentName:"p"},"Solidworks Sketch Manager")," object/variable."),Object(c.b)("p",null,"This ",Object(c.b)("inlineCode",{parentName:"p"},"CreateCircularSketchStepAndRepeat")," method takes following parameters as explained:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"ArcRadius")," : ",Object(c.b)("em",{parentName:"p"},"Radius for the circular sketch pattern. This value is in radian."))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"ArcAngle")," : ",Object(c.b)("em",{parentName:"p"},"Angle relative to the sketch entities being patterned. This value is in radian."))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"PatternNum")," : ",Object(c.b)("em",{parentName:"p"},"Total number of instances, including the seed geometry."))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"PatternSpacing")," : ",Object(c.b)("em",{parentName:"p"},"Spacing between pattern instances. This value is in radian."))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"PatternRotate")," : ",Object(c.b)("em",{parentName:"p"},"True to rotate the pattern, false to not."))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"DeleteInstances")," : ",Object(c.b)("em",{parentName:"p"},'Number of instances to delete, passed as a string in the format: "(a) (b) (c)".'))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"RadiusDim")," : ",Object(c.b)("em",{parentName:"p"},"True to display the radius dimension in the graphics area, false to not."))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"AngleDim")," : ",Object(c.b)("em",{parentName:"p"},"True to display the angle dimension between axes in the graphics area, false to not."))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"CreateNumOfInstancesDim")," : ",Object(c.b)("em",{parentName:"p"},"True to display the number of instances dimension in the graphics area, false to not."))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"Seed"),": ",Object(c.b)("em",{parentName:"p"},"List of the names of the entities, separated by the underscore character (",Object(c.b)("em",{parentName:"em"},"), that comprise the seed pattern (e.g., Arc1")," as a seed pattern).")))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"NOTE:")," In ",Object(c.b)("em",{parentName:"p"},"Seed"),", adding underscore(_) after selected entity is important, otherwise code will note work."),Object(c.b)("p",null,"After the function complete following are the results:"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Return Value"),":"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"True"),": ",Object(c.b)("em",{parentName:"p"},"If Edit Circular Sketch Pattern is "),"Success",Object(c.b)("em",{parentName:"p"},"."))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("strong",{parentName:"p"},"False"),": ",Object(c.b)("em",{parentName:"p"},"If Edit Circular Sketch Pattern is "),"Fail",Object(c.b)("em",{parentName:"p"},".")))),Object(c.b)("hr",null),Object(c.b)("h2",{id:"cases"},Object(c.b)("strong",{parentName:"h2"},"Cases")),Object(c.b)("p",null,"In this section, we will go through different cases by "),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("em",{parentName:"p"},"Modifying different parameters"))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("em",{parentName:"p"},"See images, before and after parameter modification")))),Object(c.b)("hr",null),Object(c.b)("h3",{id:"case-1--update-arc-radius"},"CASE 1 : Update Arc Radius"),Object(c.b)("p",null,"In our code, if we want to update Arc Radius, then we need to update ",Object(c.b)("inlineCode",{parentName:"p"},"arcRadius")," variable only."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-vb"}),"' Update Arc Radius\narcRadius = 20 * LengthConversionFactor\n")),Object(c.b)("p",null,"In above line we ",Object(c.b)("strong",{parentName:"p"},"Update Arc Radius")," to new value. of 20 inch."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("em",{parentName:"strong"},"Example Images:"))),Object(c.b)("p",null,"Below image shows before and after we update ",Object(c.b)("strong",{parentName:"p"},"Arc Radius"),"."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Before Update Arc Radius")),Object(c.b)("p",null,Object(c.b)("img",{alt:"before-edit-circular-pattern",src:a(189).default})),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"After Update Arc Radius")),Object(c.b)("p",null,Object(c.b)("img",{alt:"after-update-arc-radius",src:a(190).default})),Object(c.b)("hr",null),Object(c.b)("h3",{id:"case-2--update-arc-angle"},"CASE 2 : Update Arc Angle"),Object(c.b)("p",null,"In our code, if we want to update Arc Angle, then we need to update ",Object(c.b)("inlineCode",{parentName:"p"},"arcAngle")," variable only."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-vb"}),"' Update Arc Angle\narcAngle = 30 * AngleConversionFactor\n")),Object(c.b)("p",null,"In above line we ",Object(c.b)("strong",{parentName:"p"},"Update Arc Angle")," to new value of 30 inch."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("em",{parentName:"strong"},"Example Images:"))),Object(c.b)("p",null,"Below image shows before and after we update ",Object(c.b)("strong",{parentName:"p"},"Arc Angle"),"."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Before Update Arc Angle")),Object(c.b)("p",null,Object(c.b)("img",{alt:"after-update-arc-radius",src:a(190).default})),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"After Update Arc Angle")),Object(c.b)("p",null,Object(c.b)("img",{alt:"after-update-arc-angle",src:a(191).default})),Object(c.b)("hr",null),Object(c.b)("h3",{id:"case-3--update-number-of-instances"},"CASE 3 : Update Number of Instances"),Object(c.b)("p",null,"In our code, if we want to update Number of Instances, then we need to update ",Object(c.b)("inlineCode",{parentName:"p"},"numberOfInstance")," variable only."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-vb"}),"' Update Number of Instances\nnumberOfInstance = 5\n")),Object(c.b)("p",null,"In above line we ",Object(c.b)("strong",{parentName:"p"},"Update Number of Instances")," to new value of 5 number of instances."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("em",{parentName:"strong"},"Example Images:"))),Object(c.b)("p",null,"Below image shows before and after we update ",Object(c.b)("strong",{parentName:"p"},"Number of Instances"),"."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Before Update Number of Instances")),Object(c.b)("p",null,Object(c.b)("img",{alt:"after-update-arc-angle",src:a(191).default})),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"After Update Number of Instances")),Object(c.b)("p",null,Object(c.b)("img",{alt:"after-update-number-of-instances",src:a(192).default})),Object(c.b)("hr",null),Object(c.b)("h3",{id:"case-4--update-pattern-spacing"},"CASE 4 : Update Pattern Spacing"),Object(c.b)("p",null,"In our code, if we want to update Number of Instances, then we need to update ",Object(c.b)("inlineCode",{parentName:"p"},"patternSpacing")," variable only."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-vb"}),"' Update Pattern Spacing\npatternSpacing = 10 * AngleConversionFactor\n")),Object(c.b)("p",null,"In above line we ",Object(c.b)("strong",{parentName:"p"},"Update Pattern Spacing")," to new value of 10 degree."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("em",{parentName:"strong"},"Example Images:"))),Object(c.b)("p",null,"Below image shows before and after we update ",Object(c.b)("strong",{parentName:"p"},"Pattern Spacing"),"."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Before Update Pattern Spacing")),Object(c.b)("p",null,Object(c.b)("img",{alt:"after-update-number-of-instances",src:a(192).default})),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"After Update Pattern Spacing")),Object(c.b)("p",null,Object(c.b)("img",{alt:"after-update-pattern-spacing",src:a(173).default})),Object(c.b)("hr",null),Object(c.b)("h3",{id:"case-5--update-display-rotation-of-pattern"},"CASE 5 : Update Display Rotation of Pattern"),Object(c.b)("p",null,"If we want to update Display Rotation of Pattern, then we need to update value to either ",Object(c.b)("inlineCode",{parentName:"p"},"True")," or ",Object(c.b)("inlineCode",{parentName:"p"},"False"),"."),Object(c.b)("p",null,"In our code, we set this value to ",Object(c.b)("inlineCode",{parentName:"p"},"True")," which means we are displaying the rotation of pattern."),Object(c.b)("p",null,"We update our code for not displaying the rotation of pattern as given in below code sample."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-vb"}),'\' Edit a Circular Sketch Pattern\nBoolStatus = swSketchManager.EditCircularSketchStepAndRepeat(arcRadius, arcAngle, numberOfInstance, patternSpacing, False, "", True, True, True, "Arc1_")\n')),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("em",{parentName:"strong"},"Example Images:"))),Object(c.b)("p",null,"Below image shows before and after we update ",Object(c.b)("strong",{parentName:"p"},"Display Rotation of Pattern"),"."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Before Update Display Rotation of Pattern")),Object(c.b)("p",null,Object(c.b)("img",{alt:"after-update-pattern-spacing",src:a(173).default})),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"After Update Display Rotation of Pattern")),Object(c.b)("p",null,Object(c.b)("img",{alt:"after-update-rotation-of-pattern",src:a(282).default})),Object(c.b)("hr",null),Object(c.b)("h3",{id:"case-6--update-number-of-instances-to-delete"},"CASE 6 : Update Number of Instances to Delete"),Object(c.b)("p",null,"If we want to update Number of Instances to Delete, then we need to update value of ",Object(c.b)("inlineCode",{parentName:"p"},'""')," as given in below code sample."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-vb"}),'\' Edit a Circular Sketch Pattern\nBoolStatus = swSketchManager.EditCircularSketchStepAndRepeat(arcRadius, arcAngle, numberOfInstance, patternSpacing, False, "(3)", True, True, True, "Arc1_")\n')),Object(c.b)("p",null,"In above code sample, we want to delete 3rd instance hence we pass the number ",Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"3"))," inside ",Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"()")),"."),Object(c.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(c.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(c.b)("h5",{parentName:"div"},Object(c.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(c.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(c.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(c.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(c.b)("p",{parentName:"div"},"For delete any instance we need to pass its position in paranthesis (). Otherwise it won't work.**"))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("em",{parentName:"strong"},"Example Images:"))),Object(c.b)("p",null,"Below image shows before and after we update ",Object(c.b)("strong",{parentName:"p"},"Number of Instances to Delete"),"."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Before Update Number of Instances to Delete")),Object(c.b)("p",null,Object(c.b)("img",{alt:"after-update-pattern-spacing",src:a(173).default})),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"After Update Number of Instances to Delete")),Object(c.b)("p",null,Object(c.b)("img",{alt:"after-update-number-of-instance-to-delete",src:a(163).default})),Object(c.b)("hr",null),Object(c.b)("h3",{id:"case-7--update-display-radius-dimension"},"CASE 7 : Update Display Radius Dimension"),Object(c.b)("p",null,"If we want to update Display Radius Dimension, then we need to update value to either ",Object(c.b)("inlineCode",{parentName:"p"},"True")," or ",Object(c.b)("inlineCode",{parentName:"p"},"False"),"."),Object(c.b)("p",null,"In our code, we set this value to ",Object(c.b)("inlineCode",{parentName:"p"},"True")," which means we are displaying the Display Radius Dimension."),Object(c.b)("p",null,"We update our code for not displaying the Display Radius Dimension as given in below code sample."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-vb"}),'\' Edit a Circular Sketch Pattern\nBoolStatus = swSketchManager.EditCircularSketchStepAndRepeat(arcRadius, arcAngle, numberOfInstance, patternSpacing, False, "(3)", False, True, True, "Arc1_")\n')),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("em",{parentName:"strong"},"Example Images:"))),Object(c.b)("p",null,"Below image shows before and after we update ",Object(c.b)("strong",{parentName:"p"},"Display Radius Dimension"),"."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Before Update Display Radius Dimension")),Object(c.b)("p",null,Object(c.b)("img",{alt:"after-update-number-of-instance-to-delete",src:a(163).default})),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"After Update Display Radius Dimension")),Object(c.b)("p",null,Object(c.b)("img",{alt:"after-update-display-radius-dimension",src:a(283).default})),Object(c.b)("hr",null),Object(c.b)("h3",{id:"case-8--update-display-angle-dimension"},"CASE 8 : Update Display Angle Dimension"),Object(c.b)("p",null,"If we want to update Display Angle Dimension, then we need to update value to either ",Object(c.b)("inlineCode",{parentName:"p"},"True")," or ",Object(c.b)("inlineCode",{parentName:"p"},"False"),"."),Object(c.b)("p",null,"In our code, we set this value to ",Object(c.b)("inlineCode",{parentName:"p"},"True")," which means we are displaying the Display Angle Dimension."),Object(c.b)("p",null,"We update our code for not displaying the Display Angle Dimension as given in below code sample."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-vb"}),'\' Edit a Circular Sketch Pattern\nBoolStatus = swSketchManager.EditCircularSketchStepAndRepeat(arcRadius, arcAngle, numberOfInstance, patternSpacing, False, "(3)", False, False, True, "Arc1_")\n')),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("em",{parentName:"strong"},"Example Images:"))),Object(c.b)("p",null,"Below image shows before and after we update ",Object(c.b)("strong",{parentName:"p"},"Display Angle Dimension"),"."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Before Update Display Angle Dimension")),Object(c.b)("p",null,Object(c.b)("img",{alt:"after-update-number-of-instance-to-delete",src:a(163).default})),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"After Update Display Angle Dimension")),Object(c.b)("p",null,Object(c.b)("img",{alt:"after-update-display-angle-dimension",src:a(284).default})),Object(c.b)("hr",null),Object(c.b)("h3",{id:"case-9--update-display-number-of-instances"},"CASE 9 : Update Display Number of Instances"),Object(c.b)("p",null,"If we want to update Display Number of Instances, then we need to update value to either ",Object(c.b)("inlineCode",{parentName:"p"},"True")," or ",Object(c.b)("inlineCode",{parentName:"p"},"False"),"."),Object(c.b)("p",null,"In our code, we set this value to ",Object(c.b)("inlineCode",{parentName:"p"},"True")," which means we are displaying the Display Number of Instances."),Object(c.b)("p",null,"We update our code for not displaying the Display Number of Instances as given in below code sample."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-vb"}),'\' Edit a Circular Sketch Pattern\nBoolStatus = swSketchManager.EditCircularSketchStepAndRepeat(arcRadius, arcAngle, numberOfInstance, patternSpacing, False, "(3)", False, False, False, "Arc1_")\n')),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("em",{parentName:"strong"},"Example Images:"))),Object(c.b)("p",null,"Below image shows before and after we update ",Object(c.b)("strong",{parentName:"p"},"Display Number of Instances"),"."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Before Update Display Number of Instances")),Object(c.b)("p",null,Object(c.b)("img",{alt:"after-update-number-of-instance-to-delete",src:a(163).default})),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"After Update Display Number of Instances")),Object(c.b)("p",null,Object(c.b)("img",{alt:"after-update-display-number-of-instance",src:a(285).default})),Object(c.b)("hr",null),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"This is it !!!")),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"It is indeed a very LONG post. But I try to update the code and move into the direction where we were able to use these code samples in UserForms.")),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"I hope you like my effort!!!")),Object(c.b)("p",null,"If you found anything to add or update, please let me know on my e-mail."),Object(c.b)("p",null,"Hope this post helps you to ",Object(c.b)("em",{parentName:"p"},"Edit a Circular Sketch Pattern")," with Solidworks VBA Macros."),Object(c.b)("p",null,"For more such tutorials on ",Object(c.b)("strong",{parentName:"p"},"Solidworks VBA Macro"),", do come to this blog after sometime."),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"If you like the post then please share it with your friends also.")),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Do let me know by you like this post or not!")),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Till then, Happy learning!!!")))}s.isMDXComponent=!0},152:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return d}));var n=a(0),r=a.n(n);function c(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function b(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){c(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},c=Object.keys(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=r.a.createContext({}),s=function(e){var t=r.a.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):b(b({},t),e)),a},p=function(e){var t=s(e.components);return r.a.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,c=e.originalType,l=e.parentName,i=o(e,["components","mdxType","originalType","parentName"]),p=s(a),m=n,d=p["".concat(l,".").concat(m)]||p[m]||u[m]||c;return a?r.a.createElement(d,b(b({ref:t},i),{},{components:a})):r.a.createElement(d,b({ref:t},i))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=a.length,l=new Array(c);l[0]=m;var b={};for(var o in t)hasOwnProperty.call(t,o)&&(b[o]=t[o]);b.originalType=e,b.mdxType="string"==typeof e?e:n,l[1]=b;for(var i=2;i<c;i++)l[i]=a[i];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"},163:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/after-update-number-of-instance-to-delete-82c7f1c197a256a08bd621e106dea366.png"},173:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/after-update-pattern-spacing-5af114e7a240763542004d930cfce8b9.png"},189:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/before-edit-circular-pattern-fe419f8b4250220bfc3613b83491a87d.png"},190:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/after-update-arc-radius-3677d25642762b746e9ef6dcc6f32241.png"},191:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/after-update-arc-angle-e6e465fb88ffd4a8f6d2cfbe60753bdf.png"},192:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/after-update-number-of-instances-e8ad5a826c39937cc230b222c0f53557.png"},282:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/after-update-rotation-of-pattern-5af114e7a240763542004d930cfce8b9.png"},283:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/after-update-display-radius-dimension-0170696abf2326d18f1321de4348564b.png"},284:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/after-update-display-angle-dimension-c5549bc4b01f68053a3a486453c020e8.png"},285:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/after-update-display-number-of-instance-530f548b755237d639db2499743c5f7d.png"}}]);