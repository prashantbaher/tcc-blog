"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[9754],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>u});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},k={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),c=p(n),u=o,h=c["".concat(l,".").concat(u)]||c[u]||k[u]||r;return n?a.createElement(h,i(i({ref:t},m),{},{components:n})):a.createElement(h,i({ref:t},m))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var p=2;p<r;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},42165:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>m});var a=n(87462),o=(n(67294),n(3905)),r=n(74753);const i={categories:"Solidworks-macro",title:"Solidworks Macro - Rotate/Copy Sketch Entities",permalink:"/solidworks-macros/rotate-copy-sketch-entities/",tags:["Solidworks Macro"],id:"rotate-copy-sketch-entities"},s=void 0,l={unversionedId:"rotate-copy-sketch-entities",id:"rotate-copy-sketch-entities",title:"Solidworks Macro - Rotate/Copy Sketch Entities",description:"",source:"@site/docs/solidworks-macros/012.2-rotate-copy-sketch-entities.md",sourceDirName:".",slug:"/rotate-copy-sketch-entities",permalink:"/solidworks-macros/rotate-copy-sketch-entities",draft:!1,tags:[{label:"Solidworks Macro",permalink:"/solidworks-macros/tags/solidworks-macro"}],version:"current",frontMatter:{categories:"Solidworks-macro",title:"Solidworks Macro - Rotate/Copy Sketch Entities",permalink:"/solidworks-macros/rotate-copy-sketch-entities/",tags:["Solidworks Macro"],id:"rotate-copy-sketch-entities"},sidebar:"tutorialSidebar",previous:{title:"Solidworks Macro - Move/Copy Sketch Entities",permalink:"/solidworks-macros/move-copy-sketch-entities"},next:{title:"Solidworks Macro - Toggle (Hide/Show) Sketch Relations",permalink:"/solidworks-macros/toggle-display-sketch-relation"}},p={},m=[{value:"Introduction",id:"introduction",level:2},{value:"Video of Code on YouTube",id:"video-of-code-on-youtube",level:2},{value:"Code Sample",id:"code-sample",level:2},{value:"Understanding the Code",id:"understanding-the-code",level:3},{value:"<strong>Destination Point Values</strong>",id:"destination-point-values",level:3},{value:"On X-Y Plane",id:"on-x-y-plane",level:4},{value:"On Y-Z Plane",id:"on-y-z-plane",level:4},{value:"On X-Z Plane",id:"on-x-z-plane",level:4},{value:"<strong>Cases</strong>",id:"cases",level:3},{value:"CASE 1 : Rotate Sketch Entities",id:"case-1--rotate-sketch-entities",level:4},{value:"CASE 2 : Copy and Rotate Sketch Entities",id:"case-2--copy-and-rotate-sketch-entities",level:4}],k={toc:m};function c(e){let{components:t,...i}=e;return(0,o.kt)("wrapper",(0,a.Z)({},k,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"introduction"},"Introduction"),(0,o.kt)(r.Z,{mdxType:"AdComponent"}),(0,o.kt)("p",null,"In this post, I tell you about ",(0,o.kt)("strong",{parentName:"p"},"how to Rotate/Copy Sketch Entities using Solidworks VBA Macros")," in a Sketch."),(0,o.kt)("p",null,"In this post, I explain about ",(0,o.kt)("inlineCode",{parentName:"p"},"RotateOrCopy")," method from ",(0,o.kt)("strong",{parentName:"p"},"Solidworks")," ",(0,o.kt)("inlineCode",{parentName:"p"},"ModelDoc2"),"'s ",(0,o.kt)("inlineCode",{parentName:"p"},"Extension")," object."),(0,o.kt)("p",null,"This method is ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"most updated"))," method, I found in ",(0,o.kt)("em",{parentName:"p"},"Solidworks API Help"),". "),(0,o.kt)("p",null,"So ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"use this method"))," if you want to ",(0,o.kt)("em",{parentName:"p"},"RotateOrCopy Sketch Entities"),"."),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"This post is similar to previous \ud83d\ude80 ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"/solidworks-macros/move-copy-sketch-entities"},"Sketch Transformation - Move/Copy Sketch Entities"))," post."),(0,o.kt)("p",{parentName:"admonition"},"If you have not visited my previous \ud83d\ude80 ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"/solidworks-macros/move-copy-sketch-entities"},"Sketch Transformation - Move/Copy Sketch Entities"))," post, then please do check-it if you want to learn Move/Copy Sketch Entitiess.")),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"video-of-code-on-youtube"},"Video of Code on YouTube"),(0,o.kt)("p",null,"Please see below video \ud83c\udfac on ",(0,o.kt)("strong",{parentName:"p"},"how to Rotate/Copy Sketch Entities")," from Solidworks VBA Macros."),(0,o.kt)("iframe",{src:"https://www.youtube.com/embed/k-1aorH4TdA",frameborder:"0",allowfullscreen:!0,width:"100%",height:"500"}),(0,o.kt)("p",null,"Please note that there are ",(0,o.kt)("strong",{parentName:"p"},"no explaination")," in the video. "),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Explaination")," of each line and why we write code this way is given in this post."),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"code-sample"},"Code Sample"),(0,o.kt)("p",null,"Below is the ",(0,o.kt)("inlineCode",{parentName:"p"},"code")," sample to ",(0,o.kt)("em",{parentName:"p"},"Rotate/Copy Sketch Entities"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"Option Explicit\n\n' Create variable for Solidworks application\nDim swApp As SldWorks.SldWorks\n\n' Create variable for Solidworks document\nDim swDoc As SldWorks.ModelDoc2\n\n' Boolean Variable\nDim BoolStatus As Boolean\n\n' Create variable for Solidworks Sketch Manager\nDim swSketchManager As SldWorks.SketchManager\n\n' Create Variable for Solidworks Sketch Segment\nDim swSketchSegment As SldWorks.SketchSegment\n\n' Main function of our VBA program\nSub main()\n\n  ' Set Solidworks variable to Solidworks application\n  Set swApp = Application.SldWorks\n  \n  ' Create string type variable for storing default part location\n  Dim defaultTemplate As String\n\n  ' Set value of this string type variable to \"Default part template\"\n  defaultTemplate = swApp.GetUserPreferenceStringValue(swUserPreferenceStringValue_e.swDefaultTemplatePart)\n\n  ' Set Solidworks document to new part document\n  Set swDoc = swApp.NewDocument(defaultTemplate, 0, 0, 0)\n  \n  '-----------------------UNIT CONVERSION----------------------------------------\n\n  ' Local variables used as Conversion Factors\n  Dim LengthConversionFactor As Double\n  Dim AngleConversionFactor As Double\n  \n  ' Use a Select Case, to get the length of active Unit and set the different factors\n  Select Case swDoc.GetUnits(0)       ' GetUnits function gives us, active unit\n    \n    Case swMETER    ' If length is in Meter\n      LengthConversionFactor = 1\n      AngleConversionFactor = 1\n    \n    Case swMM       ' If length is in MM\n      LengthConversionFactor = 1 / 1000\n      AngleConversionFactor = 1 * 0.01745329\n    \n    Case swCM       ' If length is in CM\n      LengthConversionFactor = 1 / 100\n      AngleConversionFactor = 1 * 0.01745329\n    \n    Case swINCHES   ' If length is in INCHES\n      LengthConversionFactor = 1 * 0.0254\n      AngleConversionFactor = 1 * 0.01745329\n    \n    Case swFEET     ' If length is in FEET\n      LengthConversionFactor = 1 * (0.0254 * 12)\n      AngleConversionFactor = 1 * 0.01745329\n    \n    Case swFEETINCHES     ' If length is in FEET & INCHES\n      LengthConversionFactor = 1 * 0.0254  ' For length we use sama as Inch\n      AngleConversionFactor = 1 * 0.01745329\n    \n    Case swANGSTROM        ' If length is in ANGSTROM\n      LengthConversionFactor = 1 / 10000000000#\n      AngleConversionFactor = 1 * 0.01745329\n    \n    Case swNANOMETER       ' If length is in NANOMETER\n      LengthConversionFactor = 1 / 1000000000\n      AngleConversionFactor = 1 * 0.01745329\n    \n    Case swMICRON       ' If length is in MICRON\n      LengthConversionFactor = 1 / 1000000\n      AngleConversionFactor = 1 * 0.01745329\n  End Select\n\n  '----------------------------------------------------------------\n\n  ' Select Front Plane\n  BoolStatus = swDoc.Extension.SelectByID2(\"Front Plane\", \"PLANE\", 0, 0, 0, False, 0, Nothing, swSelectOption_e.swSelectOptionDefault)\n\n  ' Set Sketch manager for our sketch\n  Set swSketchManager = swDoc.SketchManager\n\n  ' Insert a sketch into selected plane\n  swSketchManager.InsertSketch True\n  \n  ' Create a local variable for CenterPoint ractangle\n  Dim vSketch As Variant\n  \n  ' Create CenterPoint ractangle\n  vSketch = swSketchManager.CreateCenterRectangle(0, 0, 0, 1 * LengthConversionFactor, 1 * LengthConversionFactor, 0)\n    \n  ' De-select the lines after creation\n  swDoc.ClearSelection2 True\n  \n  ' Select all lines of CenterPoint Ractangle\n  BoolStatus = swDoc.Extension.SelectByID2(\"Line1\", \"SKETCHSEGMENT\", 0, 0, 0, True, 0, Nothing, swSelectOption_e.swSelectOptionDefault)\n  BoolStatus = swDoc.Extension.SelectByID2(\"Line2\", \"SKETCHSEGMENT\", 0, 0, 0, True, 0, Nothing, swSelectOption_e.swSelectOptionDefault)\n  BoolStatus = swDoc.Extension.SelectByID2(\"Line3\", \"SKETCHSEGMENT\", 0, 0, 0, True, 0, Nothing, swSelectOption_e.swSelectOptionDefault)\n  BoolStatus = swDoc.Extension.SelectByID2(\"Line4\", \"SKETCHSEGMENT\", 0, 0, 0, True, 0, Nothing, swSelectOption_e.swSelectOptionDefault)\n  \n  ' Rotate CenterPoint Ractangle by 45 degree only\n  swDoc.Extension.RotateOrCopy False, 1, True, 0, 0, 0, 0, 0, 1, 45 * AngleConversionFactor\n  \n  ' De-select all after creation\n  swDoc.ClearSelection2 True\n  \n  ' Show Front View after Circular Sketch Pattern\n  swDoc.ShowNamedView2 \"\", swStandardViews_e.swFrontView\n  \n  ' Zoom to fit screen in Solidworks Window\n  swDoc.ViewZoomtofit2\n  \nEnd Sub\n")),(0,o.kt)("hr",null),(0,o.kt)(r.Z,{mdxType:"AdComponent"}),(0,o.kt)("h3",{id:"understanding-the-code"},"Understanding the Code"),(0,o.kt)("p",null,"Now let us walk through ",(0,o.kt)("strong",{parentName:"p"},"each line")," in the above code, and ",(0,o.kt)("strong",{parentName:"p"},"understand")," the meaning and purpose of every line."),(0,o.kt)("p",null,"I also give some link so that you can go through them if there are anything I explained in ",(0,o.kt)("strong",{parentName:"p"},"previous posts"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"Option Explicit\n")),(0,o.kt)("p",null,"This line forces us to define every variable we are going to use. "),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"For more information please visit \ud83d\ude80 ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"/solidworks-macros/open-new-document"},"Solidworks Macros - Open new Part document"))," post.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Create variable for Solidworks application\nDim swApp As SldWorks.SldWorks\n")),(0,o.kt)("p",null,"In this line, we create a variable which we named as ",(0,o.kt)("inlineCode",{parentName:"p"},"swApp")," and the type of this ",(0,o.kt)("inlineCode",{parentName:"p"},"swApp")," variable is ",(0,o.kt)("inlineCode",{parentName:"p"},"SldWorks.SldWorks"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Create variable for Solidworks document\nDim swDoc As SldWorks.ModelDoc2\n")),(0,o.kt)("p",null,"In this line, we create a variable which we named as ",(0,o.kt)("inlineCode",{parentName:"p"},"swDoc")," and the type of this ",(0,o.kt)("inlineCode",{parentName:"p"},"swDoc")," variable is ",(0,o.kt)("inlineCode",{parentName:"p"},"SldWorks.ModelDoc2"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Boolean Variable\nDim BoolStatus As Boolean\n")),(0,o.kt)("p",null,"In this line, we create a variable named ",(0,o.kt)("inlineCode",{parentName:"p"},"BoolStatus")," as ",(0,o.kt)("inlineCode",{parentName:"p"},"Boolean")," object type."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Create variable for Solidworks Sketch Manager\nDim swSketchManager As SldWorks.SketchManager\n")),(0,o.kt)("p",null,"In above line, we create variable ",(0,o.kt)("inlineCode",{parentName:"p"},"swSketchManager")," for ",(0,o.kt)("strong",{parentName:"p"},"Solidworks Sketch Manager"),"."),(0,o.kt)("p",null,"As the name suggested, a ",(0,o.kt)("strong",{parentName:"p"},"Sketch Manager")," holds variours methods and properties to manage ",(0,o.kt)("em",{parentName:"p"},"Sketches"),"."),(0,o.kt)("p",null,"To see methods and properties related to ",(0,o.kt)("inlineCode",{parentName:"p"},"SketchManager")," object, please visit \ud83d\ude80 ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://help.solidworks.com/2017/english/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.ISketchManager_members.html"},"this page of Solidworks API Help"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Create variable for Solidworks Sketch Segment\nDim swSketchSegment As SldWorks.SketchSegment\n")),(0,o.kt)("p",null,"In this line, we Create a variable which we named as ",(0,o.kt)("inlineCode",{parentName:"p"},"swSketchSegment")," and the type of this ",(0,o.kt)("inlineCode",{parentName:"p"},"swSketchSegment")," variable is ",(0,o.kt)("inlineCode",{parentName:"p"},"SldWorks.SketchSegment"),"."),(0,o.kt)("p",null,"We create variable ",(0,o.kt)("inlineCode",{parentName:"p"},"swSketchSegment")," for ",(0,o.kt)("strong",{parentName:"p"},"Solidworks Sketch Segments"),"."),(0,o.kt)("p",null,"To see methods and properties related to ",(0,o.kt)("inlineCode",{parentName:"p"},"swSketchSegment")," object, please visit \ud83d\ude80 ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://help.solidworks.com/2019/English/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.ISketchSegment_members.html"},"this page of Solidworks API Help"))),(0,o.kt)("p",null,"These all are our global variables."),(0,o.kt)("p",null,"As you can see in code sample, they are ",(0,o.kt)("strong",{parentName:"p"},"Solidworks API Objects"),"."),(0,o.kt)("p",null,"So basically I group all the ",(0,o.kt)("strong",{parentName:"p"},"Solidworks API Objects")," in one place."),(0,o.kt)("p",null,"I have also place ",(0,o.kt)("inlineCode",{parentName:"p"},"boolean")," type object at top also, because after certain point we will ",(0,o.kt)("em",{parentName:"p"},"need")," this variable frequently."),(0,o.kt)("p",null,"Thus, I have started placing it here."),(0,o.kt)("p",null,"Next is our ",(0,o.kt)("inlineCode",{parentName:"p"},"Sub")," procedure which has name of ",(0,o.kt)("inlineCode",{parentName:"p"},"main"),". "),(0,o.kt)("p",null,"This procedure hold all the ",(0,o.kt)("em",{parentName:"p"},"statements (instructions)")," we give to computer."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Set Solidworks variable to Solidworks application\nSet swApp = Application.SldWorks\n")),(0,o.kt)("p",null,"In this line, we set the value of our Solidworks variable ",(0,o.kt)("inlineCode",{parentName:"p"},"swApp"),"; which we define earlier; to Solidworks application."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Create string type variable for storing default part location\nDim defaultTemplate As String\n' Set value of this string type variable to \"Default part template\"\ndefaultTemplate = swApp.GetUserPreferenceStringValue(swUserPreferenceStringValue_e.swDefaultTemplatePart)\n")),(0,o.kt)("p",null,"In 1st statement of above example, we are defining a variable of ",(0,o.kt)("inlineCode",{parentName:"p"},"string")," type and named it as ",(0,o.kt)("inlineCode",{parentName:"p"},"defaultTemplate"),"."),(0,o.kt)("p",null,"This variable ",(0,o.kt)("inlineCode",{parentName:"p"},"defaultTemplate"),", hold the location the location of ",(0,o.kt)("strong",{parentName:"p"},"Default Part Template"),"."),(0,o.kt)("p",null,"In 2nd line of above example. we assign value to our newly define ",(0,o.kt)("inlineCode",{parentName:"p"},"defaultTemplate")," variable."),(0,o.kt)("p",null,"We assign the value by using a ",(0,o.kt)("em",{parentName:"p"},"Method")," named ",(0,o.kt)("inlineCode",{parentName:"p"},"GetUserPreferenceStringValue()"),". "),(0,o.kt)("p",null,"This ",(0,o.kt)("inlineCode",{parentName:"p"},"GetUserPreferenceStringValue()")," method is a part of our main Solidworks variable ",(0,o.kt)("inlineCode",{parentName:"p"},"swApp"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Set Solidworks document to new part document\nSet swDoc = swApp.NewDocument(defaultTemplate, 0, 0, 0)\n")),(0,o.kt)("p",null,"In this line, we set the value of our ",(0,o.kt)("inlineCode",{parentName:"p"},"swDoc")," variable to new document."),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"For ",(0,o.kt)("strong",{parentName:"p"},"detailed information")," about these lines please visit \ud83d\ude80 ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"/solidworks-macros/open-new-document"},"Solidworks Macros - Open new Part document"))," post."),(0,o.kt)("p",{parentName:"admonition"},"I have discussed them ",(0,o.kt)("strong",{parentName:"p"},"thoroghly")," in \ud83d\ude80 ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"/solidworks-macros/open-new-document"},"Solidworks Macros - Open new Part document"))," post, so do checkout that post if you want to understand above code in more detail.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"'-----------------------UNIT CONVERSION----------------------------------------\n\n' Local variables used as Conversion Factors\nDim LengthConversionFactor As Double\nDim AngleConversionFactor As Double\n\n' Use a Select Case, to get the length of active Unit and set the different factors\nSelect Case swDoc.GetUnits(0)       ' GetUnits function gives us, active unit\n  \n  Case swMETER    ' If length is in Meter\n    LengthConversionFactor = 1\n    AngleConversionFactor = 1\n  \n  Case swMM       ' If length is in MM\n    LengthConversionFactor = 1 / 1000\n    AngleConversionFactor = 1 * 0.01745329\n  \n  Case swCM       ' If length is in CM\n    LengthConversionFactor = 1 / 100\n    AngleConversionFactor = 1 * 0.01745329\n  \n  Case swINCHES   ' If length is in INCHES\n    LengthConversionFactor = 1 * 0.0254\n    AngleConversionFactor = 1 * 0.01745329\n  \n  Case swFEET     ' If length is in FEET\n    LengthConversionFactor = 1 * (0.0254 * 12)\n    AngleConversionFactor = 1 * 0.01745329\n  \n  Case swFEETINCHES     ' If length is in FEET & INCHES\n    LengthConversionFactor = 1 * 0.0254  ' For length we use sama as Inch\n    AngleConversionFactor = 1 * 0.01745329\n  \n  Case swANGSTROM        ' If length is in ANGSTROM\n    LengthConversionFactor = 1 / 10000000000#\n    AngleConversionFactor = 1 * 0.01745329\n  \n  Case swNANOMETER       ' If length is in NANOMETER\n    LengthConversionFactor = 1 / 1000000000\n    AngleConversionFactor = 1 * 0.01745329\n  \n  Case swMICRON       ' If length is in MICRON\n    LengthConversionFactor = 1 / 1000000\n    AngleConversionFactor = 1 * 0.01745329\nEnd Select\n\n'----------------------------------------------------------------\n")),(0,o.kt)("p",null,"Above code sample shows how to ",(0,o.kt)("strong",{parentName:"p"},"fix Solidworks API Unit issue"),". "),(0,o.kt)("p",null,"We ",(0,o.kt)("em",{parentName:"p"},"1st")," get the ",(0,o.kt)("em",{parentName:"p"},"current unit")," of the part and apply the ",(0,o.kt)("em",{parentName:"p"},"switch")," statements to update our ",(0,o.kt)("em",{parentName:"p"},"Length and Angle Conversion factors"),". "),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"I have already explained in detail about ",(0,o.kt)("strong",{parentName:"p"},"Fixing Solidworks API Unit Issue")," in \ud83d\ude80 ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"/solidworks-macros/unit-correction"},"General - Fix Unit Issue"))," blog post. ")),(0,o.kt)("p",null,"Do checkout above post for Fixing Solidworks API Issue."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},'\' Select Front Plane\nBoolStatus = swDoc.Extension.SelectByID2("Front Plane", "PLANE", 0, 0, 0, False, 0, Nothing, swSelectOption_e.swSelectOptionDefault)\n')),(0,o.kt)("p",null,"In above line, we select the ",(0,o.kt)("em",{parentName:"p"},"front plane")," by using ",(0,o.kt)("inlineCode",{parentName:"p"},"SelectByID2")," method from ",(0,o.kt)("inlineCode",{parentName:"p"},"Extension")," object."),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"For more information about selection method please visit \ud83d\ude80 ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"/solidworks-macros/select-plane-from-tree"},"Solidworks Macros - Selection Methods"))," post.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Set Sketch manager for our sketch\nSet swSketchManager = swDoc.SketchManager\n")),(0,o.kt)("p",null,"In above line, we set the ",(0,o.kt)("em",{parentName:"p"},"Sketch manager")," variable to ",(0,o.kt)("em",{parentName:"p"},"current document's sketch manager"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Insert a sketch into selected plane\nswSketchManager.InsertSketch True\n")),(0,o.kt)("p",null,"In above line, we use ",(0,o.kt)("inlineCode",{parentName:"p"},"InsertSketch")," method of ",(0,o.kt)("em",{parentName:"p"},"SketchManager")," and give ",(0,o.kt)("inlineCode",{parentName:"p"},"True")," value."),(0,o.kt)("p",null,"This method allows us to insert a sketch in selected plane."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Create a local variable for CenterPoint ractangle\nDim vSketch As Variant\n\n' Create CenterPoint ractangle\nvSketch = swSketchManager.CreateCenterRectangle(0, 0, 0, 1 * LengthConversionFactor, 1 * LengthConversionFactor, 0)\n")),(0,o.kt)("p",null,"In above code sample, we do following:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Create a local variable named ",(0,o.kt)("inlineCode",{parentName:"p"},"vSketch"),", which is ",(0,o.kt)("inlineCode",{parentName:"p"},"Variant")," type.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"In 2nd line, we Create CenterPoint ractangle by using ",(0,o.kt)("inlineCode",{parentName:"p"},"CreateCenterRectangle")," method."),(0,o.kt)("p",{parentName:"li"},"This ",(0,o.kt)("inlineCode",{parentName:"p"},"CreateCenterRectangle")," method is available in ",(0,o.kt)("inlineCode",{parentName:"p"},"swSketchManager")," variable.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"This ",(0,o.kt)("inlineCode",{parentName:"p"},"CreateCenterRectangle")," method return a value. We store that value in previously defined variable  ",(0,o.kt)("inlineCode",{parentName:"p"},"vSketch"),"."))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Side of CenterPoint ractangle:")," ",(0,o.kt)("em",{parentName:"p"},'1" or 1 inch')),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"If you want to know more about ",(0,o.kt)("inlineCode",{parentName:"p"},"CreateCenterRectangle")," method, then please visit \ud83d\ude80 ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"/solidworks-macros/create-center-rectangle"},"Sketch - Create Center Rectangle"))," post.")),(0,o.kt)("p",null,"I have given a detail explaination about ",(0,o.kt)("inlineCode",{parentName:"p"},"CreateCenterRectangle")," method there."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' De-select the lines after creation\nswDoc.ClearSelection2 True\n")),(0,o.kt)("p",null,"After creating a Square, we de-select all entities."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},'\' Select all lines of Center Ractangle\nBoolStatus = swDoc.Extension.SelectByID2("Line1", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, swSelectOption_e.swSelectOptionDefault)\nBoolStatus = swDoc.Extension.SelectByID2("Line2", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, swSelectOption_e.swSelectOptionDefault)\nBoolStatus = swDoc.Extension.SelectByID2("Line3", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, swSelectOption_e.swSelectOptionDefault)\nBoolStatus = swDoc.Extension.SelectByID2("Line4", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, swSelectOption_e.swSelectOptionDefault)\n')),(0,o.kt)("p",null,"In above line of code, we select all lines of Center Ractangle by using ",(0,o.kt)("inlineCode",{parentName:"p"},"SelectByID2")," method from ",(0,o.kt)("inlineCode",{parentName:"p"},"swDoc.Extension")," object."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"I have not create separate variable ",(0,o.kt)("inlineCode",{parentName:"p"},"Extension"),", because I like to avoid creating extra objects.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Please not that we have selected only Sides, not the diagonals.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Rotate Center Ractangle\nswDoc.Extension.RotateOrCopy False, 1, True, 0, 0, 0, 0, 0, 1, 45 * AngleConversionFactor\n")),(0,o.kt)("p",null,'For "',(0,o.kt)("strong",{parentName:"p"},"Rotating"),'" a sketch entity, we need ',(0,o.kt)("inlineCode",{parentName:"p"},"RotateOrCopy")," method from ",(0,o.kt)("strong",{parentName:"p"},"Solidworks")," ",(0,o.kt)("inlineCode",{parentName:"p"},"ModelDoc2"),"'s ",(0,o.kt)("inlineCode",{parentName:"p"},"Extension")," object."),(0,o.kt)("p",null,"This ",(0,o.kt)("inlineCode",{parentName:"p"},"RotateOrCopy")," method takes following parameters as explained:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Copy")," : ",(0,o.kt)("em",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"em"},"True")," to copy the sketch entities, ",(0,o.kt)("inlineCode",{parentName:"em"},"False")," to not."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"NumCopies")," : ",(0,o.kt)("em",{parentName:"p"},"Number of copies you want to create."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"KeepRelations")," : ",(0,o.kt)("em",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"em"},"True")," to keep sketch relations after Rotate or Copy operation, ",(0,o.kt)("inlineCode",{parentName:"em"},"False")," to not."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"BaseX")," : ",(0,o.kt)("em",{parentName:"p"},"X coordinate of the base point from which to Rotate the sketch entities."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"BaseY")," : ",(0,o.kt)("em",{parentName:"p"},"Y coordinate of the base point from which to Rotate the sketch entities."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"BaseZ")," : ",(0,o.kt)("em",{parentName:"p"},"Z coordinate of the base point from which to Rotate the sketch entities."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"DestX")," : ",(0,o.kt)("em",{parentName:"p"},"X coordinate of the destination point from which to Rotate the sketch entities."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"DestY")," : ",(0,o.kt)("em",{parentName:"p"},"Y coordinate of the destination point from which to Rotate the sketch entities."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"DestZ")," : ",(0,o.kt)("em",{parentName:"p"},"Z coordinate of the destination point from which to Rotate the sketch entities."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Angle")," : ",(0,o.kt)("em",{parentName:"p"},"Angle of Rotation by which we rotate the selected sketch entities.")))),(0,o.kt)("admonition",{title:"NOTE ",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"There are no return value after this function.")),(0,o.kt)("hr",null),(0,o.kt)(r.Z,{mdxType:"AdComponent"}),(0,o.kt)("h3",{id:"destination-point-values"},(0,o.kt)("strong",{parentName:"h3"},"Destination Point Values")),(0,o.kt)("p",null,"Destination Point is defined by following parameters:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"DestX"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"DestY"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"DestZ")))),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"The values of these parameters are mainly dependent on the plane, you have selected.")),(0,o.kt)("p",null,"There values as per ",(0,o.kt)("strong",{parentName:"p"},"Default Planes")," is given below."),(0,o.kt)("h4",{id:"on-x-y-plane"},"On X-Y Plane"),(0,o.kt)("p",null,"When ",(0,o.kt)("strong",{parentName:"p"},"X-Y")," plane is selected, then values are:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"DestX")," = 0")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"DestY")," = 0")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"DestZ")," = 1"))),(0,o.kt)("h4",{id:"on-y-z-plane"},"On Y-Z Plane"),(0,o.kt)("p",null,"When ",(0,o.kt)("strong",{parentName:"p"},"Y-Z")," plane is selected, then values are:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"DestX")," = 1")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"DestY")," = 0")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"DestZ")," = 0"))),(0,o.kt)("h4",{id:"on-x-z-plane"},"On X-Z Plane"),(0,o.kt)("p",null,"When ",(0,o.kt)("strong",{parentName:"p"},"X-Z")," plane is selected, then values are:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"DestX")," = 0")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"DestY")," = 1")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"DestZ")," = 0"))),(0,o.kt)("p",null,"Since we are creating our Sketch in ",(0,o.kt)("strong",{parentName:"p"},"X-Y")," plane, hence I used the values accordingly."),(0,o.kt)("hr",null),(0,o.kt)(r.Z,{mdxType:"AdComponent"}),(0,o.kt)("h3",{id:"cases"},(0,o.kt)("strong",{parentName:"h3"},"Cases")),(0,o.kt)("p",null,"In this section, we will go through different cases by "),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("em",{parentName:"p"},"Modifying different parameters"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("em",{parentName:"p"},"See images, before and after parameter modification")))),(0,o.kt)("hr",null),(0,o.kt)("h4",{id:"case-1--rotate-sketch-entities"},"CASE 1 : Rotate Sketch Entities"),(0,o.kt)("p",null,"In our code, if we want to ",(0,o.kt)("em",{parentName:"p"},"Rotate Sketch Entities"),", then we need to use code sample as given below:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Rotate circle\nswDoc.Extension.RotateOrCopy False, 1, True, 0, 0, 0, 0, 0, 1, 45 * AngleConversionFactor\n")),(0,o.kt)("p",null,"In above code we ",(0,o.kt)("strong",{parentName:"p"},"Rotate Sketch Entities")," with:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Base Point")," : ",(0,o.kt)("inlineCode",{parentName:"p"},"0, 0, 0"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Rotation Angle")," : ",(0,o.kt)("em",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"em"},"45 Degree")," Anti-clock wise"),"."))),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"If you want to rotate Clock-wise, then then use ",(0,o.kt)("strong",{parentName:"p"},"Negeative (-ve)")," value.")),(0,o.kt)("p",null,"In above code we need to set following parameters:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Copy")," : ",(0,o.kt)("inlineCode",{parentName:"p"},"False")," to not create a copy.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"NumCopies")," : ",(0,o.kt)("em",{parentName:"p"},"Number of copies you want to create to 1 which is itself."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"KeepRelations")," : ",(0,o.kt)("em",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"em"},"True")," to keep sketch relations after Rotate or Copy operation."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"BaseX")," : ",(0,o.kt)("em",{parentName:"p"},"X coordinate of the base point  = 0"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"BaseY")," : ",(0,o.kt)("em",{parentName:"p"},"Y coordinate of the base point  = 0"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"BaseZ")," : ",(0,o.kt)("em",{parentName:"p"},"Z coordinate of the base point  = 0")))),(0,o.kt)("p",null,"Since we are creating sketch in ",(0,o.kt)("strong",{parentName:"p"},"X-Y plane"),", hence I used values mentioned in ",(0,o.kt)("em",{parentName:"p"},(0,o.kt)("a",{parentName:"em",href:"#destination-point-values"},"Destination Point Values"))," section of this post."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"DestX")," : ",(0,o.kt)("em",{parentName:"p"},"X coordinate of the destination  = 0"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"DestY")," : ",(0,o.kt)("em",{parentName:"p"},"Y coordinate of the destination point  = 0"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"DestZ")," : ",(0,o.kt)("em",{parentName:"p"},"Z coordinate of the destination point  = 1"),"  ")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Rotation Angle")," : ",(0,o.kt)("em",{parentName:"p"},"Angle of Rotation by which we rotate the selected sketch entities = ",(0,o.kt)("inlineCode",{parentName:"em"},"45 Degree")," Anti-clock wise"),"."))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"Example Images:"))),(0,o.kt)("p",null,"Below image shows before and after we ",(0,o.kt)("strong",{parentName:"p"},"Rotate Sketch Entitny"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Before Rotate Sketch Entitny")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"before-rotate",src:n(5386).Z,width:"1123",height:"554"})),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"After Rotate Sketch Entitny")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"after-Rotate",src:n(88037).Z,width:"1120",height:"555"})),(0,o.kt)("h4",{id:"case-2--copy-and-rotate-sketch-entities"},"CASE 2 : Copy and Rotate Sketch Entities"),(0,o.kt)("p",null,"In our code, if we want to ",(0,o.kt)("em",{parentName:"p"},"Copy and Rotate Sketch Entities"),", then we need to use code sample as given below:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Copy circle\nswDoc.Extension.RotateOrCopy True, 2, True, 0, 0, 0, destinationCoOrdinateInXDir, destinationCoOrdinateInYDir, 0\n")),(0,o.kt)("p",null,"In above code we ",(0,o.kt)("strong",{parentName:"p"},"Rotate Sketch Entities")," with:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Create Copy")," : ",(0,o.kt)("inlineCode",{parentName:"p"},"True"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Base Point")," : ",(0,o.kt)("inlineCode",{parentName:"p"},"0, 0, 0"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Rotation Angle of Copied Entity")," : ",(0,o.kt)("em",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"em"},"45 Degree")," Anti-clock wise"),"."))),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"If you want to rotate Clock-wise, then then use ",(0,o.kt)("strong",{parentName:"p"},"Negeative (-ve)")," value.")),(0,o.kt)("p",null,"In above code we need to set following parameters:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Copy")," : ",(0,o.kt)("inlineCode",{parentName:"p"},"True")," to not create a copy.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"NumCopies")," : ",(0,o.kt)("em",{parentName:"p"},"Number of copies you want to create to 2 which is itself."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"KeepRelations")," : ",(0,o.kt)("em",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"em"},"True")," to keep sketch relations after Rotate or Copy operation."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"BaseX")," : ",(0,o.kt)("em",{parentName:"p"},"X coordinate of the base point  = 0"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"BaseY")," : ",(0,o.kt)("em",{parentName:"p"},"Y coordinate of the base point  = 0"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"BaseZ")," : ",(0,o.kt)("em",{parentName:"p"},"Z coordinate of the base point  = 0")))),(0,o.kt)("p",null,"Since we are creating sketch in ",(0,o.kt)("strong",{parentName:"p"},"X-Y plane"),", hence I used values mentioned in ",(0,o.kt)("em",{parentName:"p"},(0,o.kt)("a",{parentName:"em",href:"#destination-point-values"},"Destination Point Values"))," sections of this post."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"DestX")," : ",(0,o.kt)("em",{parentName:"p"},"X coordinate of the destination  = 0"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"DestY")," : ",(0,o.kt)("em",{parentName:"p"},"Y coordinate of the destination point  = 0"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"DestZ")," : ",(0,o.kt)("em",{parentName:"p"},"Z coordinate of the destination point  = 1"),"  ")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Rotation Angle")," : ",(0,o.kt)("em",{parentName:"p"},"Angle of Rotation by which we rotate the selected sketch entities = ",(0,o.kt)("inlineCode",{parentName:"em"},"45 Degree")," Anti-clock wise"),"."))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"Example Images:"))),(0,o.kt)("p",null,"Below image shows before and after we ",(0,o.kt)("strong",{parentName:"p"},"Rotate Sketch Entitny"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Before Rotate Sketch Entitny")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"before-rotate",src:n(5386).Z,width:"1123",height:"554"})),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"After Rotate Sketch Entitny")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"after-rotate-copy",src:n(12109).Z,width:"1121",height:"555"})),(0,o.kt)("hr",null),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"This is it !!!")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"I hope my efforts will helpful to someone!")),(0,o.kt)("p",null,"If you found anything to ",(0,o.kt)("strong",{parentName:"p"},"add or update"),", please let me know on my ",(0,o.kt)("em",{parentName:"p"},"e-mail"),"."),(0,o.kt)("p",null,"Hope this post helps you to ",(0,o.kt)("em",{parentName:"p"},"Rotate/Copy Sketch Entities")," with Solidworks VBA Macros."),(0,o.kt)("p",null,"For more such tutorials on ",(0,o.kt)("strong",{parentName:"p"},"Solidworks VBA Macro"),", do come to this blog after sometime."),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"If you like the post then please share it with your friends also.")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Do let me know by you like this post or not!")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Till then, Happy learning!!!")))}c.isMDXComponent=!0},74753:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(67294);class o extends a.Component{componentDidMount(){(()=>{const e=document.createElement("script");e.src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js",e.async=!0,e.defer=!0,document.body.insertBefore(e,document.body.firstChild)})(),(window.adsbygoogle=window.adsbygoogle||[]).push({})}render(){return a.createElement("ins",{className:"adsbygoogle",style:{display:"block"},"data-ad-client":"ca-pub-8158659264340002","data-ad-slot":"6644001766","data-ad-format":"auto","data-full-width-responsive":"true"})}}},88037:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/after-Rotate-c3f376c62b8fe7637a9607114fcc7e47.png"},12109:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/after-rotate-copy-a5a65287c46f18bb65fa555cc9da0bbd.png"},5386:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/before-rotate-95ba4720f9d992c772ccb39bbcda7176.png"}}]);