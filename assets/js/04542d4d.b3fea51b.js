"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[2837],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>u});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),k=p(n),u=r,N=k["".concat(s,".").concat(u)]||k[u]||m[u]||o;return n?a.createElement(N,i(i({ref:t},d),{},{components:n})):a.createElement(N,i({ref:t},d))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=k;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},25011:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>k,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var a=n(87462),r=(n(67294),n(3905)),o=n(74753);const i={categories:"Solidworks-macro",title:"SOLIDWORKS Macro - Create Revolve Cut",permalink:"/solidworks-macros/create-revolve-cut-feature/",tags:["Solidworks Macro"],id:"feature-create-revolve-cut"},l=void 0,s={unversionedId:"feature-create-revolve-cut",id:"feature-create-revolve-cut",title:"SOLIDWORKS Macro - Create Revolve Cut",description:"",source:"@site/docs/solidworks-macros/016.2-feature-create-revolve-cut.md",sourceDirName:".",slug:"/feature-create-revolve-cut",permalink:"/solidworks-macros/feature-create-revolve-cut",draft:!1,tags:[{label:"Solidworks Macro",permalink:"/solidworks-macros/tags/solidworks-macro"}],version:"current",frontMatter:{categories:"Solidworks-macro",title:"SOLIDWORKS Macro - Create Revolve Cut",permalink:"/solidworks-macros/create-revolve-cut-feature/",tags:["Solidworks Macro"],id:"feature-create-revolve-cut"},sidebar:"tutorialSidebar",previous:{title:"SOLIDWORKS Macro - Create Extrude Cut",permalink:"/solidworks-macros/feature-create-extrude-cut"},next:{title:"SOLIDWORKS Macro - Create Sweep Cut",permalink:"/solidworks-macros/feature-create-sweep-cut"}},p={},d=[{value:"Objective",id:"objective",level:2},{value:"Video of Code on YouTube",id:"video-of-code-on-youtube",level:2},{value:"Code Sample",id:"code-sample",level:2},{value:"Prerequisite",id:"prerequisite",level:2},{value:"Understanding the Code",id:"understanding-the-code",level:2},{value:"FeatureRevolve2 Method Parameters Details",id:"featurerevolve2-method-parameters-details",level:2}],m={toc:d};function k(e){let{components:t,...i}=e;return(0,r.kt)("wrapper",(0,a.Z)({},m,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"objective"},"Objective"),(0,r.kt)(o.Z,{mdxType:"AdComponent"}),(0,r.kt)("p",null,"In this post, I tell you about ",(0,r.kt)("em",{parentName:"p"},"how to create ",(0,r.kt)("strong",{parentName:"em"},"Revolve Cut")," through SOLIDWORKS VBA Macros")," in a sketch."),(0,r.kt)("p",null,"This method is ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"most updated"))," method, so ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"use this method"))," if you want to create a new ",(0,r.kt)("strong",{parentName:"p"},"Revolve Cut"),"."),(0,r.kt)("h2",{id:"video-of-code-on-youtube"},"Video of Code on YouTube"),(0,r.kt)("p",null,"Please see below \ud83c\udfac video on ",(0,r.kt)("strong",{parentName:"p"},"how to create Revolve Cut")," from SOLIDWORKS VBA Macros."),(0,r.kt)("iframe",{src:"https://www.youtube.com/embed/rR71IxirNI0",frameborder:"0",allowfullscreen:!0,width:"100%",height:"500"}),(0,r.kt)("p",null,"Please note that there are ",(0,r.kt)("strong",{parentName:"p"},"no explanation")," in the video. "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Explanation")," of each line and why we write code this way is given in this post."),(0,r.kt)("h2",{id:"code-sample"},"Code Sample"),(0,r.kt)("p",null,"Below is the ",(0,r.kt)("inlineCode",{parentName:"p"},"code")," sample for creating ",(0,r.kt)("em",{parentName:"p"},"Revolve Cut"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"Option Explicit\n\n' Create variable for Solidworks application\nDim swApp As SldWorks.SldWorks\n' Create variable for Solidworks document\nDim swDoc As SldWorks.ModelDoc2\n' Creating variable for Solidworks Feature\nDim swFeature As SldWorks.Feature\n' Boolean Variable\nDim boolStatus As Boolean\n\n' Revolve Boss/Extrude program\nSub main()\n\n    ' Setting Solidworks variable to current application\n    Set swApp = Application.SldWorks\n    \n    ' Check if Solidworks is opened or not\n    If swApp Is Nothing Then\n        MsgBox (\"Solidworks is not opened\")\n        Exit Sub\n    End If\n    \n    ' Setting Solidworks document variable to opened part document\n    Set swDoc = swApp.ActiveDoc\n    \n    ' Check if Solidworks document is opened or not\n    If swDoc Is Nothing Then\n        MsgBox (\"Solidworks document is not opened. Please open a document.\")\n        Exit Sub\n    End If\n    \n    '-----------------------BELOW IS THE SOLUTION----------------------------------------\n\n    ' Local variables used as Conversion Factors\n    Dim LengthConversionFactor As Double\n    Dim AngleConversionFactor As Double\n  \n    ' Use a Select Case, to get the length of active Unit and set the different factors\n    Select Case swDoc.GetUnits(0)       ' GetUnits function gives us, active unit\n      \n      Case swMETER    ' If length is in Meter\n        LengthConversionFactor = 1\n        AngleConversionFactor = 1\n      \n      Case swMM       ' If length is in MM\n        LengthConversionFactor = 1 / 1000\n        AngleConversionFactor = 1 * 0.01745329\n      \n      Case swCM       ' If length is in CM\n        LengthConversionFactor = 1 / 100\n        AngleConversionFactor = 1 * 0.01745329\n      \n      Case swINCHES   ' If length is in INCHES\n        LengthConversionFactor = 1 * 0.0254\n        AngleConversionFactor = 1 * 0.01745329\n      \n      Case swFEET     ' If length is in FEET\n        LengthConversionFactor = 1 * (0.0254 * 12)\n        AngleConversionFactor = 1 * 0.01745329\n      \n      Case swFEETINCHES     ' If length is in FEET & INCHES\n        LengthConversionFactor = 1 * 0.0254  ' For length we use sama as Inch\n        AngleConversionFactor = 1 * 0.01745329\n      \n      Case swANGSTROM        ' If length is in ANGSTROM\n        LengthConversionFactor = 1 / 10000000000#\n        AngleConversionFactor = 1 * 0.01745329\n      \n      Case swNANOMETER       ' If length is in NANOMETER\n        LengthConversionFactor = 1 / 1000000000\n        AngleConversionFactor = 1 * 0.01745329\n      \n      Case swMICRON       ' If length is in MICRON\n        LengthConversionFactor = 1 / 1000000\n        AngleConversionFactor = 1 * 0.01745329\n    End Select\n    \n    '----------------------------------------------------------------\n    \n    ' Select Sketch 2 in opened part document\n    boolStatus = swDoc.Extension.SelectByID2(\"Sketch2\", \"SKETCH\", 0, 0, 0, True, 0, Nothing, swSelectOption_e.swSelectOptionDefault)\n    \n    ' Check if failed to select sketch 2\n    If boolStatus = False Then\n        MsgBox (\"Failed to select sketch 2.\")\n        Exit Sub\n    End If\n     \n    ' Create Revolve Cut Feature\n    Set swFeature = swDoc.FeatureManager.FeatureRevolve2(True, True, False, True, False, True, swEndConditions_e.swEndCondBlind, swEndConditions_e.swEndCondBlind, AngleConversionFactor * 360, 0, False, False, 0, 0, swThinWallType_e.swThinWallOneDirection, 0, 0, True, False, True)\n    \n    ' Check if Revolve Feature creates or not\n    If swFeature Is Nothing Then\n        MsgBox (\"Failed to create Revolve Cut Feature.\")\n        Exit Sub\n    End If\n    \nEnd Sub\n")),(0,r.kt)(o.Z,{mdxType:"AdComponent"}),(0,r.kt)("h2",{id:"prerequisite"},"Prerequisite"),(0,r.kt)("p",null,"In this article there are some ",(0,r.kt)("em",{parentName:"p"},"prerequisite"),"."),(0,r.kt)("p",null,"We are ",(0,r.kt)("strong",{parentName:"p"},"not")," creating sketches from code but we use ",(0,r.kt)("strong",{parentName:"p"},"existing sketch")," to ",(0,r.kt)("em",{parentName:"p"},"create Revolve Cut")," feature as shown in below picture."),(0,r.kt)("p",null,(0,r.kt)("a",{target:"_blank",href:n(3462).Z},(0,r.kt)("img",{alt:"prerequisite",src:n(26133).Z,width:"1365",height:"549"}))),(0,r.kt)("p",null,"As shown in above image, there are 1 sketch and 1 Revolve feature in our part."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Extrude Feature")," : This is our ",(0,r.kt)("strong",{parentName:"li"},"Extrude part")," for ",(0,r.kt)("em",{parentName:"li"},"Revolve Cut feature.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Sketch2")," : This is our ",(0,r.kt)("strong",{parentName:"li"},"profile")," for ",(0,r.kt)("em",{parentName:"li"},"Revolve Cut feature."))),(0,r.kt)("p",null,"If you want to create ",(0,r.kt)("inlineCode",{parentName:"p"},"Sketch2")," programmatically then please refer to below articles."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"For Circle \ud83d\ude80 read ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"/solidworks-macros/create-circle"},"SOLIDWORKS Macros - Create Circle"))," article.")),(0,r.kt)("p",null,"If you want to create Revolve feature programmatically then please refer to below article."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\ud83d\ude80 ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"/solidworks-macros/feature-create-extrude-boss"},"SOLIDWORKS Macros - Create Extrude/Boss")))),(0,r.kt)("p",null,"Also, we will apply checks in this article, so the code we write should be error free most of the time."),(0,r.kt)("h2",{id:"understanding-the-code"},"Understanding the Code"),(0,r.kt)("p",null,"Now let us walk through ",(0,r.kt)("strong",{parentName:"p"},"each line")," in the above code, and ",(0,r.kt)("strong",{parentName:"p"},"understand")," the meaning and purpose of every line."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"I also give some \ud83d\udccc ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"links"))," so that you can go through them if there are anything I explained in previous articles.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"Option Explicit\n")),(0,r.kt)("p",null,"This line forces us to define every variable we are going to use. "),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"For more information please visit \ud83d\ude80 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/solidworks-macros/open-new-document"},"SOLIDWORKS Macros - Open new Part document"))," post.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Create variable for SOLIDWORKS application\nDim swApp As SldWorks.SldWorks\n")),(0,r.kt)("p",null,"In this line, we create a variable which we named as ",(0,r.kt)("inlineCode",{parentName:"p"},"swApp")," and the type of this ",(0,r.kt)("inlineCode",{parentName:"p"},"swApp")," variable is ",(0,r.kt)("inlineCode",{parentName:"p"},"SldWorks.SldWorks"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Create variable for SOLIDWORKS document\nDim swDoc As SldWorks.ModelDoc2\n")),(0,r.kt)("p",null,"In this line, we create a variable which we named as ",(0,r.kt)("inlineCode",{parentName:"p"},"swDoc")," and the type of this ",(0,r.kt)("inlineCode",{parentName:"p"},"swDoc")," variable is ",(0,r.kt)("inlineCode",{parentName:"p"},"SldWorks.ModelDoc2"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Creating variable for SOLIDWORKS Feature\nDim swFeature As SldWorks.Feature\n")),(0,r.kt)("p",null,"In this line, we Create a variable which we named as ",(0,r.kt)("inlineCode",{parentName:"p"},"swFeature")," and the type of this ",(0,r.kt)("inlineCode",{parentName:"p"},"swFeature")," variable is ",(0,r.kt)("inlineCode",{parentName:"p"},"SldWorks.Feature"),"."),(0,r.kt)("p",null,"We create variable ",(0,r.kt)("inlineCode",{parentName:"p"},"swFeature")," for ",(0,r.kt)("strong",{parentName:"p"},"SOLIDWORKS Feature"),"."),(0,r.kt)("p",null,"To see methods and properties related to ",(0,r.kt)("inlineCode",{parentName:"p"},"Feature")," object, please visit \ud83d\ude80 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"https://help.solidworks.com/2019/english/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.IFeature_members.html"},"this page of SOLIDWORKS API Help"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Boolean Variable\nDim BoolStatus As Boolean\n")),(0,r.kt)("p",null,"In this line, we create a variable named ",(0,r.kt)("inlineCode",{parentName:"p"},"BoolStatus")," as ",(0,r.kt)("inlineCode",{parentName:"p"},"Boolean")," object type."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"These all are our global variables."))),(0,r.kt)("p",null,"They are ",(0,r.kt)("strong",{parentName:"p"},"SOLIDWORKS API Objects"),"."),(0,r.kt)("p",null,"So basically I group all the ",(0,r.kt)("strong",{parentName:"p"},"SOLIDWORKS API Objects")," in one place."),(0,r.kt)("p",null,"I have also place ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")," type object at top also, because we use this variable frequently."),(0,r.kt)("p",null,"Thus, I have started placing it here."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Main function of our VBA program\nSub main()\n\nEnd Sub\n")),(0,r.kt)("p",null,"Next is our ",(0,r.kt)("inlineCode",{parentName:"p"},"Sub")," procedure which has name of ",(0,r.kt)("inlineCode",{parentName:"p"},"main"),". "),(0,r.kt)("p",null,"This procedure hold all the ",(0,r.kt)("em",{parentName:"p"},"statements (instructions)")," we give to computer."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Set SOLIDWORKS variable to SOLIDWORKS application\nSet swApp = Application.SldWorks\n")),(0,r.kt)("p",null,"In this line, we set the value of our SOLIDWORKS variable ",(0,r.kt)("inlineCode",{parentName:"p"},"swApp"),"; which we define earlier; to SOLIDWORKS application."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},'\' Check if SOLIDWORKS is opened or not\nIf swApp Is Nothing Then\n  MsgBox ("SOLIDWORKS is not opened")\n  Exit Sub\nEnd If\n')),(0,r.kt)("p",null,"In above line of code, we use an \ud83d\ude80 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/vba/vba-if-then-structure-select-case/"},"IF statement"))," to check if SOLIDWORKS application variable is ",(0,r.kt)("em",{parentName:"p"},"successfully assigned")," to current SOLIDWORKS application."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Setting SOLIDWORKS document variable to opened part document\nSet swDoc = swApp.ActiveDoc\n")),(0,r.kt)("p",null,"In above line of code, we set SOLIDWORKS document ",(0,r.kt)("inlineCode",{parentName:"p"},"swDoc")," variable to currently open part document."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},'\' Check if SOLIDWORKS document is opened or not\nIf swDoc Is Nothing Then\n  MsgBox ("SOLIDWORKS document is not opened. Please open a document.")\n  Exit Sub\nEnd If\n')),(0,r.kt)("p",null,"In above line of code, we use an \ud83d\ude80 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/vba/vba-if-then-structure-select-case/"},"IF statement"))," to check if SOLIDWORKS document ",(0,r.kt)("inlineCode",{parentName:"p"},"swDoc")," is opened."),(0,r.kt)("p",null,"If SOLIDWORKS document is not opened then code execute inside the code and inform the user by a \ud83d\ude80 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/vba/vba-msgBox-function/"},"Message Window")),"."),(0,r.kt)("p",null,"After showing message our program ",(0,r.kt)("strong",{parentName:"p"},"exit")," from here itself."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"'-----------------------BELOW IS THE SOLUTION----------------------------------------\n\n' Local variables used as Conversion Factors\nDim LengthConversionFactor As Double\nDim AngleConversionFactor As Double\n\n' Use a Select Case, to get the length of active Unit and set the different factors\nSelect Case swDoc.GetUnits(0)       ' GetUnits function gives us, active unit\n  \n  Case swMETER    ' If length is in Meter\n    LengthConversionFactor = 1\n    AngleConversionFactor = 1\n  \n  Case swMM       ' If length is in MM\n    LengthConversionFactor = 1 / 1000\n    AngleConversionFactor = 1 * 0.01745329\n  \n  Case swCM       ' If length is in CM\n    LengthConversionFactor = 1 / 100\n    AngleConversionFactor = 1 * 0.01745329\n  \n  Case swINCHES   ' If length is in INCHES\n    LengthConversionFactor = 1 * 0.0254\n    AngleConversionFactor = 1 * 0.01745329\n  \n  Case swFEET     ' If length is in FEET\n    LengthConversionFactor = 1 * (0.0254 * 12)\n    AngleConversionFactor = 1 * 0.01745329\n  \n  Case swFEETINCHES     ' If length is in FEET & INCHES\n    LengthConversionFactor = 1 * 0.0254  ' For length we use sama as Inch\n    AngleConversionFactor = 1 * 0.01745329\n  \n  Case swANGSTROM        ' If length is in ANGSTROM\n    LengthConversionFactor = 1 / 10000000000#\n    AngleConversionFactor = 1 * 0.01745329\n  \n  Case swNANOMETER       ' If length is in NANOMETER\n    LengthConversionFactor = 1 / 1000000000\n    AngleConversionFactor = 1 * 0.01745329\n  \n  Case swMICRON       ' If length is in MICRON\n    LengthConversionFactor = 1 / 1000000\n    AngleConversionFactor = 1 * 0.01745329\nEnd Select\n\n'----------------------------------------------------------------\n")),(0,r.kt)("p",null,"In above line of code, we get and update unit conversion variable as per document unit."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"For more detail about why we are using this code sample, please visit \ud83d\ude80 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/solidworks-macros/unit-correction/"},"SOLIDWORKS Macro - Fix Unit Issue"))," article.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},'\' Selecting Sketch 2\nBoolStatus = swDoc.Extension.SelectByID2("Sketch2", "SKETCH", 0, 0, 0, False, 0, Nothing, swSelectOption_e.swSelectOptionDefault)\n')),(0,r.kt)("p",null,"In above line, we select the ",(0,r.kt)("em",{parentName:"p"},"Sketch2")," by using ",(0,r.kt)("inlineCode",{parentName:"p"},"SelectByID2")," method from ",(0,r.kt)("inlineCode",{parentName:"p"},"Extension")," object."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"For more information about selection method please visit \ud83d\ude80 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/solidworks-macros/select-plane-from-tree"},"SOLIDWORKS Macros - Selection Methods"))," post.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},'\' Check if Sketch 2 selected or not\nIf BoolStatus = False Then\n  MsgBox ("Fail to select Sketch 2.")\n  Exit Sub\nEnd If\n')),(0,r.kt)("p",null,"In above line of code, we use an \ud83d\ude80 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/vba/vba-if-then-structure-select-case/"},"IF statement"))," to check if ",(0,r.kt)("em",{parentName:"p"},"Sketch 2")," is selected or not ."),(0,r.kt)("p",null,"If ",(0,r.kt)("em",{parentName:"p"},"Sketch 2")," not selected then we execute code inside the \ud83d\ude80 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/vba/vba-if-then-structure-select-case/"},"IF statement"))," and inform the user by a \ud83d\ude80 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/vba/vba-msgBox-function/"},"Message Window")),"."),(0,r.kt)("p",null,"After showing message our program ",(0,r.kt)("strong",{parentName:"p"},"exit")," from here itself."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Create Revolve Cut Feature\nSet swFeature = swDoc.FeatureManager.FeatureRevolve2(True, True, False, True, False, True, swEndConditions_e.swEndCondBlind, swEndConditions_e.swEndCondBlind, AngleConversionFactor * 360, 0, False, False, 0, 0, swThinWallType_e.swThinWallOneDirection, 0, 0, True, False, True)\n")),(0,r.kt)("p",null,"In above line of code we create a ",(0,r.kt)("em",{parentName:"p"},"Revolve Cut feature"),"."),(0,r.kt)("p",null,"We create ",(0,r.kt)("em",{parentName:"p"},"Revolve Cut")," by setting the value of variable ",(0,r.kt)("inlineCode",{parentName:"p"},"swFeature")," by ",(0,r.kt)("inlineCode",{parentName:"p"},"FeatureRevolve")," method."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"FeatureRevolve")," method is part of ",(0,r.kt)("inlineCode",{parentName:"p"},"FeatureManager")," object."),(0,r.kt)("p",null,"This ",(0,r.kt)("inlineCode",{parentName:"p"},"FeatureManager")," is again part of ",(0,r.kt)("inlineCode",{parentName:"p"},"ModelDoc2")," object."),(0,r.kt)(o.Z,{mdxType:"AdComponent"}),(0,r.kt)("h2",{id:"featurerevolve2-method-parameters-details"},"FeatureRevolve2 Method Parameters Details"),(0,r.kt)("p",null,"This ",(0,r.kt)("inlineCode",{parentName:"p"},"FeatureRevolve")," takes following parameters as explained:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"SingleDir")," - ",(0,r.kt)("inlineCode",{parentName:"p"},"True")," if the revolve is in one direction, ",(0,r.kt)("inlineCode",{parentName:"p"},"False")," if in both directions.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"IsSolid")," - ",(0,r.kt)("inlineCode",{parentName:"p"},"True")," if this is a ",(0,r.kt)("strong",{parentName:"p"},"Solid")," revolve feature, ",(0,r.kt)("inlineCode",{parentName:"p"},"False")," if not. ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"IsCut")," - ",(0,r.kt)("inlineCode",{parentName:"p"},"True")," if this is a ",(0,r.kt)("strong",{parentName:"p"},"Cut")," revolve feature, ",(0,r.kt)("inlineCode",{parentName:"p"},"False")," if not. ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"ReverseDir")," - ",(0,r.kt)("inlineCode",{parentName:"p"},"True")," reverses the angle of the revolution, ",(0,r.kt)("inlineCode",{parentName:"p"},"False")," does not; only applies if ",(0,r.kt)("inlineCode",{parentName:"p"},"Dir1Type")," is not ",(0,r.kt)("inlineCode",{parentName:"p"},"swEndConditions_e.swEndCondMidPlane"),". ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"BothDirectionUpToSameEntity")," - ",(0,r.kt)("inlineCode",{parentName:"p"},"True")," if the revolve is up to the same entity in both directions, ",(0,r.kt)("inlineCode",{parentName:"p"},"False")," if not; only applies if ",(0,r.kt)("inlineCode",{parentName:"p"},"SingleDir")," is ",(0,r.kt)("inlineCode",{parentName:"p"},"False")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"Dir1Type")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"Dir2Type")," are ",(0,r.kt)("inlineCode",{parentName:"p"},"swEndConditions_e.swEndCondUpToVertex"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"swEndConditions_e.swEndCondUpToSurface"),", or ",(0,r.kt)("inlineCode",{parentName:"p"},"swEndConditions_e.swEndCondOffsetFromSurface"),").")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Dir1Type")," - Revolve end condition in ",(0,r.kt)("strong",{parentName:"p"},"direction 1")," as defined in ",(0,r.kt)("inlineCode",{parentName:"p"},"swEndConditions_e"),". as defined below."),(0,r.kt)("table",{parentName:"li"},(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Member"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"swEndCondBlind")),(0,r.kt)("td",{parentName:"tr",align:null},"0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"swEndCondMidPlane")),(0,r.kt)("td",{parentName:"tr",align:null},"6")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"swEndCondOffsetFromSurface")),(0,r.kt)("td",{parentName:"tr",align:null},"5")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"swEndCondThroughAll")),(0,r.kt)("td",{parentName:"tr",align:null},"1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"swEndCondThroughAllBoth")),(0,r.kt)("td",{parentName:"tr",align:null},"9")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"swEndCondThroughNext")),(0,r.kt)("td",{parentName:"tr",align:null},"2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"swEndCondUpToBody")),(0,r.kt)("td",{parentName:"tr",align:null},"7")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"swEndCondUpToNext")),(0,r.kt)("td",{parentName:"tr",align:null},"11")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"swEndCondUpToSelection")),(0,r.kt)("td",{parentName:"tr",align:null},"10")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"swEndCondUpToSurface")),(0,r.kt)("td",{parentName:"tr",align:null},"4 = Do not use;")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"swEndCondUpToVertex")),(0,r.kt)("td",{parentName:"tr",align:null},"3 = Do not use;"))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Dir2Type")," - Revolve end condition in ",(0,r.kt)("strong",{parentName:"p"},"direction 2"),"; as defined in ",(0,r.kt)("inlineCode",{parentName:"p"},"swEndConditions_e")," and only applies if ",(0,r.kt)("inlineCode",{parentName:"p"},"Dir1Type")," is not ",(0,r.kt)("inlineCode",{parentName:"p"},"swEndConditions_e.swEndCondMidPlane")," as defined below."),(0,r.kt)("table",{parentName:"li"},(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Member"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"swEndCondBlind")),(0,r.kt)("td",{parentName:"tr",align:null},"0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"swEndCondMidPlane")),(0,r.kt)("td",{parentName:"tr",align:null},"6")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"swEndCondOffsetFromSurface")),(0,r.kt)("td",{parentName:"tr",align:null},"5")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"swEndCondThroughAll")),(0,r.kt)("td",{parentName:"tr",align:null},"1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"swEndCondThroughAllBoth")),(0,r.kt)("td",{parentName:"tr",align:null},"9")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"swEndCondThroughNext")),(0,r.kt)("td",{parentName:"tr",align:null},"2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"swEndCondUpToBody")),(0,r.kt)("td",{parentName:"tr",align:null},"7")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"swEndCondUpToNext")),(0,r.kt)("td",{parentName:"tr",align:null},"11")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"swEndCondUpToSelection")),(0,r.kt)("td",{parentName:"tr",align:null},"10")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"swEndCondUpToSurface")),(0,r.kt)("td",{parentName:"tr",align:null},"4 = Do not use;")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"swEndCondUpToVertex")),(0,r.kt)("td",{parentName:"tr",align:null},"3 = Do not use;"))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Dir1Angle")," - Angle in radians of revolution in ",(0,r.kt)("strong",{parentName:"p"},"direction 1"),"; only applies if ",(0,r.kt)("inlineCode",{parentName:"p"},"Dir1Type")," is ",(0,r.kt)("inlineCode",{parentName:"p"},"swEndConditions_e.swEndCondBlind"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Dir2Angle")," - Angle in radians of revolution in ",(0,r.kt)("strong",{parentName:"p"},"direction 2"),"; only applies if ",(0,r.kt)("inlineCode",{parentName:"p"},"Dir2Type")," is ",(0,r.kt)("inlineCode",{parentName:"p"},"swEndConditions_e.swEndCondBlind"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"OffsetReverse1")," - ",(0,r.kt)("inlineCode",{parentName:"p"},"True")," to reverse the offset direction in ",(0,r.kt)("strong",{parentName:"p"},"direction 1"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"False")," to not; only applies if ",(0,r.kt)("inlineCode",{parentName:"p"},"Dir1Type")," is ",(0,r.kt)("inlineCode",{parentName:"p"},"swEndConditions_e.swEndCondOffsetFromSurface"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"OffsetReverse2")," - ",(0,r.kt)("inlineCode",{parentName:"p"},"True")," to reverse the offset direction in ",(0,r.kt)("strong",{parentName:"p"},"direction 2"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"False")," to not; only applies if ",(0,r.kt)("inlineCode",{parentName:"p"},"Dir2Type")," is ",(0,r.kt)("inlineCode",{parentName:"p"},"swEndConditions_e.swEndCondOffsetFromSurface"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"OffsetDistance1")," - Offset distance in ",(0,r.kt)("strong",{parentName:"p"},"direction 1"),"; only applies if ",(0,r.kt)("inlineCode",{parentName:"p"},"Dir1Type")," is ",(0,r.kt)("inlineCode",{parentName:"p"},"swEndConditions_e.swEndCondOffsetFromSurface"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"OffsetDistance2")," - Offset distance in ",(0,r.kt)("strong",{parentName:"p"},"direction 2"),"; only applies if ",(0,r.kt)("inlineCode",{parentName:"p"},"Dir2Type")," is ",(0,r.kt)("inlineCode",{parentName:"p"},"swEndConditions_e.swEndCondOffsetFromSurface"),".  ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"ThinType")," - Type and direction as defined in ",(0,r.kt)("inlineCode",{parentName:"p"},"swThinWallType_e"),".  "),(0,r.kt)("table",{parentName:"li"},(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Member"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"swThinWallMidPlan")),(0,r.kt)("td",{parentName:"tr",align:null},"2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"swThinWallOneDirection")),(0,r.kt)("td",{parentName:"tr",align:null},"0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"swThinWallOppDirection")),(0,r.kt)("td",{parentName:"tr",align:null},"1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"swThinWallTwoDirection")),(0,r.kt)("td",{parentName:"tr",align:null},"3")))))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"ThinThickness1")," - Wall thickness in ",(0,r.kt)("strong",{parentName:"li"},"direction 1")," (if ThinType is ",(0,r.kt)("inlineCode",{parentName:"li"},"swThinWallType_e.swThinWallMidPlane"),", (ThinThickness1)/2 is used for each direction)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"ThinThickness2")," - Wall thickness in ",(0,r.kt)("strong",{parentName:"li"},"direction 2")," (only applies if ThinType is ",(0,r.kt)("inlineCode",{parentName:"li"},"swThinWallType_e.swThinWallTwoDirection"),"). "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Merge")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"True")," to merge the results into a multi-body part, ",(0,r.kt)("inlineCode",{parentName:"li"},"False")," to not. "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"UseFeatScope")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"True")," if the feature only affects selected bodies, ",(0,r.kt)("inlineCode",{parentName:"li"},"False")," if the feature affects all bodies. "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"UseAutoSelect")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"True")," to automatically select all bodies and have the feature affect those bodies, ",(0,r.kt)("inlineCode",{parentName:"li"},"False")," to select the bodies or components that the feature affects. ")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Return Value")," : This ",(0,r.kt)("inlineCode",{parentName:"p"},"FeatureRevolve2")," method return ",(0,r.kt)("strong",{parentName:"p"},"feature")," data object."),(0,r.kt)("p",null,"To see methods and properties related to ",(0,r.kt)("inlineCode",{parentName:"p"},"Feature")," object, please visit \ud83d\ude80 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"https://help.solidworks.com/2019/english/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.IFeature_members.html"},"this page of SOLIDWORKS API Help")),"."),(0,r.kt)("p",null,"In our code, I have used following values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Value Used"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"SingleDir")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"True"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"IsSolid")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"True"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"IsThin")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"False"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"IsCut")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"True"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"ReverseDir")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"False"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"BothDirectionUpToSameEntity")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"True"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Dir1Type")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"swEndConditions_e.swEndCondBlind"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Dir2Type")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"swEndConditions_e.swEndCondBlind"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Dir1Angle")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"AngleConversionFactor * 360"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Dir2Angle")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"0"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"OffsetReverse1")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"False"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"OffsetReverse2")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"False"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"OffsetDistance1")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"0"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"OffsetDistance2")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"0"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"ThinType")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"swThinWallType_e.swThinWallOneDirection"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"ThinThickness1")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"0"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"ThinThickness2")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"0"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Merge")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"True"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"UseFeatScope")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"False"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"UseAutoSelect")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"True"))))),(0,r.kt)("p",null,"To see methods and properties related to ",(0,r.kt)("inlineCode",{parentName:"p"},"FeatureManager")," object, please visit \ud83d\ude80 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"https://help.solidworks.com/2019/english/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.IFeatureManager_members.html"},"this page of SOLIDWORKS API Help")),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},'\' Check if Revolve Cut Feature creates or not\nIf swFeature Is Nothing Then\n    MsgBox ("Failed to create Revolve Cut Feature.")\n    Exit Sub\nEnd If\n')),(0,r.kt)("p",null,"In above line of code, we use an \ud83d\ude80 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/vba/vba-if-then-structure-select-case/"},"IF statement"))," to check if we able to create ",(0,r.kt)("em",{parentName:"p"},"Revolve Cut")," Feature or not."),(0,r.kt)("p",null,"If we failed to select then inform the user by a \ud83d\ude80 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/vba/vba-msgBox-function/"},"Message Window")),"."),(0,r.kt)("p",null,"After showing error message our program ",(0,r.kt)("strong",{parentName:"p"},"exit")," from here itself."),(0,r.kt)("p",null,"Now we run the macro and after running macro we get Revolve as shown in below image."),(0,r.kt)("p",null,(0,r.kt)("a",{target:"_blank",href:n(34598).Z},(0,r.kt)("img",{alt:"final-result-revolve-cut",src:n(86615).Z,width:"1365",height:"549"}))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"This is it !!!")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"I hope my efforts will helpful to someone!")),(0,r.kt)("p",null,"If you found anything to ",(0,r.kt)("strong",{parentName:"p"},"add or update"),", please let me know on my ",(0,r.kt)("em",{parentName:"p"},"e-mail"),"."),(0,r.kt)("p",null,"Hope this post helps you to ",(0,r.kt)("strong",{parentName:"p"},"create Revolve Cut")," with SOLIDWORKS VBA Macros."),(0,r.kt)("p",null,"For more such tutorials on ",(0,r.kt)("strong",{parentName:"p"},"SOLIDWORKS VBA Macro"),", do come to this blog after sometime."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"If you like the post then please share it with your friends also.")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Do let me know by you like this post or not!")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Till then, Happy learning!!!")))}k.isMDXComponent=!0},74753:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(67294);class r extends a.Component{componentDidMount(){(()=>{const e=document.createElement("script");e.src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js",e.async=!0,e.defer=!0,document.body.insertBefore(e,document.body.firstChild)})(),(window.adsbygoogle=window.adsbygoogle||[]).push({})}render(){return a.createElement("ins",{className:"adsbygoogle",style:{display:"block"},"data-ad-client":"ca-pub-8158659264340002","data-ad-slot":"6644001766","data-ad-format":"auto","data-full-width-responsive":"true"})}}},34598:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/files/final-result-revolve-cut-9a4a3e75da46884874f39de9df558438.png"},3462:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/files/prerequisite-b8117b87da279b155d5c421aa3e1a8d6.png"},86615:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/final-result-revolve-cut-9a4a3e75da46884874f39de9df558438.png"},26133:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/prerequisite-b8117b87da279b155d5c421aa3e1a8d6.png"}}]);