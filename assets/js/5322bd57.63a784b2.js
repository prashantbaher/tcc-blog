"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[9142],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>c});var a=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=a.createContext({}),m=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=m(e.components);return a.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},k=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),k=m(t),c=o,d=k["".concat(s,".").concat(c)]||k[c]||u[c]||r;return t?a.createElement(d,l(l({ref:n},p),{},{components:t})):a.createElement(d,l({ref:n},p))}));function c(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,l=new Array(r);l[0]=k;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var m=2;m<r;m++)l[m]=t[m];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}k.displayName="MDXCreateElement"},37381:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>m,contentTitle:()=>i,default:()=>k,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var a=t(87462),o=(t(67294),t(3905)),r=t(74753);const l={categories:"Solidworks-macro",title:"Solidworks VBA Macro - Unfix Component",permalink:"/solidworks-vba-macros/assembly-unfix-component/",tags:["Solidworks Macro"],id:"assembly-unfix-component"},i=void 0,s={unversionedId:"assembly-unfix-component",id:"assembly-unfix-component",title:"Solidworks VBA Macro - Unfix Component",description:"",source:"@site/docs/solidworks-macros/022.2-assembly-unfix-component.md",sourceDirName:".",slug:"/assembly-unfix-component",permalink:"/solidworks-macros/assembly-unfix-component",draft:!1,tags:[{label:"Solidworks Macro",permalink:"/solidworks-macros/tags/solidworks-macro"}],version:"current",frontMatter:{categories:"Solidworks-macro",title:"Solidworks VBA Macro - Unfix Component",permalink:"/solidworks-vba-macros/assembly-unfix-component/",tags:["Solidworks Macro"],id:"assembly-unfix-component"},sidebar:"tutorialSidebar",previous:{title:"Solidworks VBA Macro - Insert Component",permalink:"/solidworks-macros/assembly-insert-component"},next:{title:"Solidworks VBA Macro - Add Coincident Mate",permalink:"/solidworks-macros/assembly-conicident-mate"}},m={},p=[{value:"Objective",id:"objective",level:2},{value:"Results We Can Get",id:"results-we-can-get",level:2},{value:"Macro Video",id:"macro-video",level:2},{value:"VBA Macro",id:"vba-macro",level:2},{value:"Prerequisite",id:"prerequisite",level:2},{value:"Steps To Follow",id:"steps-to-follow",level:2},{value:"Create and Initialize required variables",id:"create-and-initialize-required-variables",level:3},{value:"Unfix Component",id:"unfix-component",level:3}],u={toc:p};function k(e){let{components:n,...l}=e;return(0,o.kt)("wrapper",(0,a.Z)({},u,l,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"objective"},"Objective"),(0,o.kt)(r.Z,{mdxType:"AdComponent"}),(0,o.kt)("p",null,"In this article we ",(0,o.kt)("strong",{parentName:"p"},"create and understand")," VBA macro of ",(0,o.kt)("strong",{parentName:"p"},"Unfix Component(s)")," in ",(0,o.kt)("strong",{parentName:"p"},"Assembly document")," of ",(0,o.kt)("em",{parentName:"p"},"SOLIDWORKS CAD Software"),"."),(0,o.kt)("p",null,"This method is ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"most updated"))," method, so ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"use this method"))," if you want to ",(0,o.kt)("strong",{parentName:"p"},"Unfix Component(s)")," quickly. "),(0,o.kt)("h2",{id:"results-we-can-get"},"Results We Can Get"),(0,o.kt)("p",null,"After running our macro we successfully ",(0,o.kt)("strong",{parentName:"p"},"Unfix Component(s)")," a Component in an Assembly as a result."),(0,o.kt)("p",null,"Below image shows the result we get."),(0,o.kt)("p",null,(0,o.kt)("a",{target:"_blank",href:t(1665).Z},(0,o.kt)("img",{alt:"unfix-component-final-result",src:t(41878).Z,width:"1366",height:"728"}))),(0,o.kt)("p",null,"We ",(0,o.kt)("strong",{parentName:"p"},"Unfix Component")," in following steps in general."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("em",{parentName:"li"},"Unfix an open Part in new Assembly document."))),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"To get the correct result please follow the steps correctly.")),(0,o.kt)("h2",{id:"macro-video"},"Macro Video"),(0,o.kt)("p",null,"Below \ud83c\udfac video shows ",(0,o.kt)("strong",{parentName:"p"},"Unfix Component")," from ",(0,o.kt)("em",{parentName:"p"},"SOLIDWORKS VBA Macros"),"."),(0,o.kt)("iframe",{src:"https://www.youtube.com/embed/2-_xYMr7i7Y",frameborder:"0",allowfullscreen:!0,width:"100%",height:"500"}),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"Above video is just for visualization and there are no explanation."))," "),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"I have explained each and every line in this article."))),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"It is advisable to watch video, since it help you to better understand the process.")),(0,o.kt)("h2",{id:"vba-macro"},"VBA Macro"),(0,o.kt)("p",null,"Below is the ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"VBA macro"))," for ",(0,o.kt)("em",{parentName:"p"},"Unfix Component"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"Option Explicit\n\n' Variable for Solidworks Application\nDim swApp As SldWorks.SldWorks\n\n' Variable for Solidworks document\nDim swDoc As SldWorks.ModelDoc2\n\n' Variable for Solidworks Assembly\nDim swAssembly As SldWorks.AssemblyDoc\n\n' Variable for Solidworks Component\nDim swComponent As SldWorks.Component2\n\n' Program to Unfix Component in assembly\nSub main()\n\n  ' Set Solidworks Application variable to current application\n  Set swApp = Application.SldWorks\n  \n  ' Set Solidworks document variable to currently opened document\n  Set swDoc = swApp.ActiveDoc\n  \n  ' Check if Solidworks document is opened or not\n  If swDoc Is Nothing Then\n    MsgBox \"Solidworks document is not opened.\"\n    Exit Sub\n  End If\n  \n  ' Set Solidworks Assembly document\n  Set swAssembly = swDoc\n  \n  ' Variable for Top Level components List\n  Dim vComponents As Variant\n  \n  ' Get Components list in opened assembly\n  vComponents = swAssembly.GetComponents(True)\n  \n  ' Variable for Looping\n  Dim index As Integer\n  \n  ' Loop through Components List\n  For index = 0 To UBound(vComponents)\n    \n    ' Set Solidworks Component variable\n    Set swComponent = vComponents(index)\n    \n    ' Check if this component is fixed or not\n    If swComponent.IsFixed Then\n      \n      ' Select this component\n      swComponent.Select True\n      \n      ' Unfix this component\n      swAssembly.UnfixComponent\n      \n      ' Clear all selection\n      swDoc.ClearSelection2 True\n    End If\n    \n  Next\n  \nEnd Sub\n")),(0,o.kt)(r.Z,{mdxType:"AdComponent"}),(0,o.kt)("h2",{id:"prerequisite"},"Prerequisite"),(0,o.kt)("p",null,"There are some ",(0,o.kt)("em",{parentName:"p"},"prerequisite")," for this article."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Knowledge of ",(0,o.kt)("strong",{parentName:"p"},"VBA programming language")," is \u2757",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"required")),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"We use an existing part in Assembly document.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"This component is Fixed as shown in below image."))),(0,o.kt)("p",null,(0,o.kt)("a",{target:"_blank",href:t(82620).Z},(0,o.kt)("img",{alt:"prerequisite",src:t(4506).Z,width:"1366",height:"578"}))),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"We will apply checks in this article, so the code we write should be error free most of the time.")),(0,o.kt)("h2",{id:"steps-to-follow"},"Steps To Follow"),(0,o.kt)("p",null,"This ",(0,o.kt)("strong",{parentName:"p"},"Reference Point VBA macro")," can be divided into following sections:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("em",{parentName:"li"},"Create and Initialize required variables")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("em",{parentName:"li"},"Unfix Component"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"Every section with each line is explained below."))),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"I also give some ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"links (see icon \ud83d\ude80)"))," so that you can go through them if there are anything I explained in previous articles.")),(0,o.kt)("h3",{id:"create-and-initialize-required-variables"},"Create and Initialize required variables"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"Option Explicit\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Purpose"),": Above line forces us to define every variable we are going to use. "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Reference"),": \ud83d\ude80 ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"/solidworks-macros/open-new-document"},"SOLIDWORKS Macros - Open new Part document"))," article.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Variable for Solidworks application\nDim swApp As SldWorks.SldWorks\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Purpose"),": In above line, we create a variable for ",(0,o.kt)("em",{parentName:"li"},"Solidworks application"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Variable Name"),": ",(0,o.kt)("inlineCode",{parentName:"li"},"swApp")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Type"),": ",(0,o.kt)("inlineCode",{parentName:"li"},"SldWorks.SldWorks")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Reference"),": Please visit \ud83d\ude80 ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://help.solidworks.com/2019/english/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.ISldWorks_members.html"},"online SOLIDWORKS API Help")),".")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Variable for Solidworks document\nDim swDoc As SldWorks.ModelDoc2\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Purpose"),": In above line, we create a variable for ",(0,o.kt)("em",{parentName:"li"},"Solidworks document"),". "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Variable Name"),": ",(0,o.kt)("inlineCode",{parentName:"li"},"swDoc")," "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Type"),": ",(0,o.kt)("inlineCode",{parentName:"li"},"SldWorks.ModelDoc2")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Reference"),": Please visit \ud83d\ude80 ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://help.solidworks.com/2019/english/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.IModelDoc2_members.html"},"online SOLIDWORKS API Help")),".")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Variable for Solidworks Assembly\nDim swAssembly As SldWorks.AssemblyDoc\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Purpose"),": In above line, we create a variable for ",(0,o.kt)("em",{parentName:"li"},"Solidworks Assembly"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Variable Name"),": ",(0,o.kt)("inlineCode",{parentName:"li"},"swAssembly")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Type"),": ",(0,o.kt)("inlineCode",{parentName:"li"},"SldWorks.AssemblyDoc")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Reference"),": Please visit \ud83d\ude80 ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://help.solidworks.com/2019/english/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.IAssemblyDoc_members.html"},"online SOLIDWORKS API Help")),".")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Variable for Solidworks Component\nDim swComponent As SldWorks.Component2\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Purpose"),":  In above line, we create a variable for ",(0,o.kt)("em",{parentName:"li"},"Solidworks Component"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Variable Name"),": ",(0,o.kt)("inlineCode",{parentName:"li"},"swComponent")," "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Type"),": ",(0,o.kt)("inlineCode",{parentName:"li"},"SldWorks.Component2"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Reference"),": Please visit \ud83d\ude80 ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://help.solidworks.com/2019/english/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.IComponent2_members.html"},"online SOLIDWORKS API Help")),".")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"These all are our global variables."))),(0,o.kt)("p",null,"They are ",(0,o.kt)("strong",{parentName:"p"},"SOLIDWORKS API Objects"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Program to Unfix a Component in assembly\nSub main()\n\nEnd Sub\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"In above line, we create ",(0,o.kt)("em",{parentName:"li"},"main Program to Unfix a Component in assembly"),"."),(0,o.kt)("li",{parentName:"ul"},"This is a ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"Sub"))," procedure which has name of ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"main")),". "),(0,o.kt)("li",{parentName:"ul"},"This procedure hold all the ",(0,o.kt)("em",{parentName:"li"},"statements (instructions)")," we give to computer."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Reference"),": Detailed information \ud83d\ude80 ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"/vba/vba-sub-and-function-procedure/"},"VBA Sub and Function Procedures"))," article of this website.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Set Solidworks Application variable to current application\nSet swApp = Application.SldWorks\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"In above line, we set ",(0,o.kt)("em",{parentName:"li"},"value")," of ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"swApp"))," variable."),(0,o.kt)("li",{parentName:"ul"},"This ",(0,o.kt)("em",{parentName:"li"},"value")," is currently opened Solidworks application.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Set Solidworks document variable to currently opened document\nSet swDoc = swApp.ActiveDoc\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"In above line, we set ",(0,o.kt)("em",{parentName:"li"},"value")," of ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"swDoc"))," variable."),(0,o.kt)("li",{parentName:"ul"},"This ",(0,o.kt)("em",{parentName:"li"},"value")," is currently ",(0,o.kt)("em",{parentName:"li"},"opened part document"),".")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},'\' Check if Solidworks document is opened or not\nIf swDoc Is Nothing Then\n  MsgBox ("Solidworks document is not opened.")\n  Exit Sub\nEnd If\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"In above code block, we check if we successfully set the value of ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"swDoc"))," variable."),(0,o.kt)("li",{parentName:"ul"},"We use \ud83d\ude80 ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"/vba/vba-if-then-structure-select-case/"},"IF statement"))," for checking."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Condition"),": ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"swDoc Is Nothing"))),(0,o.kt)("li",{parentName:"ul"},"When this condition is ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"True")),", ",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"We show and \ud83d\ude80 ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"/vba/vba-msgBox-function/"},"message window"))," to user."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Message"),": ",(0,o.kt)("em",{parentName:"li"},"SOLIDWORKS document is not opened.")),(0,o.kt)("li",{parentName:"ul"},"Then we ",(0,o.kt)("strong",{parentName:"li"},"stop")," our macro here.")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Set Solidworks Assembly document\nSet swAssembly = swDoc\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"In above line, we set ",(0,o.kt)("em",{parentName:"li"},"value")," of ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"swAssembly"))," variable."),(0,o.kt)("li",{parentName:"ul"},"This ",(0,o.kt)("em",{parentName:"li"},"value")," is ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"swDoc"))," variable.")),(0,o.kt)(r.Z,{mdxType:"AdComponent"}),(0,o.kt)("h3",{id:"unfix-component"},"Unfix Component"),(0,o.kt)("p",null,"In this section, we ",(0,o.kt)("em",{parentName:"p"},"Unfix Component"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Variable for Top Level components List\nDim vComponents As Variant\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Purpose"),":  In above line, we create a variable for ",(0,o.kt)("em",{parentName:"li"},"Top Level components List"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Variable Name"),": ",(0,o.kt)("inlineCode",{parentName:"li"},"vComponents")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Type"),": ",(0,o.kt)("inlineCode",{parentName:"li"},"Variant"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Get Components list in opened assembly\nvComponents = swAssembly.GetComponents(True)\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"In above line, we set the value of ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"vComponents"))," variable. "),(0,o.kt)("li",{parentName:"ul"},"We set value by ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"GetComponents"))," method of ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"swAssembly"))," variable.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Variable for Looping\nDim index As Integer\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Purpose"),":  In above line, we create a variable for ",(0,o.kt)("em",{parentName:"li"},"Looping"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Variable Name"),": ",(0,o.kt)("inlineCode",{parentName:"li"},"index")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Type"),": ",(0,o.kt)("inlineCode",{parentName:"li"},"Integer"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Loop through Components List\nFor index = 0 To UBound(vComponents)\n\nNext\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"In above line, we create a ",(0,o.kt)("inlineCode",{parentName:"li"},"For")," loop."),(0,o.kt)("li",{parentName:"ul"},"This loops start from ",(0,o.kt)("inlineCode",{parentName:"li"},"index = 0")," to number of ",(0,o.kt)("inlineCode",{parentName:"li"},"UBound(vComponents)"),".",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"UBound(vComponents)")," : Maximum number of component in this variable.")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Set Solidworks Component variable\nSet swComponent = vComponents(index)\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"In above line, we set ",(0,o.kt)("em",{parentName:"li"},"value")," of ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"swComponent"))," variable."),(0,o.kt)("li",{parentName:"ul"},"This ",(0,o.kt)("em",{parentName:"li"},"value")," is current component inside ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"vComponents"))," variable.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"We get current component by Indexing ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"vComponents"))," variable. ")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Check if this component is fixed or not\nIf swComponent.IsFixed Then\n  \n  ' Select this component\n  swComponent.Select True\n  \n  ' Unfix this component\n  swAssembly.UnfixComponent\n  \n  ' Clear all selection\n  swDoc.ClearSelection2 True\nEnd If\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"In above code block, we check if this component is fixed or not."),(0,o.kt)("li",{parentName:"ul"},"We use \ud83d\ude80 ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"/vba/vba-if-then-structure-select-case/"},"IF statement"))," for checking."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Condition"),": ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"swComponent.IsFixed"))),(0,o.kt)("li",{parentName:"ul"},"When this condition is ",(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"True")),", ",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"We select current component."),(0,o.kt)("li",{parentName:"ul"},"Unfix current component."),(0,o.kt)("li",{parentName:"ul"},"Then Clear all selection.")))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"This is it !!!")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"I hope my efforts will helpful to someone!")),(0,o.kt)("p",null,"If you found anything to ",(0,o.kt)("strong",{parentName:"p"},"add or update"),", please let me know on my ",(0,o.kt)("em",{parentName:"p"},"e-mail"),"."),(0,o.kt)("p",null,"Hope this post helps you to ",(0,o.kt)("strong",{parentName:"p"},"Unfix component")," with SOLIDWORKS VBA Macros."),(0,o.kt)("p",null,"For more such tutorials on ",(0,o.kt)("strong",{parentName:"p"},"SOLIDWORKS VBA Macro"),", do come to this website after sometime."),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"If you like the post then please share it with your friends also.")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Do let me know by you like this post or not!")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Till then, Happy learning!!!")))}k.isMDXComponent=!0},74753:(e,n,t)=>{t.d(n,{Z:()=>o});var a=t(67294);class o extends a.Component{componentDidMount(){(()=>{const e=document.createElement("script");e.src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js",e.async=!0,e.defer=!0,document.body.insertBefore(e,document.body.firstChild)})(),(window.adsbygoogle=window.adsbygoogle||[]).push({})}render(){return a.createElement("ins",{className:"adsbygoogle",style:{display:"block"},"data-ad-client":"ca-pub-8158659264340002","data-ad-slot":"6644001766","data-ad-format":"auto","data-full-width-responsive":"true"})}}},1665:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/files/final-result-gif-69fe6d1d0cab97de262a2aa63c13610a.gif"},82620:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/files/prerequisite-d460550ac4b51a1b399d80bcfc43a60e.png"},41878:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/final-result-gif-69fe6d1d0cab97de262a2aa63c13610a.gif"},4506:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/prerequisite-d460550ac4b51a1b399d80bcfc43a60e.png"}}]);