"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[9845],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>c});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),l=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=l(e.components);return a.createElement(p.Provider,{value:t},e.children)},k={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),u=l(n),c=r,d=u["".concat(p,".").concat(c)]||u[c]||k[c]||o;return n?a.createElement(d,i(i({ref:t},m),{},{components:n})):a.createElement(d,i({ref:t},m))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},35114:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>p,toc:()=>m});var a=n(87462),r=(n(67294),n(3905)),o=n(74753);const i={categories:"Solidworks-macro",title:"Solidworks Macro - Linear Sketch Pattern",permalink:"/solidworks-macros/linear-skech-pattern/",tags:["Solidworks Macro"],id:"linear-skech-pattern"},s=void 0,p={unversionedId:"linear-skech-pattern",id:"linear-skech-pattern",title:"Solidworks Macro - Linear Sketch Pattern",description:"",source:"@site/docs/solidworks-macros/011.1-linear-skech-pattern.md",sourceDirName:".",slug:"/linear-skech-pattern",permalink:"/solidworks-macros/linear-skech-pattern",draft:!1,tags:[{label:"Solidworks Macro",permalink:"/solidworks-macros/tags/solidworks-macro"}],version:"current",frontMatter:{categories:"Solidworks-macro",title:"Solidworks Macro - Linear Sketch Pattern",permalink:"/solidworks-macros/linear-skech-pattern/",tags:["Solidworks Macro"],id:"linear-skech-pattern"},sidebar:"tutorialSidebar",previous:{title:"Solidworks Macro - Mirror Sketch Entities",permalink:"/solidworks-macros/mirror-entities"},next:{title:"Solidworks Macro - Edit Linear Sketch Pattern",permalink:"/solidworks-macros/edit-linear-skech-pattern"}},l={},m=[{value:"Video of Code on YouTube",id:"video-of-code-on-youtube",level:2},{value:"For Experience Macro Developers",id:"for-experience-macro-developers",level:2},{value:"For Beginner Macro Developers",id:"for-beginner-macro-developers",level:2},{value:"Understanding the Code",id:"understanding-the-code",level:3},{value:"VBA Language feature used in this post",id:"vba-language-feature-used-in-this-post",level:2},{value:"Solidworks API Objects",id:"solidworks-api-objects",level:2}],k={toc:m};function u(e){let{components:t,...i}=e;return(0,r.kt)("wrapper",(0,a.Z)({},k,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(o.Z,{mdxType:"AdComponent"}),(0,r.kt)("p",null,"In this post, I tell you about ",(0,r.kt)("strong",{parentName:"p"},"how to Linear Sketch Pattern using Solidworks VBA Macros")," in a Sketch."),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"video-of-code-on-youtube"},"Video of Code on YouTube"),(0,r.kt)("p",null,"Please see below video \ud83c\udfac how visually we ",(0,r.kt)("em",{parentName:"p"},"Linear Sketch Pattern")," in ",(0,r.kt)("strong",{parentName:"p"},"Solidworks VBA macro"),"."),(0,r.kt)("iframe",{src:"https://www.youtube.com/embed/kvkj2qWPoQM",frameborder:"0",allowfullscreen:!0,width:"100%",height:"500"}),(0,r.kt)("p",null,"Please note that there are ",(0,r.kt)("strong",{parentName:"p"},"no explaination")," in the video. "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Explaination")," of each line and why we write code this way is given in this post."),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"for-experience-macro-developers"},"For Experience Macro Developers"),(0,r.kt)("p",null,"If you are an experience ",(0,r.kt)("strong",{parentName:"p"},"Solidworks Macro developer"),", then you are looking for a specific code sample."),(0,r.kt)("p",null,"Below is the code for ",(0,r.kt)("strong",{parentName:"p"},"Linear Sketch Pattern")," from ",(0,r.kt)("strong",{parentName:"p"},"Solidworks VBA Macro"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},'\' Boolean Variable\nDim BoolStatus As Boolean\n\n\' Select Circle we want to Pattern\nBoolStatus = swDoc.Extension.SelectByID2("Arc1", "SKETCHSEGMENT", 0, 0, 0, True, 1, Nothing, swSelectOption_e.swSelectOptionDefault)\n\n\' Create a Linear Sketch Pattern\nBoolStatus = swSketchManager.CreateLinearSketchStepAndRepeat(1, 3, 1, 1, 0, 1.57, "", False, True, True, False, True)\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Method Name"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"CreateLinearSketchStepAndRepeat")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description"),": Create ",(0,r.kt)("em",{parentName:"p"},"Linear Sketch Pattern")," of the selected sketch entity or entities."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Prerequisites"),": To create a ",(0,r.kt)("strong",{parentName:"p"},"Linear Sketch Pattern")," a Solidworks Sketch entity or entities, first we need following things:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Sketch Entity/Entities to ",(0,r.kt)("em",{parentName:"p"},"Pattern"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"That Entity/Entities is selected before pattern"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"How it works"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"For ",(0,r.kt)("strong",{parentName:"p"},"Linear Sketch Pattern"),", first you need to ",(0,r.kt)("strong",{parentName:"p"},"Create")," a variable of ",(0,r.kt)("inlineCode",{parentName:"p"},"Boolean")," type.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"After creating variable, you need to set the value of this ",(0,r.kt)("inlineCode",{parentName:"p"},"Boolean")," variable.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"For this you used ",(0,r.kt)("inlineCode",{parentName:"p"},"CreateLinearSketchStepAndRepeat")," method from ",(0,r.kt)("strong",{parentName:"p"},"Solidworks Sketch Manager"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"This ",(0,r.kt)("inlineCode",{parentName:"p"},"CreateLinearSketchStepAndRepeat")," method set the value of ",(0,r.kt)("inlineCode",{parentName:"p"},"Boolean")," type variable.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"If the ",(0,r.kt)("em",{parentName:"p"},"Linear Sketch Pattern")," is ",(0,r.kt)("strong",{parentName:"p"},"successful")," then ",(0,r.kt)("inlineCode",{parentName:"p"},"CreateLinearSketchStepAndRepeat")," method return ",(0,r.kt)("strong",{parentName:"p"},"True")," value otherwise ",(0,r.kt)("inlineCode",{parentName:"p"},"CreateLinearSketchStepAndRepeat")," returns ",(0,r.kt)("strong",{parentName:"p"},"False")," value."))),(0,r.kt)("p",null,"This ",(0,r.kt)("inlineCode",{parentName:"p"},"CreateLinearSketchStepAndRepeat")," method takes following parameters as explained:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"NumX")," : ",(0,r.kt)("em",{parentName:"p"},"Total number of instances along the ",(0,r.kt)("strong",{parentName:"em"},"x")," axis, including the seed i.e. original entity/entities."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"NumY")," : ",(0,r.kt)("em",{parentName:"p"},"Total number of instances along the ",(0,r.kt)("strong",{parentName:"em"},"y")," axis, including the seed i.e. original entity/entities."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"SpacingX")," : ",(0,r.kt)("em",{parentName:"p"},"Spacing between instances along the ",(0,r.kt)("strong",{parentName:"em"},"x")," axis."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"SpacingY")," : ",(0,r.kt)("em",{parentName:"p"},"Spacing between instances along the ",(0,r.kt)("strong",{parentName:"em"},"y")," axis."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"AngleX")," : ",(0,r.kt)("em",{parentName:"p"},"Angle for direction 1 relative to the ",(0,r.kt)("strong",{parentName:"em"},"x")," axis."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"AngleY")," : ",(0,r.kt)("em",{parentName:"p"},"Angle for direction 1 relative to the ",(0,r.kt)("strong",{parentName:"em"},"y")," axis."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"DeleteInstances")," : ",(0,r.kt)("em",{parentName:"p"},'Number of instances to delete, passed as a string in the format: "(a) (b) (c)".'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"XSpacingDim")," : ",(0,r.kt)("em",{parentName:"p"},"True to display the spacing between instances dimension along the ",(0,r.kt)("strong",{parentName:"em"},"x")," axis in the graphics area, false to not"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"YSpacingDim")," : ",(0,r.kt)("em",{parentName:"p"},"True to display the spacing between instances dimension along the ",(0,r.kt)("strong",{parentName:"em"},"y")," axis in the graphics area, false to not"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"AngleDim")," : ",(0,r.kt)("em",{parentName:"p"},"True to display the angle dimension between axes in the graphics area, false to not."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"CreateNumOfInstancesDimInXDir")," : ",(0,r.kt)("em",{parentName:"p"},"True to display the number of instances in the ",(0,r.kt)("strong",{parentName:"em"},"x")," direction dimension in the graphics area, false to not."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"CreateNumOfInstancesDimInYDir")," : ",(0,r.kt)("em",{parentName:"p"},"True to display the number of instances in the ",(0,r.kt)("strong",{parentName:"em"},"y")," direction dimension in the graphics area, false to not.")))),(0,r.kt)("p",null,"If you want more detailed explaination then please read further otherwise this will help you to create a ",(0,r.kt)("strong",{parentName:"p"},"Linear Sketch Pattern"),"."),(0,r.kt)("hr",null),(0,r.kt)(o.Z,{mdxType:"AdComponent"}),(0,r.kt)("h2",{id:"for-beginner-macro-developers"},"For Beginner Macro Developers"),(0,r.kt)("p",null,"In this post, I tell you about ",(0,r.kt)("inlineCode",{parentName:"p"},"CreateLinearSketchStepAndRepeat")," method from ",(0,r.kt)("strong",{parentName:"p"},"Solidworks")," ",(0,r.kt)("inlineCode",{parentName:"p"},"SketchManager")," object."),(0,r.kt)("p",null,"This method is ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"most updated"))," method, I found in ",(0,r.kt)("em",{parentName:"p"},"Solidworks API Help"),". "),(0,r.kt)("p",null,"So ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"use this method"))," if you want to create ",(0,r.kt)("em",{parentName:"p"},"Linear Sketch Pattern"),"."),(0,r.kt)("p",null,"Below is the ",(0,r.kt)("inlineCode",{parentName:"p"},"code")," sample to create ",(0,r.kt)("em",{parentName:"p"},"Linear Sketch Pattern"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"Option Explicit\n\n' Create variable for Solidworks application\nDim swApp As SldWorks.SldWorks\n\n' Create variable for Solidworks document\nDim swDoc As SldWorks.ModelDoc2\n\n' Boolean Variable\nDim BoolStatus As Boolean\n\n' Create variable for Solidworks Sketch Manager\nDim swSketchManager As SldWorks.SketchManager\n\n' Create Variable for Solidworks Sketch Segment\nDim swSketchSegment As SldWorks.SketchSegment\n\n' Main function of our VBA program\nSub main()\n\n  ' Set Solidworks variable to Solidworks application\n  Set swApp = Application.SldWorks\n  \n  ' Create string type variable for storing default part location\n  Dim defaultTemplate As String\n\n  ' Set value of this string type variable to \"Default part template\"\n  defaultTemplate = swApp.GetUserPreferenceStringValue(swUserPreferenceStringValue_e.swDefaultTemplatePart)\n\n  ' Set Solidworks document to new part document\n  Set swDoc = swApp.NewDocument(defaultTemplate, 0, 0, 0)\n\n  ' Select Front Plane\n  BoolStatus = swDoc.Extension.SelectByID2(\"Front Plane\", \"PLANE\", 0, 0, 0, False, 0, Nothing, swSelectOption_e.swSelectOptionDefault)\n\n  ' Set Sketch manager for our sketch\n  Set swSketchManager = swDoc.SketchManager\n\n  ' Insert a sketch into selected plane\n  swSketchManager.InsertSketch True\n  \n  ' Set Sketch Segment value and Create a Circle\n  Set swSketchSegment = swSketchManager.CreateCircleByRadius(0, 0, 0, 0.2)\n  \n  ' De-select the lines after creation\n  swDoc.ClearSelection2 True\n\n  ' Select Circle we want to Pattern\n  BoolStatus = swDoc.Extension.SelectByID2(\"Arc1\", \"SKETCHSEGMENT\", 0, 0, 0, True, 1, Nothing, swSelectOption_e.swSelectOptionDefault)\n  \n  ' Create a Linear Sketch Pattern\n  BoolStatus = swSketchManager.CreateLinearSketchStepAndRepeat(3, 1, 1, 0, 0, 0, \"\", True, False, True, True, False)\n  \n  ' De-select the Sketch Segment after Linear Sketch Pattern\n  swDoc.ClearSelection2 True\n  \n  ' Show Front View after Linear Sketch Pattern\n  swDoc.ShowNamedView2 \"\", swStandardViews_e.swFrontView\n  \n  ' Zoom to fit screen in Solidworks Window\n  swDoc.ViewZoomtofit2\n\nEnd Sub\n")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"understanding-the-code"},"Understanding the Code"),(0,r.kt)("p",null,"Now let us walk through ",(0,r.kt)("strong",{parentName:"p"},"each line")," in the above code, and ",(0,r.kt)("strong",{parentName:"p"},"understand")," the meaning and purpose of every line."),(0,r.kt)("p",null,"I also give some link so that you can go through them if there are anything I explained in previous posts."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"Option Explicit\n")),(0,r.kt)("p",null,"This line forces us to define every variable we are going to use. "),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"For more information please visit \ud83d\ude80 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/solidworks-macros/open-new-document"},"Solidworks Macros - Open new Part document"))," post.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Create variable for Solidworks application\nDim swApp As SldWorks.SldWorks\n")),(0,r.kt)("p",null,"In this line, we create a variable which we named as ",(0,r.kt)("inlineCode",{parentName:"p"},"swApp")," and the type of this ",(0,r.kt)("inlineCode",{parentName:"p"},"swApp")," variable is ",(0,r.kt)("inlineCode",{parentName:"p"},"SldWorks.SldWorks"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Create variable for Solidworks document\nDim swDoc As SldWorks.ModelDoc2\n")),(0,r.kt)("p",null,"In this line, we create a variable which we named as ",(0,r.kt)("inlineCode",{parentName:"p"},"swDoc")," and the type of this ",(0,r.kt)("inlineCode",{parentName:"p"},"swDoc")," variable is ",(0,r.kt)("inlineCode",{parentName:"p"},"SldWorks.ModelDoc2"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Boolean Variable\nDim BoolStatus As Boolean\n")),(0,r.kt)("p",null,"In this line, we create a variable named ",(0,r.kt)("inlineCode",{parentName:"p"},"BoolStatus")," as ",(0,r.kt)("inlineCode",{parentName:"p"},"Boolean")," object type."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Create variable for Solidworks Sketch Manager\nDim swSketchManager As SldWorks.SketchManager\n")),(0,r.kt)("p",null,"In above line, we create variable ",(0,r.kt)("inlineCode",{parentName:"p"},"swSketchManager")," for ",(0,r.kt)("strong",{parentName:"p"},"Solidworks Sketch Manager"),"."),(0,r.kt)("p",null,"As the name suggested, a ",(0,r.kt)("strong",{parentName:"p"},"Sketch Manager")," holds variours methods and properties to manage ",(0,r.kt)("em",{parentName:"p"},"Sketches"),"."),(0,r.kt)("p",null,"To see methods and properties related to ",(0,r.kt)("inlineCode",{parentName:"p"},"SketchManager")," object, please visit \ud83d\ude80 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"https://help.solidworks.com/2017/english/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.ISketchManager_members.html"},"this page of Solidworks API Help"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Create variable for Solidworks Sketch Segment\nDim swSketchSegment As SldWorks.SketchSegment\n")),(0,r.kt)("p",null,"In this line, we Create a variable which we named as ",(0,r.kt)("inlineCode",{parentName:"p"},"swSketchSegment")," and the type of this ",(0,r.kt)("inlineCode",{parentName:"p"},"swSketchSegment")," variable is ",(0,r.kt)("inlineCode",{parentName:"p"},"SldWorks.SketchSegment"),"."),(0,r.kt)("p",null,"We create variable ",(0,r.kt)("inlineCode",{parentName:"p"},"swSketchSegment")," for ",(0,r.kt)("strong",{parentName:"p"},"Solidworks Sketch Segments"),"."),(0,r.kt)("p",null,"To see methods and properties related to ",(0,r.kt)("inlineCode",{parentName:"p"},"swSketchSegment")," object, please visit \ud83d\ude80 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"https://help.solidworks.com/2019/English/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.ISketchSegment_members.html"},"this page of Solidworks API Help"))),(0,r.kt)("p",null,"These all are our global variables."),(0,r.kt)("p",null,"As you can see in code sample, they are ",(0,r.kt)("strong",{parentName:"p"},"Solidworks API Objects"),"."),(0,r.kt)("p",null,"So basically I group all the ",(0,r.kt)("strong",{parentName:"p"},"Solidworks API Objects")," in one place."),(0,r.kt)("p",null,"I have also place ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")," type object at top also, because after certain point we will ",(0,r.kt)("em",{parentName:"p"},"need")," this variable frequently."),(0,r.kt)("p",null,"Thus, I have started placing it here."),(0,r.kt)("p",null,"Next is our ",(0,r.kt)("inlineCode",{parentName:"p"},"Sub")," procedure which has name of ",(0,r.kt)("inlineCode",{parentName:"p"},"main"),". "),(0,r.kt)("p",null,"This procedure hold all the ",(0,r.kt)("em",{parentName:"p"},"statements (instructions)")," we give to computer."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Set Solidworks variable to Solidworks application\nSet swApp = Application.SldWorks\n")),(0,r.kt)("p",null,"In this line, we set the value of our Solidworks variable ",(0,r.kt)("inlineCode",{parentName:"p"},"swApp"),"; which we define earlier; to Solidworks application."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Create string type variable for storing default part location\nDim defaultTemplate As String\n' Set value of this string type variable to \"Default part template\"\ndefaultTemplate = swApp.GetUserPreferenceStringValue(swUserPreferenceStringValue_e.swDefaultTemplatePart)\n")),(0,r.kt)("p",null,"In 1st statement of above example, we are defining a variable of ",(0,r.kt)("inlineCode",{parentName:"p"},"string")," type and named it as ",(0,r.kt)("inlineCode",{parentName:"p"},"defaultTemplate"),"."),(0,r.kt)("p",null,"This variable ",(0,r.kt)("inlineCode",{parentName:"p"},"defaultTemplate"),", hold the location the location of ",(0,r.kt)("strong",{parentName:"p"},"Default Part Template"),"."),(0,r.kt)("p",null,"In 2nd line of above example. we assign value to our newly define ",(0,r.kt)("inlineCode",{parentName:"p"},"defaultTemplate")," variable."),(0,r.kt)("p",null,"We assign the value by using a ",(0,r.kt)("em",{parentName:"p"},"Method")," named ",(0,r.kt)("inlineCode",{parentName:"p"},"GetUserPreferenceStringValue()"),". "),(0,r.kt)("p",null,"This ",(0,r.kt)("inlineCode",{parentName:"p"},"GetUserPreferenceStringValue()")," method is a part of our main Solidworks variable ",(0,r.kt)("inlineCode",{parentName:"p"},"swApp"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Set Solidworks document to new part document\nSet swDoc = swApp.NewDocument(defaultTemplate, 0, 0, 0)\n")),(0,r.kt)("p",null,"In this line, we set the value of our ",(0,r.kt)("inlineCode",{parentName:"p"},"swDoc")," variable to new document."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"For ",(0,r.kt)("strong",{parentName:"p"},"detailed information")," about these lines please visit \ud83d\ude80 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/solidworks-macros/open-new-document"},"Solidworks Macros - Open new Part document"))," post."),(0,r.kt)("p",{parentName:"admonition"},"I have discussed them ",(0,r.kt)("strong",{parentName:"p"},"thoroghly")," in \ud83d\ude80 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/solidworks-macros/open-new-document"},"Solidworks Macros - Open new Part document"))," post, so do checkout that post if you want to understand above code in more detail.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},'\' Select Front Plane\nBoolStatus = swDoc.Extension.SelectByID2("Front Plane", "PLANE", 0, 0, 0, False, 0, Nothing, swSelectOption_e.swSelectOptionDefault)\n')),(0,r.kt)("p",null,"In above line, we select the ",(0,r.kt)("em",{parentName:"p"},"front plane")," by using ",(0,r.kt)("inlineCode",{parentName:"p"},"SelectByID2")," method from ",(0,r.kt)("inlineCode",{parentName:"p"},"Extension")," object."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"For more information about selection method please visit \ud83d\ude80 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/solidworks-macros/select-plane-from-tree"},"Solidworks Macros - Selection Methods"))," post.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Set Sketch manager for our sketch\nSet swSketchManager = swDoc.SketchManager\n")),(0,r.kt)("p",null,"In above line, we set the ",(0,r.kt)("em",{parentName:"p"},"Sketch manager")," variable to ",(0,r.kt)("em",{parentName:"p"},"current document's sketch manager"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Insert a sketch into selected plane\nswSketchManager.InsertSketch True\n")),(0,r.kt)("p",null,"In above line, we use ",(0,r.kt)("inlineCode",{parentName:"p"},"InsertSketch")," method of ",(0,r.kt)("em",{parentName:"p"},"SketchManager")," and give ",(0,r.kt)("inlineCode",{parentName:"p"},"True")," value."),(0,r.kt)("p",null,"This method allows us to insert a sketch in selected plane."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Set Sketch Segment value and Create a Circle\nSet swSketchSegment = swSketchManager.CreateCircleByRadius(0, 0, 0, 0.2)\n")),(0,r.kt)("p",null,"In above line, we set the value of Solidworks Sketch Segment variable ",(0,r.kt)("inlineCode",{parentName:"p"},"swSketchSegment")," by ",(0,r.kt)("inlineCode",{parentName:"p"},"CreateCircleByRadius")," method from ",(0,r.kt)("em",{parentName:"p"},"Solidworks Sketch Manager"),"."),(0,r.kt)("p",null,"This ",(0,r.kt)("inlineCode",{parentName:"p"},"CreateCircleByRadius")," method creates ",(0,r.kt)("em",{parentName:"p"},"a Circle")," at given point with radius."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"For more information about ",(0,r.kt)("inlineCode",{parentName:"p"},"CreateCircleByRadius")," method, you can read my \ud83d\ude80 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/solidworks-macros/create-circle-by-radius"},"Solidworks Macro - Create Circle By Radius"))," post.")),(0,r.kt)("p",null,"That post describe all the parameters we need for this ",(0,r.kt)("inlineCode",{parentName:"p"},"CreateCircleByRadius")," method in details."),(0,r.kt)("p",null,"In above line, we create a Circle with:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Circle Centerpoint")," : At origin i.e. ",(0,r.kt)("em",{parentName:"p"},"(0, 0, 0)"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Circle Radius")," : ",(0,r.kt)("em",{parentName:"p"},"0.2")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' De-select the lines after creation\nswDoc.ClearSelection2 True\n")),(0,r.kt)("p",null,"After creating the circle we ",(0,r.kt)("em",{parentName:"p"},"de-select")," it."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"We ",(0,r.kt)("strong",{parentName:"p"},"don't need")," to de-select the circle for ",(0,r.kt)("strong",{parentName:"p"},"Pattern")," as we will select the circle agains in next line. I just want to show you how to select a ",(0,r.kt)("strong",{parentName:"p"},"Sketch Segment")," with ",(0,r.kt)("inlineCode",{parentName:"p"},"SelectById")," Menthod in next line of code.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},'\' Select Circle we want to Pattern\nBoolStatus = swDoc.Extension.SelectByID2("Arc1", "SKETCHSEGMENT", 0, 0, 0, True, 0, Nothing, swSelectOption_e.swSelectOptionDefault)\n')),(0,r.kt)("p",null,"In above line of code, we select the Circle i.e. ",(0,r.kt)("strong",{parentName:"p"},"Arc 1")," and add it to selection list."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},'\' Create a Linear Sketch Pattern\nBoolStatus = swSketchManager.CreateLinearSketchStepAndRepeat(3, 1, 1, 0, 0, 0, "", True, False, True, True, False)\n')),(0,r.kt)("p",null,"In above line, we ",(0,r.kt)("strong",{parentName:"p"},"Pattern")," selected ",(0,r.kt)("em",{parentName:"p"},"Circle")," by ",(0,r.kt)("inlineCode",{parentName:"p"},"CreateLinearSketchStepAndRepeat")," method from ",(0,r.kt)("em",{parentName:"p"},"Solidworks Sketch Manger")," variable."),(0,r.kt)("p",null,"This ",(0,r.kt)("inlineCode",{parentName:"p"},"CreateLinearSketchStepAndRepeat")," method takes following parameters as explained:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"NumX")," : ",(0,r.kt)("em",{parentName:"p"},"Total number of instances along the ",(0,r.kt)("strong",{parentName:"em"},"x")," axis, including the seed i.e. original entity/entities."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"NumY")," : ",(0,r.kt)("em",{parentName:"p"},"Total number of instances along the ",(0,r.kt)("strong",{parentName:"em"},"y")," axis, including the seed i.e. original entity/entities."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"SpacingX")," : ",(0,r.kt)("em",{parentName:"p"},"Spacing between instances along the ",(0,r.kt)("strong",{parentName:"em"},"x")," axis."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"SpacingY")," : ",(0,r.kt)("em",{parentName:"p"},"Spacing between instances along the ",(0,r.kt)("strong",{parentName:"em"},"y")," axis."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"AngleX")," : ",(0,r.kt)("em",{parentName:"p"},"Angle for direction 1 relative to the ",(0,r.kt)("strong",{parentName:"em"},"x")," axis."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"AngleY")," : ",(0,r.kt)("em",{parentName:"p"},"Angle for direction 1 relative to the ",(0,r.kt)("strong",{parentName:"em"},"y")," axis."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"DeleteInstances")," : ",(0,r.kt)("em",{parentName:"p"},'Number of instances to delete, passed as a string in the format: "(a) (b) (c)".'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"XSpacingDim")," : ",(0,r.kt)("em",{parentName:"p"},"True to display the spacing between instances dimension along the ",(0,r.kt)("strong",{parentName:"em"},"x")," axis in the graphics area, false to not"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"YSpacingDim")," : ",(0,r.kt)("em",{parentName:"p"},"True to display the spacing between instances dimension along the ",(0,r.kt)("strong",{parentName:"em"},"y")," axis in the graphics area, false to not"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"AngleDim")," : ",(0,r.kt)("em",{parentName:"p"},"True to display the angle dimension between axes in the graphics area, false to not."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"CreateNumOfInstancesDimInXDir")," : ",(0,r.kt)("em",{parentName:"p"},"True to display the number of instances in the ",(0,r.kt)("strong",{parentName:"em"},"x")," direction dimension in the graphics area, false to not."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"CreateNumOfInstancesDimInYDir")," : ",(0,r.kt)("em",{parentName:"p"},"True to display the number of instances in the ",(0,r.kt)("strong",{parentName:"em"},"y")," direction dimension in the graphics area, false to not.")))),(0,r.kt)("p",null,"After the function complete following are the results:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Return Value"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"True"),": ",(0,r.kt)("em",{parentName:"p"},"If Linear Sketch Pattern is "),"Success",(0,r.kt)("em",{parentName:"p"},"."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"False"),": ",(0,r.kt)("em",{parentName:"p"},"If Linear Sketch Pattern is "),"Fail",(0,r.kt)("em",{parentName:"p"},".")))),(0,r.kt)("p",null,"In our code, I have used following values:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"NumX")," : ",(0,r.kt)("em",{parentName:"p"},"I have used ",(0,r.kt)("strong",{parentName:"em"},"3")," as Total number of instances along the ",(0,r.kt)("strong",{parentName:"em"},"x")," axis including original circle."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"NumY")," : ",(0,r.kt)("em",{parentName:"p"},"I have used ",(0,r.kt)("strong",{parentName:"em"},"1")," as Total number of instances along the ",(0,r.kt)("strong",{parentName:"em"},"y")," axis which includes original circle only.")),(0,r.kt)("admonition",{parentName:"li",type:"info"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("em",{parentName:"p"},"Even uf you don't want to pattern in ",(0,r.kt)("strong",{parentName:"em"},"Y")," direction, you have to give atleast 1 as a value. Same goes for ",(0,r.kt)("strong",{parentName:"em"},"X")," direction.")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"SpacingX")," : ",(0,r.kt)("em",{parentName:"p"},"I use ",(0,r.kt)("strong",{parentName:"em"},"1")," as Spacing between instances along the ",(0,r.kt)("strong",{parentName:"em"},"x")," axis."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"SpacingY")," : ",(0,r.kt)("em",{parentName:"p"},"I use ",(0,r.kt)("strong",{parentName:"em"},"0")," Spacing between instances along the ",(0,r.kt)("strong",{parentName:"em"},"y")," axis."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"AngleX")," : ",(0,r.kt)("em",{parentName:"p"},"I use ",(0,r.kt)("strong",{parentName:"em"},"0")," Angle for direction 1 relative to the ",(0,r.kt)("strong",{parentName:"em"},"x")," axis."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"AngleY")," : ",(0,r.kt)("em",{parentName:"p"},"I use ",(0,r.kt)("strong",{parentName:"em"},"0")," Angle for direction 1 relative to the ",(0,r.kt)("strong",{parentName:"em"},"y")," axis."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"DeleteInstances")," : ",(0,r.kt)("em",{parentName:"p"},"I use ",(0,r.kt)("strong",{parentName:"em"},'""')," as Number of instances to delete, because I don't want to delete any instances."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"XSpacingDim")," : ",(0,r.kt)("em",{parentName:"p"},"I use ",(0,r.kt)("strong",{parentName:"em"},"True")," to display the spacing between instances dimension along the ",(0,r.kt)("strong",{parentName:"em"},"x")," axis in the graphics area."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"YSpacingDim")," : ",(0,r.kt)("em",{parentName:"p"},"I use ",(0,r.kt)("strong",{parentName:"em"},"False")," to display the spacing between instances dimension along the ",(0,r.kt)("strong",{parentName:"em"},"y")," axis in the graphics area."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"AngleDim")," : ",(0,r.kt)("em",{parentName:"p"},"I use ",(0,r.kt)("strong",{parentName:"em"},"True")," to display the angle dimension between axes in the graphics area."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"CreateNumOfInstancesDimInXDir")," : ",(0,r.kt)("em",{parentName:"p"},"I use ",(0,r.kt)("strong",{parentName:"em"},"True")," to display the number of instances in the ",(0,r.kt)("strong",{parentName:"em"},"x")," direction dimension in the graphics area."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"CreateNumOfInstancesDimInYDir")," : ",(0,r.kt)("em",{parentName:"p"},"I use ",(0,r.kt)("strong",{parentName:"em"},"False")," to display the number of instances in the ",(0,r.kt)("strong",{parentName:"em"},"y")," direction dimension in the graphics area.")))),(0,r.kt)("p",null,"Below image shows before and after Linear Sketch Pattern."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Before Linear Sketch Pattern")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"before-linear-pattern",src:n(47906).Z,width:"1037",height:"813"})),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"After Linear Sketch Pattern")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"after-linear-pattern",src:n(6321).Z,width:"1035",height:"811"})),(0,r.kt)("hr",null),(0,r.kt)("admonition",{title:"NOTE",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"It is ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"very important"))," to remember that, when you give distance or any other numeric value in ",(0,r.kt)("strong",{parentName:"p"},"Solidworks API"),", Solidworks takes that numeric value in ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Meter only")),"."),(0,r.kt)("p",{parentName:"admonition"},"Please see below for detail:"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Length: ",(0,r.kt)("strong",{parentName:"p"},"Meter"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Angle: ",(0,r.kt)("strong",{parentName:"p"},"Radian")))),(0,r.kt)("p",{parentName:"admonition"},"Solidworks API does not care about your application's Unit systems."),(0,r.kt)("p",{parentName:"admonition"},"For example, I works in ",(0,r.kt)("strong",{parentName:"p"},"ANSI")," system means ",(0,r.kt)("em",{parentName:"p"},"inches")," for distance. But when I used ",(0,r.kt)("strong",{parentName:"p"},"Solidworks API")," through ",(0,r.kt)("em",{parentName:"p"},"VBA macros or C#"),", I need to converted numeric values."),(0,r.kt)("p",{parentName:"admonition"},"Because Solidworks API output the distance in ",(0,r.kt)("strong",{parentName:"p"},"Meter")," which is not my requirement.")),(0,r.kt)("hr",null),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' De-select the Sketch after creation\nswDoc.ClearSelection2 True\n")),(0,r.kt)("p",null,"In the above line of code, we deselect the ",(0,r.kt)("strong",{parentName:"p"},"Sketch")," after the ",(0,r.kt)("em",{parentName:"p"},"Linear Sketch Pattern")," operation."),(0,r.kt)("p",null,"For de-selecting, we use ",(0,r.kt)("inlineCode",{parentName:"p"},"ClearSelection2")," method from our Solidworks document name ",(0,r.kt)("inlineCode",{parentName:"p"},"swDoc"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},'\' Show Front View after Linear Sketch Pattern\nswDoc.ShowNamedView2 "", swStandardViews_e.swFrontView\n')),(0,r.kt)("p",null,"In the above line of code, we update the ",(0,r.kt)("em",{parentName:"p"},"view orientation")," to ",(0,r.kt)("strong",{parentName:"p"},"Front View"),"."),(0,r.kt)("p",null,"In my machine, after inserting a sketch view orientation does not changed."),(0,r.kt)("p",null,"Because of this I have to update the view to ",(0,r.kt)("strong",{parentName:"p"},"Front view"),"."),(0,r.kt)("p",null,"For showing ",(0,r.kt)("strong",{parentName:"p"},"Front View")," we used ",(0,r.kt)("inlineCode",{parentName:"p"},"ShowNamedView2")," method from our Solidworks document name ",(0,r.kt)("inlineCode",{parentName:"p"},"swDoc"),"."),(0,r.kt)("p",null,"This method takes 2 parameter described as follows:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"VName")," : Name of the view to display or an empty string to use ViewId instead")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"ViewId")," : ID of the view to display as defined by ",(0,r.kt)("inlineCode",{parentName:"p"},"swStandardViews_e")," or -1 to use the ",(0,r.kt)("strong",{parentName:"p"},"VName")," argument instead."))),(0,r.kt)("admonition",{title:"NOTE",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"If you specify both ",(0,r.kt)("strong",{parentName:"p"},"VName")," and ",(0,r.kt)("strong",{parentName:"p"},"ViewId"),", then ",(0,r.kt)("strong",{parentName:"p"},"ViewId")," takes precedence if the two arguments do not resolve to the same view.")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"swStandardViews_e")," has following Standard View Types:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"swBackView"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"swBottomView"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"swDimetricView"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"swFrontView"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"swIsometricView"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"swLeftView"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"swRightView"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"swTopView"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"swExtendetricView")))),(0,r.kt)("p",null,"In our code, we did not use ",(0,r.kt)("strong",{parentName:"p"},"VName")," instead I used ",(0,r.kt)("em",{parentName:"p"},"empty string")," in form of ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},'""'))," symbol."),(0,r.kt)("p",null,"I used ",(0,r.kt)("strong",{parentName:"p"},"ViewId")," value to specify view and used ",(0,r.kt)("inlineCode",{parentName:"p"},"swStandardViews_e.swFrontView")," value to use ",(0,r.kt)("em",{parentName:"p"},"Standard Front View"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Zoom to fit screen in Solidworks Window\nswDoc.ViewZoomtofit\n")),(0,r.kt)("p",null,"In this last line we use ",(0,r.kt)("em",{parentName:"p"},"zoom to fit")," command."),(0,r.kt)("p",null,"For Zoom to fit, we use ",(0,r.kt)("inlineCode",{parentName:"p"},"ViewZoomtofit")," method from our Solidworks document variable ",(0,r.kt)("inlineCode",{parentName:"p"},"swDoc"),"."),(0,r.kt)("p",null,"This is it !!!"),(0,r.kt)("p",null,"If you found anything to add or update, please let me know on my e-mail."),(0,r.kt)("hr",null),(0,r.kt)(o.Z,{mdxType:"AdComponent"}),(0,r.kt)("h2",{id:"vba-language-feature-used-in-this-post"},"VBA Language feature used in this post"),(0,r.kt)("p",null,"In this post used some features of ",(0,r.kt)("strong",{parentName:"p"},"VBA programming language"),"."),(0,r.kt)("p",null,"This section of post, has some brief information about the VBA programming language specific features."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"We use ",(0,r.kt)("strong",{parentName:"p"},"Option Explicit")," for capturing un-declared variables. If you want to read more about ",(0,r.kt)("strong",{parentName:"p"},"Option Explicit")," then please visit \ud83d\ude80 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/vba/vba-declaring-and-scoping-of-variables"},"Declaring and Scoping of Variables")),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Then we create ",(0,r.kt)("strong",{parentName:"p"},"variable")," for different data types. If you know in detail about the ",(0,r.kt)("strong",{parentName:"p"},"Variables"),", then please visit \ud83d\ude80 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/vba/vba-variables"},"Variables"))," and \ud83d\ude80 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/vba/vba-programming-concepts/#data-types-in-vba"},"Data-types"))," posts of this blog. It will help you to understand what ",(0,r.kt)("strong",{parentName:"p"},"Variables")," are and how to use them.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Then we create ",(0,r.kt)("strong",{parentName:"p"},"main Sub procedure")," for our macro. If you know in detail about the ",(0,r.kt)("strong",{parentName:"p"},"Sub procedure"),", then I suggest you to visit \ud83d\ude80 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/vba/vba-sub-and-function-procedure"},"VBA Sub and Function Procedures"))," and \ud83d\ude80 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/vba/vba-executing-procedures"},"Executing Sub and Function Procedures"))," posts of this blog. It will help you to understand what ",(0,r.kt)("strong",{parentName:"p"},"Procedures")," are and how to use them.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"In most part we create some variables and set their values. We set those values by using some ",(0,r.kt)("strong",{parentName:"p"},"functions")," provided from objects. If you don't know about the ",(0,r.kt)("strong",{parentName:"p"},"functions"),", then you should visit \ud83d\ude80 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/vba/vba-functions"},"VBA Functions"))," and \ud83d\ude80 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/vba/vba-more-function"},"VBA Functions that do more"))," posts of this blog. It will help you to understand what ",(0,r.kt)("strong",{parentName:"p"},"functions")," are and how to use them."))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"solidworks-api-objects"},"Solidworks API Objects"),(0,r.kt)("p",null,"In this post of ",(0,r.kt)("strong",{parentName:"p"},"Linear Sketch Pattern"),", we use ",(0,r.kt)("em",{parentName:"p"},"Solidworks API objects and their methods"),"."),(0,r.kt)("p",null,"This section contains the list of all ",(0,r.kt)("strong",{parentName:"p"},"Solidworks Objects")," used in this post."),(0,r.kt)("p",null,"I have also attached links of these ",(0,r.kt)("strong",{parentName:"p"},"Solidworks API Objects")," in ",(0,r.kt)("strong",{parentName:"p"},"API Help website"),"."),(0,r.kt)("p",null,"If you want to explore those objects, you can use these links."),(0,r.kt)("p",null,"These Solidworks API Objects are listed below:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Solidworks Application Object")),(0,r.kt)("p",{parentName:"li"},"If you want explore ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Properties and Methods/Functions"))," of ",(0,r.kt)("strong",{parentName:"p"},"Solidworks Application Object")," object you can visit \ud83d\ude80 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"https://help.solidworks.com/2019/english/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.ISldWorks_members.html"},"this link")),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Solidworks Document Object")),(0,r.kt)("p",{parentName:"li"},"If you want explore ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Properties and Methods/Functions"))," of ",(0,r.kt)("strong",{parentName:"p"},"Solidworks Document Object")," object you can visit \ud83d\ude80 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"https://help.solidworks.com/2019/english/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.IModelDoc2_members.html"},"this link")),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Solidworks Sketch Manager Object")),(0,r.kt)("p",{parentName:"li"},"If you want explore ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Properties and Methods/Functions"))," of ",(0,r.kt)("strong",{parentName:"p"},"Solidworks Sketch Manager Object")," you can visit \ud83d\ude80 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"https://help.solidworks.com/2017/english/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.ISketchManager_members.html"},"this link")),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Solidworks Sketch Segment Object")),(0,r.kt)("p",{parentName:"li"},"If you want explore ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Properties and Methods/Functions"))," of ",(0,r.kt)("strong",{parentName:"p"},"Solidworks Sketch Segment Object")," you can visit \ud83d\ude80 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"https://help.solidworks.com/2019/English/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.ISketchSegment_members.html"},"this link")),"."))),(0,r.kt)("hr",null),(0,r.kt)("p",null,"Hope this post helps you to ",(0,r.kt)("em",{parentName:"p"},"Create Linear Sketch Pattern")," with Solidworks VBA Macros."),(0,r.kt)("p",null,"For more such tutorials on ",(0,r.kt)("strong",{parentName:"p"},"Solidworks VBA Macro"),", do come to this blog after sometime."),(0,r.kt)("p",null,"If you like the post then please share it with your friends also."),(0,r.kt)("p",null,"Do let me know by you like this post or not!"),(0,r.kt)("p",null,"Till then, Happy learning!"))}u.isMDXComponent=!0},74753:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(67294);class r extends a.Component{componentDidMount(){(()=>{const e=document.createElement("script");e.src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js",e.async=!0,e.defer=!0,document.body.insertBefore(e,document.body.firstChild)})(),(window.adsbygoogle=window.adsbygoogle||[]).push({})}render(){return a.createElement("ins",{className:"adsbygoogle",style:{display:"block"},"data-ad-client":"ca-pub-8158659264340002","data-ad-slot":"6644001766","data-ad-format":"auto","data-full-width-responsive":"true"})}}},6321:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/after-linear-pattern-b545e8f2dbb930bd1376406b6e2ad911.png"},47906:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/before-linear-pattern-251cc164685e46a45de3320aca3bf51a.png"}}]);