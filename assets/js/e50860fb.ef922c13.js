"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[9547],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),m=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=m(e.components);return a.createElement(s.Provider,{value:t},e.children)},k={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},N=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),N=m(n),d=r,u=N["".concat(s,".").concat(d)]||N[d]||k[d]||l;return n?a.createElement(u,i(i({ref:t},p),{},{components:n})):a.createElement(u,i({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=N;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var m=2;m<l;m++)i[m]=n[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}N.displayName="MDXCreateElement"},25674:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return o},metadata:function(){return m},toc:function(){return k}});var a=n(87462),r=n(63366),l=(n(67294),n(3905)),i=["components"],o={categories:"Solidworks-macro",title:"Solidworks VBA Macro - Add Coincident Mate",permalink:"/solidworks-vba-macros/assembly-conicident-mate/",tags:["Solidworks Macro"],id:"assembly-conicident-mate"},s=void 0,m={unversionedId:"assembly-conicident-mate",id:"assembly-conicident-mate",title:"Solidworks VBA Macro - Add Coincident Mate",description:"Objective",source:"@site/docs/solidworks-macros/022.3-assembly-coincident-mate.md",sourceDirName:".",slug:"/assembly-conicident-mate",permalink:"/solidworks-macros/assembly-conicident-mate",draft:!1,tags:[{label:"Solidworks Macro",permalink:"/solidworks-macros/tags/solidworks-macro"}],version:"current",frontMatter:{categories:"Solidworks-macro",title:"Solidworks VBA Macro - Add Coincident Mate",permalink:"/solidworks-vba-macros/assembly-conicident-mate/",tags:["Solidworks Macro"],id:"assembly-conicident-mate"},sidebar:"tutorialSidebar",previous:{title:"Solidworks VBA Macro - Unfix Component",permalink:"/solidworks-macros/assembly-unfix-component"},next:{title:"Solidworks VBA Macro - Add Parallel Mate",permalink:"/solidworks-macros/assembly-parallel-mate"}},p={},k=[{value:"Objective",id:"objective",level:2},{value:"Results We Can Get",id:"results-we-can-get",level:2},{value:"Macro Video",id:"macro-video",level:2},{value:"VBA Macro",id:"vba-macro",level:2},{value:"Prerequisite",id:"prerequisite",level:2},{value:"Steps To Follow",id:"steps-to-follow",level:2},{value:"Create and Initialize required variables",id:"create-and-initialize-required-variables",level:3},{value:"Get Assembly Title",id:"get-assembly-title",level:3},{value:"First Component and Plane List",id:"first-component-and-plane-list",level:3},{value:"Get Plane names",id:"get-plane-names",level:3},{value:"Select Planes",id:"select-planes",level:3},{value:"Add Coincident Mate",id:"add-coincident-mate",level:3},{value:"Final work",id:"final-work",level:3}],N={toc:k};function d(e){var t=e.components,o=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},N,o,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"objective"},"Objective"),(0,l.kt)("p",null,"In this article we ",(0,l.kt)("strong",{parentName:"p"},"create and understand")," VBA macro of adding ",(0,l.kt)("strong",{parentName:"p"},"Coincident Mate")," in ",(0,l.kt)("strong",{parentName:"p"},"Assembly document")," of ",(0,l.kt)("em",{parentName:"p"},"SOLIDWORKS CAD Software"),"."),(0,l.kt)("p",null,"This method is ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"most updated"))," method, so ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"use this method"))," if you want to add ",(0,l.kt)("strong",{parentName:"p"},"Coincident Mate")," quickly. "),(0,l.kt)("h2",{id:"results-we-can-get"},"Results We Can Get"),(0,l.kt)("p",null,"After running our macro we successfully add ",(0,l.kt)("strong",{parentName:"p"},"Coincident Mate")," a Component in an Assembly as a result."),(0,l.kt)("p",null,"Below image shows the result we get."),(0,l.kt)("p",null,(0,l.kt)("a",{target:"_blank",href:n(51597).Z},(0,l.kt)("img",{alt:"unfix-component-final-result",src:n(36509).Z,width:"1365",height:"728"}))),(0,l.kt)("p",null,"We ",(0,l.kt)("strong",{parentName:"p"},"Coincident Mate")," in following steps in general."),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Get Assembly Name without extension.")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Loop through each plane.")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Get Plane names for selection.")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Select Both Planes.")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Add Coincident Mate.")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Final Work"))),(0,l.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"To get the correct result please follow the steps correctly."))),(0,l.kt)("h2",{id:"macro-video"},"Macro Video"),(0,l.kt)("p",null,"Below \ud83c\udfac video shows ",(0,l.kt)("strong",{parentName:"p"},"Adding Coincident Mate")," from ",(0,l.kt)("em",{parentName:"p"},"SOLIDWORKS VBA Macros"),"."),(0,l.kt)("iframe",{src:"https://www.youtube.com/embed/PQ5D2yFex34",frameborder:"0",allowfullscreen:!0,width:"100%",height:"500"}),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"Above video is just for visualization and there are no explanation."))," "),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"I have explained each and every line in this article."))),(0,l.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"It is advisable to watch video, since it help you to better understand the process."))),(0,l.kt)("h2",{id:"vba-macro"},"VBA Macro"),(0,l.kt)("p",null,"Below is the ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"VBA macro"))," for ",(0,l.kt)("em",{parentName:"p"},"Coincident Mate"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"Option Explicit\n\n' Variable for Solidworks Application\nDim swApp As SldWorks.SldWorks\n\n' Variable for Solidworks document\nDim swDoc As SldWorks.ModelDoc2\n\n' Variable for Solidworks Assembly\nDim swAssembly As SldWorks.AssemblyDoc\n\n' Variable for Solidworks Component\nDim swComponent As SldWorks.Component2\n\n' Variable for Solidworks Mate Feature\nDim swMateFeature As SldWorks.Feature\n\n' Boolean Variable\nDim boolStatus As Boolean\n\n' Program to add Coincident Mate\nSub main()\n\n  ' Set Solidworks Application variable to current application\n  Set swApp = Application.SldWorks\n  \n  ' Set Solidworks document variable to currently opened document\n  Set swDoc = swApp.ActiveDoc\n  \n  ' Check if Solidworks document is opened or not\n  If swDoc Is Nothing Then\n    MsgBox \"Solidworks document is not opened.\"\n    Exit Sub\n  End If\n  \n  ' Set Solidworks Assembly document\n  Set swAssembly = swDoc\n  \n  ' variable for Assembly Title\n  Dim assemblyTitle As String\n  \n  ' Get assembly title\n  assemblyTitle = swDoc.GetTitle\n  \n  ' Variable for List of elements\n  Dim vArray As Variant\n  \n  ' Using this variable for getting Assembly name without extension\n  vArray = Split(assemblyTitle, \".\")\n  \n  ' Update Assembly Title\n  assemblyTitle = vArray(0)\n  \n  ' Get Components list in opened assembly\n  vArray = swAssembly.GetComponents(True)\n  \n  ' Set Solidworks Component variable\n  Set swComponent = vArray(0)\n  \n  ' Redefine array variable\n  ReDim vArray(1 To 3) As String\n  \n  ' Update Array list\n  vArray(1) = \"Front Plane\"\n  vArray(2) = \"Right Plane\"\n  vArray(3) = \"Top Plane\"\n  \n  ' Variable for loop\n  Dim i As Integer\n  \n  ' Loop Plane List\n  For i = 1 To UBound(vArray)\n    \n    ' Variable for Current Plane\n    Dim currentPlane As String\n    \n    ' Set current plane\n    currentPlane = vArray(i)\n    \n    ' Variable for First Plane name\n    Dim firstSelection As String\n    \n    ' Set First Plane Name\n    firstSelection = currentPlane + \"@\" + assemblyTitle\n    \n    ' Variable for Second Plane name\n    Dim secondSelection As String\n    \n    ' Set Second Plane name\n    secondSelection = currentPlane + \"@\" + swComponent.Name + \"@\" + assemblyTitle\n    \n    ' Select First Plane\n    boolStatus = swDoc.Extension.SelectByID2(firstSelection, \"PLANE\", 0, 0, 0, False, 1, Nothing, swSelectOptionDefault)\n    \n    ' Select Second Plane\n    boolStatus = swDoc.Extension.SelectByID2(secondSelection, \"PLANE\", 0, 0, 0, True, 1, Nothing, swSelectOptionDefault)\n  \n    ' Add Coincident Mate\n    Set swMateFeature = swAssembly.AddMate5(swMateCOINCIDENT, swMateAlignALIGNED, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, swAddMateError_ErrorUknown)\n    \n    ' Check if Mate is added or not\n    If swMateFeature Is Nothing Then\n      MsgBox \"Failed to Add Mate.\"\n      swDoc.ClearSelection2 True\n      Exit Sub\n    End If\n    \n  Next\n  \n  ' Rebuild assembly\n  swDoc.ForceRebuild3 True\n  \n  ' Zoom to fit\n  swDoc.ViewZoomtofit2\n  \nEnd Sub\n")),(0,l.kt)("h2",{id:"prerequisite"},"Prerequisite"),(0,l.kt)("p",null,"There are some ",(0,l.kt)("em",{parentName:"p"},"prerequisite")," for this article."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Knowledge of ",(0,l.kt)("strong",{parentName:"p"},"VBA programming language")," is \u2757",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"required")),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"We use an existing part in Assembly document.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"This component is Float as shown in below image."))),(0,l.kt)("p",null,(0,l.kt)("a",{target:"_blank",href:n(79225).Z},(0,l.kt)("img",{alt:"prerequisite",src:n(57909).Z,width:"1366",height:"578"}))),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"We will apply checks in this article, so the code we write should be error free most of the time."))),(0,l.kt)("h2",{id:"steps-to-follow"},"Steps To Follow"),(0,l.kt)("p",null,"This ",(0,l.kt)("strong",{parentName:"p"},"VBA macro")," can be divided into following sections:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Create and Initialize required variables")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Get Assembly Title")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"First Component and Plane List")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Get Plane names")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Select Planes")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Add Coincident Mate")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Final Work"))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"Every section with each line is explained below."))),(0,l.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"I also give some ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"links (see icon \ud83d\ude80)"))," so that you can go through them if there are anything I explained in previous articles."))),(0,l.kt)("h3",{id:"create-and-initialize-required-variables"},"Create and Initialize required variables"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"Option Explicit\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Purpose"),": Above line forces us to define every variable we are going to use. "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Reference"),": \ud83d\ude80 ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("a",{parentName:"strong",href:"/solidworks-macros/open-new-document"},"SOLIDWORKS Macros - Open new Part document"))," article.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Variable for Solidworks application\nDim swApp As SldWorks.SldWorks\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Purpose"),": In above line, we create a variable for ",(0,l.kt)("em",{parentName:"li"},"Solidworks application"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Variable Name"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"swApp")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Type"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"SldWorks.SldWorks")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Reference"),": Please visit \ud83d\ude80 ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("a",{parentName:"strong",href:"https://help.solidworks.com/2019/english/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.ISldWorks_members.html"},"online SOLIDWORKS API Help")),".")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Variable for Solidworks document\nDim swDoc As SldWorks.ModelDoc2\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Purpose"),": In above line, we create a variable for ",(0,l.kt)("em",{parentName:"li"},"Solidworks document"),". "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Variable Name"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"swDoc")," "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Type"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"SldWorks.ModelDoc2")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Reference"),": Please visit \ud83d\ude80 ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("a",{parentName:"strong",href:"https://help.solidworks.com/2019/english/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.IModelDoc2_members.html"},"online SOLIDWORKS API Help")),".")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Variable for Solidworks Assembly\nDim swAssembly As SldWorks.AssemblyDoc\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Purpose"),": In above line, we create a variable for ",(0,l.kt)("em",{parentName:"li"},"Solidworks Assembly"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Variable Name"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"swAssembly")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Type"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"SldWorks.AssemblyDoc")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Reference"),": Please visit \ud83d\ude80 ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("a",{parentName:"strong",href:"https://help.solidworks.com/2019/english/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.IAssemblyDoc_members.html"},"online SOLIDWORKS API Help")),".")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Variable for Solidworks Component\nDim swComponent As SldWorks.Component2\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Purpose"),":  In above line, we create a variable for ",(0,l.kt)("em",{parentName:"li"},"Solidworks Component"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Variable Name"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"swComponent")," "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Type"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"SldWorks.Component2"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Reference"),": Please visit \ud83d\ude80 ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("a",{parentName:"strong",href:"https://help.solidworks.com/2019/english/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.IComponent2_members.html"},"online SOLIDWORKS API Help")),".")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Variable for Solidworks Mate Feature\nDim swMateFeature As SldWorks.Feature\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Purpose"),":  In above line, we create a variable for ",(0,l.kt)("em",{parentName:"li"},"Solidworks Mate Feature"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Variable Name"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"swMateFeature")," "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Type"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"SldWorks.Feature"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Reference"),": Please visit \ud83d\ude80 ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("a",{parentName:"strong",href:"https://help.solidworks.com/2019/english/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.IFeature_members.html"},"online SOLIDWORKS API Help")),".")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Boolean Variable\nDim boolStatus As Boolean\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Purpose"),":  In above line, we create a variable for ",(0,l.kt)("em",{parentName:"li"},"Boolean")," selection."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Variable Name"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"boolStatus")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Type"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"Boolean"))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"These all are our global variables."))),(0,l.kt)("p",null,"They are ",(0,l.kt)("strong",{parentName:"p"},"SOLIDWORKS API Objects"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Program to add Coincident Mate\nSub main()\n\nEnd Sub\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"In above line, we create ",(0,l.kt)("em",{parentName:"li"},"main Program to add Coincident Mate in assembly"),"."),(0,l.kt)("li",{parentName:"ul"},"This is a ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"Sub"))," procedure which has name of ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"main")),". "),(0,l.kt)("li",{parentName:"ul"},"This procedure hold all the ",(0,l.kt)("em",{parentName:"li"},"statements (instructions)")," we give to computer."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Reference"),": Detailed information \ud83d\ude80 ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("a",{parentName:"strong",href:"/vba/vba-sub-and-function-procedure/"},"VBA Sub and Function Procedures"))," article of this website.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Set Solidworks Application variable to current application\nSet swApp = Application.SldWorks\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"In above line, we set ",(0,l.kt)("em",{parentName:"li"},"value")," of ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"swApp"))," variable."),(0,l.kt)("li",{parentName:"ul"},"This ",(0,l.kt)("em",{parentName:"li"},"value")," is currently opened Solidworks application.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Set Solidworks document variable to currently opened document\nSet swDoc = swApp.ActiveDoc\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"In above line, we set ",(0,l.kt)("em",{parentName:"li"},"value")," of ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"swDoc"))," variable."),(0,l.kt)("li",{parentName:"ul"},"This ",(0,l.kt)("em",{parentName:"li"},"value")," is currently ",(0,l.kt)("em",{parentName:"li"},"opened part document"),".")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},'\' Check if Solidworks document is opened or not\nIf swDoc Is Nothing Then\n  MsgBox ("Solidworks document is not opened.")\n  Exit Sub\nEnd If\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"In above code block, we check if we successfully set the value of ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"swDoc"))," variable."),(0,l.kt)("li",{parentName:"ul"},"We use \ud83d\ude80 ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("a",{parentName:"strong",href:"/vba/vba-if-then-structure-select-case/"},"IF statement"))," for checking."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Condition"),": ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"swDoc Is Nothing"))),(0,l.kt)("li",{parentName:"ul"},"When this condition is ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"True")),", ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"We show and \ud83d\ude80 ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("a",{parentName:"strong",href:"/vba/vba-msgBox-function/"},"message window"))," to user."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Message"),": ",(0,l.kt)("em",{parentName:"li"},"SOLIDWORKS document is not opened.")),(0,l.kt)("li",{parentName:"ul"},"Then we ",(0,l.kt)("strong",{parentName:"li"},"stop")," our macro here.")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Set Solidworks Assembly document\nSet swAssembly = swDoc\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"In above line, we set ",(0,l.kt)("em",{parentName:"li"},"value")," of ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"swAssembly"))," variable."),(0,l.kt)("li",{parentName:"ul"},"This ",(0,l.kt)("em",{parentName:"li"},"value")," is ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"swDoc"))," variable.")),(0,l.kt)("h3",{id:"get-assembly-title"},"Get Assembly Title"),(0,l.kt)("p",null,"In this section, we ",(0,l.kt)("em",{parentName:"p"},"Get Assembly Title")," without extension."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' variable for Assembly Title\nDim assemblyTitle As String\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Purpose"),":  In above line, we create a variable for ",(0,l.kt)("em",{parentName:"li"},"Assembly Title"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Variable Name"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"assemblyTitle")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Type"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"String"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Get assembly title\nassemblyTitle = swDoc.GetTitle\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"In above line, we set the value of ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"assemblyTitle"))," variable. "),(0,l.kt)("li",{parentName:"ul"},"We set value by ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"GetTitle"))," method of ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"swDoc"))," variable.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Variable for List of elements\nDim vArray As Variant\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Purpose"),":  In above line, we create a variable for ",(0,l.kt)("em",{parentName:"li"},"List of elements"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Variable Name"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"vArray")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Type"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"Variant"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},'\' Using this variable for getting Assembly name without extension\nvArray = Split(assemblyTitle, ".")\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"In above line, we set the value of ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"vArray"))," variable. "),(0,l.kt)("li",{parentName:"ul"},"We set value by ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"Split"))," method."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"Split"))," method takes 2 arguments.",(0,l.kt)("ol",{parentName:"li"},(0,l.kt)("li",{parentName:"ol"},"Input ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"String"))," which we want to split."),(0,l.kt)("li",{parentName:"ol"},"Delimiter, by which we want to split the Input ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"String")),".")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Update Assembly Title\nassemblyTitle = vArray(0)\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"In above line, we set the value of ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"assemblyTitle"))," variable. "),(0,l.kt)("li",{parentName:"ul"},"We set value to ",(0,l.kt)("strong",{parentName:"li"},"First")," instance ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"vArray"))," variable.")),(0,l.kt)("h3",{id:"first-component-and-plane-list"},"First Component and Plane List"),(0,l.kt)("p",null,"In this section, we ",(0,l.kt)("em",{parentName:"p"},"Get First Component and update Plane List"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Get Components list in opened assembly\nvArray = swAssembly.GetComponents(True)\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"In above line, we set the value of ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"vArray"))," variable. "),(0,l.kt)("li",{parentName:"ul"},"We set value by ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"GetComponents"))," method of ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"swAssembly"))," variable.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Set Solidworks Component variable\nSet swComponent = vArray(0)\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"In above line, we set ",(0,l.kt)("em",{parentName:"li"},"value")," of ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"swComponent"))," variable."),(0,l.kt)("li",{parentName:"ul"},"This ",(0,l.kt)("em",{parentName:"li"},"value")," is ",(0,l.kt)("strong",{parentName:"li"},"First")," component inside ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"vArray"))," variable."),(0,l.kt)("li",{parentName:"ul"},"We get current component by Indexing ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"vArray"))," variable. ")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Redefine array variable\nReDim vArray(1 To 3) As String\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"In above line, we Redefine \ud83d\ude80 ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("a",{parentName:"strong",href:"/vba/vba-arrays/"},"Array"))," of ",(0,l.kt)("em",{parentName:"li"},"String"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Variable Name"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"vArray")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Type"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"String")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Length of Array"),": ",(0,l.kt)("em",{parentName:"li"},"(1 To 3)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Reference"),": Please visit",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"For Arrays in VBA")," : \ud83d\ude80 ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("a",{parentName:"strong",href:"/vba/vba-arrays/"},"Array on this website")),".")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},'\' Update Array list\nvArray(1) = "Front Plane"\nvArray(2) = "Right Plane"\nvArray(3) = "Top Plane"\n')),(0,l.kt)("p",null,"In above code, we update Array list by adding Plane names."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Variable for loop\nDim i As Integer\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"In above line, we create a variable as a counter."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Variable Name"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"i")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Type"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"Integer"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Loop Plane List\nFor i = 1 To UBound(vArray)\n\nNext\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"In above line, we create a ",(0,l.kt)("inlineCode",{parentName:"li"},"For")," loop."),(0,l.kt)("li",{parentName:"ul"},"This loops start from ",(0,l.kt)("inlineCode",{parentName:"li"},"i = 1")," to maximum of ",(0,l.kt)("inlineCode",{parentName:"li"},"vArray")," we select.")),(0,l.kt)("h3",{id:"get-plane-names"},"Get Plane names"),(0,l.kt)("p",null,"In this section, we ",(0,l.kt)("em",{parentName:"p"},"Get Plane names"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Variable for Current Plane\nDim currentPlane As String\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"In above line, we create a variable for Current Plane."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Variable Name"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"currentPlane")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Type"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"String"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Set current plane\ncurrentPlane = vArray(i)\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"In above line, we set ",(0,l.kt)("em",{parentName:"li"},"value")," of ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"currentPlane"))," variable."),(0,l.kt)("li",{parentName:"ul"},"This ",(0,l.kt)("em",{parentName:"li"},"value")," is plane inside ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"vArray"))," variable."),(0,l.kt)("li",{parentName:"ul"},"We get current component by Indexing ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"vArray"))," variable. ")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Variable for First Plane name\nDim firstSelection As String\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"In above line, we create a variable for First Plane name."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Variable Name"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"firstSelection")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Type"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"String"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},'\' Set First Plane Name\nfirstSelection = currentPlane + "@" + assemblyTitle\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"In above line, we set ",(0,l.kt)("em",{parentName:"li"},"value")," of ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"firstSelection"))," variable."),(0,l.kt)("li",{parentName:"ul"},"This ",(0,l.kt)("em",{parentName:"li"},"value")," is combinations of ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"currentPlane"))," &  ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"assemblyTitle"))," variables.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Variable for Second Plane name\nDim secondSelection As String\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"In above line, we create a variable for Second Plane name."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Variable Name"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"secondSelection")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Type"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"String"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},'\' Set Second Plane name\nsecondSelection = currentPlane + "@" + swComponent.Name + "@" + assemblyTitle\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"In above line, we set ",(0,l.kt)("em",{parentName:"li"},"value")," of ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"secondSelection"))," variable."),(0,l.kt)("li",{parentName:"ul"},"This ",(0,l.kt)("em",{parentName:"li"},"value")," is combinations of ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"currentPlane")),", ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"swComponent.Name"))," &  ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"assemblyTitle"))," variables.")),(0,l.kt)("h3",{id:"select-planes"},"Select Planes"),(0,l.kt)("p",null,"In this section, we ",(0,l.kt)("em",{parentName:"p"},"Select Planes"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},'\' Select First Plane\nboolStatus = swDoc.Extension.SelectByID2(firstSelection, "PLANE", 0, 0, 0, False, 1, Nothing, swSelectOptionDefault)\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"In above line, we select ",(0,l.kt)("em",{parentName:"li"},"First Plane"),".")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},'\' Select Second Plane\nboolStatus = swDoc.Extension.SelectByID2(secondSelection, "PLANE", 0, 0, 0, True, 1, Nothing, swSelectOptionDefault)\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"In above line, we select ",(0,l.kt)("em",{parentName:"li"},"Second Plane"),".")),(0,l.kt)("h3",{id:"add-coincident-mate"},"Add Coincident Mate"),(0,l.kt)("p",null,"In this section, we add ",(0,l.kt)("em",{parentName:"p"},"Coincident Mate"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Add Coincident Mate\nSet swMateFeature = swAssembly.AddMate5(swMateCOINCIDENT, swMateAlignALIGNED, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, swAddMateError_ErrorUknown)\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"In above line, we set the value of variable ",(0,l.kt)("inlineCode",{parentName:"p"},"swMateFeature")," by ",(0,l.kt)("inlineCode",{parentName:"p"},"AddMate5")," method.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"This ",(0,l.kt)("inlineCode",{parentName:"p"},"AddMate5")," method takes following parameters as explained:"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"MateTypeFromEnum")," - *Type of mate as defined in ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"swMateType_e"),"*"),":"),(0,l.kt)("table",{parentName:"li"},(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Member"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"swMateANGLE"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"6"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"swMateCAMFOLLOWER"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"9"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"swMateCOINCIDENT"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"0"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"swMateCONCENTRIC"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"1"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"swMateCOORDINATE"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"20"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"swMateDISTANCE"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"5"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"swMateGEAR"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"10"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"swMateHINGE"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"22"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"swMateLINEARCOUPLER"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"18"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"swMateLOCK"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"16"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"swMateLOCKTOSKETCH"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"12"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"swMateMAGNETIC"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"25"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"swMateMAXMATES"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"14"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"swMatePARALLEL"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"3"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"swMatePATH"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"15"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"swMatePERPENDICULAR"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"2"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"swMatePROFILECENTER"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"24"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"swMateRACKPINION"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"13"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"swMateSCREW"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"17"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"swMateSLIDER"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"23"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"swMateSLOT"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"21"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"swMateSYMMETRIC"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"8"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"swMateTANGENT"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"4"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"swMateUNIVERSALJOINT"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"19"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"swMateUNKNOWN"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"7"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"swMateWIDTH"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"11")))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"AlignFromEnum")," - *Type of mate as defined in ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"swMateAlign_e"),"*"),":"),(0,l.kt)("table",{parentName:"li"},(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Member"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"swAlignAGAINST"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"Obsolete. Do not use."))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"swAlignNONE"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"Obsolete. Do not use."))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"swAlignSAME"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"Obsolete. Do not use."))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"swMateAlignALIGNED"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"0"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"swMateAlignANTI_ALIGNED"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"1"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"swMateAlignCLOSEST"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"2")))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Flip")," - *",(0,l.kt)("inlineCode",{parentName:"p"},"True")," to flip the mate entities, ",(0,l.kt)("inlineCode",{parentName:"p"},"False")," to not; valid only if ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"MateTypeFromEnum"))," is ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"swMatetype_e.swMateDISTANCE"),"*"),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Distance")," - *Distance value; valid only if ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"MateTypeFromEnum"))," is ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"swMateType_e.swMateDISTANCE"),"*"),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"DistanceAbsUpperLimit")," - *Absolute maximum distance value; valid only if ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"MateTypeFromEnum"))," is ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"swMateType_e.swMateDISTANCE"),"*"),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"DistanceAbsLowerLimit")," - *Absolute minimum distance value; valid only if ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"MateTypeFromEnum"))," is ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"swMateType_e.swMateDISTANCE"),"*"),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"GearRatioNumerator")," - *Gear ratio numerator value; valid only if ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"MateTypeFromEnum"))," is ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"swMateType_e.swMateGEAR"),"*"),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"GearRatioDenominator")," - *Gear ratio denominator value; valid only if ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"MateTypeFromEnum"))," is ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"swMateType_e.swMateGEAR"),"*"),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Angle")," - *Angle value; valid only if ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"MateTypeFromEnum"))," is ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"swMateType_e.swMateANGLE"),"*"),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"AngleAbsUpperLimit")," - *Absolute maximum angle value; valid only if ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"MateTypeFromEnum"))," is ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"swMateType_e.swMateANGLE"),"*"),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"AngleAbsLowerLimit")," - *Absolute minimum angle value; valid only if ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"MateTypeFromEnum"))," is ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"swMateType_e.swMateANGLE"),"*"),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"ForPositioningOnly")," - ",(0,l.kt)("em",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"em"},"True")," to only position the components according to the mating relationship and not return a mate, ",(0,l.kt)("inlineCode",{parentName:"em"},"False")," to return a mate"),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"LockRotation")," - ",(0,l.kt)("em",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"em"},"True")," to lock component rotation, ",(0,l.kt)("inlineCode",{parentName:"em"},"False")," to not"),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"WidthMateOption")," - *Width mate options as defined in ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"swMateWidthOptions_e")),"; valid only if ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"MateTypeFromEnum"))," is ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"swMateType_e.swMateWIDTH"),"*"),"."),(0,l.kt)("table",{parentName:"li"},(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Member"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"swMateWidth_Centered"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"0"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"swMateWidth_Dimension"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"2"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"swMateWidth_Free"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"1"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"swMateWidth_Percent"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"3")))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"ErrorStatus")," - ",(0,l.kt)("em",{parentName:"p"},"Success or error as defined by ",(0,l.kt)("strong",{parentName:"em"},(0,l.kt)("inlineCode",{parentName:"strong"},"swAddMateError_e"))," as follows"),"."),(0,l.kt)("table",{parentName:"li"},(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Member"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"swAddMateError_ErrorUknown"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"0"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"swAddMateError_IncorrectAlignment"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"3"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"swAddMateError_IncorrectGearRatios"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"6"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"swAddMateError_IncorrectMateType"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"2"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"swAddMateError_IncorrectSelections"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"4"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"swAddMateError_NoError"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"1"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"swAddMateError_OverDefinedAssembly"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"5")))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Return Value")," : This ",(0,l.kt)("inlineCode",{parentName:"p"},"AddMate5")," method return \ud83d\ude80 ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"https://help.solidworks.com/2019/english/api/sldworksapi/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.IMate2.html"},"Mate2"))," data object.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"In our code, I have used following values:"),(0,l.kt)("table",{parentName:"li"},(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Value Used"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"MateTypeFromEnum")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"swMateCOINCIDENT"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"AlignFromEnum")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"swMateAlignALIGNED"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Flip")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Distance")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"0"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"DistanceAbsUpperLimit")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"0"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"DistanceAbsLowerLimit")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"0"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"GearRatioNumerator")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"0"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"GearRatioDenominator")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"0"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Angle")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"0"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"AngleAbsUpperLimit")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"0"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"AngleAbsLowerLimit")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"0"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"ForPositioningOnly")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"False"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"LockRotation")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"False"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"WidthMateOption")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"0"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"ErrorStatus")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"swAddMateError_ErrorUknown"))))))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Reference"),": For more details about "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Solidworks AssemblyDoc details"),": \ud83d\ude80 ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("a",{parentName:"strong",href:"https://help.solidworks.com/2019/english/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.IAssemblyDoc_members.html"},"online Solidworks API Help"))," for Solidworks Feature Manager."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"AddMate5 Method"),": \ud83d\ude80 ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("a",{parentName:"strong",href:"https://help.solidworks.com/2019/english/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.IAssemblyDoc~AddMate5.html"},"online Solidworks API Help"))," for ",(0,l.kt)("inlineCode",{parentName:"li"},"AddMate5")," Method.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},'\' Check if Mate is added or not\nIf swMateFeature Is Nothing Then\n  MsgBox "Failed to Add Mate."\n  swDoc.ClearSelection2 True\n  Exit Sub\nEnd If\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"In above code block, we check if we successfully added ",(0,l.kt)("strong",{parentName:"li"},"Coincident Mate")," or not."),(0,l.kt)("li",{parentName:"ul"},"We use \ud83d\ude80 ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("a",{parentName:"strong",href:"/vba/vba-if-then-structure-select-case/"},"IF statement"))," for checking."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Condition"),": ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"swMateFeature Is Nothing"))),(0,l.kt)("li",{parentName:"ul"},"When this condition is ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"True")),", ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"We show and \ud83d\ude80 ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("a",{parentName:"strong",href:"/vba/vba-msgBox-function/"},"message window"))," to user."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Message"),": *Failed to Add Mate."),(0,l.kt)("li",{parentName:"ul"},"After that we clear the selection."),(0,l.kt)("li",{parentName:"ul"},"Then we ",(0,l.kt)("strong",{parentName:"li"},"stop")," our macro here.")))),(0,l.kt)("p",null,"Now we run the macro and after running macro we get ",(0,l.kt)("strong",{parentName:"p"},"Coincident Mate")," as shown in below image."),(0,l.kt)("p",null,(0,l.kt)("a",{target:"_blank",href:n(51597).Z},(0,l.kt)("img",{alt:"unfix-component-final-result",src:n(36509).Z,width:"1365",height:"728"}))),(0,l.kt)("h3",{id:"final-work"},"Final work"),(0,l.kt)("p",null,"In this section, after adding ",(0,l.kt)("strong",{parentName:"p"},"Coincident Mate"),", we have to do some cleaning work so that we can use this macro frequently."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' Rebuild assembly\nswDoc.ForceRebuild3 True\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"In above line, we Rebuild assembly."),(0,l.kt)("li",{parentName:"ul"},"For this we use ",(0,l.kt)("inlineCode",{parentName:"li"},"ForceRebuild3")," method which is part of ",(0,l.kt)("em",{parentName:"li"},"SOLIDWORKS Document")," variable i.e ",(0,l.kt)("inlineCode",{parentName:"li"},"swDoc")," variable.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vb",metastring:"showlinenumbers showLineNumbers",showlinenumbers:!0,showLineNumbers:!0},"' View zoom to fit\nswDoc.ViewZoomtofit2\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"In above line, we make our view zoom to fit the model."),(0,l.kt)("li",{parentName:"ul"},"For this we use ",(0,l.kt)("inlineCode",{parentName:"li"},"ViewZoomtofit2")," method which is part of ",(0,l.kt)("em",{parentName:"li"},"SOLIDWORKS Document")," variable i.e ",(0,l.kt)("inlineCode",{parentName:"li"},"swDoc")," variable.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"This is it !!!")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"I hope my efforts will helpful to someone!")),(0,l.kt)("p",null,"If you found anything to ",(0,l.kt)("strong",{parentName:"p"},"add or update"),", please let me know on my ",(0,l.kt)("em",{parentName:"p"},"e-mail"),"."),(0,l.kt)("p",null,"Hope this post helps you to ",(0,l.kt)("strong",{parentName:"p"},"Coincident Mate")," with SOLIDWORKS VBA Macros."),(0,l.kt)("p",null,"For more such tutorials on ",(0,l.kt)("strong",{parentName:"p"},"SOLIDWORKS VBA Macro"),", do come to this website after sometime."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"If you like the post then please share it with your friends also.")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Do let me know by you like this post or not!")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Till then, Happy learning!!!")))}d.isMDXComponent=!0},51597:function(e,t,n){t.Z=n.p+"assets/files/final-result-gif-284a407dd2aee2cb7efe3fc8f33a5608.gif"},79225:function(e,t,n){t.Z=n.p+"assets/files/prerequisite-d847b2044777fb793116696a416415de.png"},36509:function(e,t,n){t.Z=n.p+"assets/images/final-result-gif-284a407dd2aee2cb7efe3fc8f33a5608.gif"},57909:function(e,t,n){t.Z=n.p+"assets/images/prerequisite-d847b2044777fb793116696a416415de.png"}}]);