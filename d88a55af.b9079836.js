(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{140:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return r})),a.d(t,"metadata",(function(){return o})),a.d(t,"rightToc",(function(){return b})),a.d(t,"default",(function(){return p}));var n=a(2),l=a(6),i=(a(0),a(152)),r={id:"vba-open-boxes",title:"VBA GetOpenFilename, GetSaveAsFilename and Getting a Folder Name"},o={unversionedId:"vba/vba-open-boxes",id:"vba/vba-open-boxes",isDocsHomePage:!1,title:"VBA GetOpenFilename, GetSaveAsFilename and Getting a Folder Name",description:"GetOpenFilename Method",source:"@site/docs\\vba\\2019-01-8-vba-other-dialog.md",slug:"/vba/vba-open-boxes",permalink:"/docs/vba/vba-open-boxes",version:"current",sidebar:"vba",previous:{title:"VBA InputBox Function",permalink:"/docs/vba/vba-input-box"}},b=[{value:"GetOpenFilename Method",id:"getopenfilename-method",children:[{value:"Syntax for the GetOpenFilename method",id:"syntax-for-the-getopenfilename-method",children:[]},{value:"A GetOpenFilename example",id:"a-getopenfilename-example",children:[]}]},{value:"GetSaveAsFilename Method",id:"getsaveasfilename-method",children:[]},{value:"Getting a Folder Name",id:"getting-a-folder-name",children:[]}],c={rightToc:b};function p(e){var t=e.components,a=Object(l.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},c,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"getopenfilename-method"},"GetOpenFilename Method"),Object(i.b)("p",null,"If your VBA procedure needs to ask the user for a filename, you could use the ",Object(i.b)("em",{parentName:"p"},"InputBox")," function. "),Object(i.b)("p",null,"An input box usually isn\u2019t the best tool for this job, however, because most users find it difficult to remember paths, backslashes, filenames, and file extensions. "),Object(i.b)("p",null,"In other words, it\u2019s far too easy to make a ",Object(i.b)("strong",{parentName:"p"},"typographical error")," when typing a filename."),Object(i.b)("p",null,"For a better solution to this problem, use the ",Object(i.b)("strong",{parentName:"p"},"GetOpenFilename")," method of the Application object, which ensures that your code gets its hands on a valid filename, including its complete path. "),Object(i.b)("p",null,"The ",Object(i.b)("em",{parentName:"p"},"GetOpenFilename")," method displays the familiar Open dialog box."),Object(i.b)("p",null,"The ",Object(i.b)("em",{parentName:"p"},"GetOpenFilename")," method doesn\u2019t actually open the specified file. "),Object(i.b)("p",null,"This method simply returns the user-selected filename as a ",Object(i.b)("inlineCode",{parentName:"p"},"string"),". "),Object(i.b)("p",null,"Then you can write code to do whatever you want with the filename."),Object(i.b)("hr",null),Object(i.b)("h3",{id:"syntax-for-the-getopenfilename-method"},"Syntax for the GetOpenFilename method"),Object(i.b)("p",null,"The official syntax for the ",Object(i.b)("strong",{parentName:"p"},"GetOpenFilename")," method is as follows:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-vb"}),"' The GetOpenFilename method syntax\nobject.GetOpenFilename ([fileFilter], [filterIndex], [title],[buttonText], [multiSelect])\n")),Object(i.b)("p",null,"The GetOpenFilename method takes the optional arguments shown in below Table."),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Arguments"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"What it does"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"FileFilter"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Determines the types of files that appear in the dialog box (for example, *.TXT).")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"You can specify several different filters from which the user can choose."),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"FilterIndex"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Determines which of the file filters the dialog box displays by default.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Title"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Specifies the caption for the dialog box\u2019s title bar.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ButtonText"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Ignored")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"MultiSelect"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"If True, the user can select multiple files.")))),Object(i.b)("hr",null),Object(i.b)("h3",{id:"a-getopenfilename-example"},"A GetOpenFilename example"),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"fileFilter")," argument determines what appears in the dialog box\u2019s Files of Type drop-down list. "),Object(i.b)("p",null,"This argument consists of pairs of file filter strings followed by the wild card file filter specification, with commas separating each part and pair. "),Object(i.b)("p",null,"If omitted, this argument defaults to the following:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-vb"}),"' A GetOpenFilename example\nAll Files (*.*), *.*\n")),Object(i.b)("p",null,"Notice that this string consists of two parts:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-vb"}),"All Files (*.*)\n")),Object(i.b)("p",null,"and"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-vb"}),"*.*\n")),Object(i.b)("p",null,"The first part of this string is the text displayed in the Files of Type dropdown list. "),Object(i.b)("p",null,"The second part determines which files the dialog box displays. For example, ",Object(i.b)("em",{parentName:"p"},".")," means all files."),Object(i.b)("p",null,"The code in the following example brings up a dialog box that asks the user for a filename. "),Object(i.b)("p",null,"The procedure defines five file filters. "),Object(i.b)("p",null,"Notice that I use the VBA line continuation sequence to set up the Filter variable; doing so helps simplify this rather complicated argument."),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-vb"}),'\' A GetOpenFilename example\nSub GetImportFileName()\n  Dim Finfo As String\n  Dim FilterIndex As Integer\n  Dim Title As String\n  Dim FileName As Variant\n\n  \'Set up list of file filters\n  If (IsNumeric)NumberOfSheets Then\n  FInfo = "Text Files (*.txt),*.txt," & _\n  "Lotus Files (*.prn),*.prn," & _\n  "Comma Separated Files (*.csv),*.csv," & _\n  "ASCII Files (*.asc),*.asc," & _\n  "All Files (*.*),*.*"\n\n  \'Display *.* by default\n  FilterIndex = 5\n\n  \'Set the dialog box caption\n  Title = "Select a File to Import"\n\n  \'Get the filename\n  FileName = Application.GetOpenFilename (FInfo, FilterIndex, Title)\n\n  \'Handle return info from dialog box\n  If FileName = False Then\n    MsgBox "No file was selected."\n  Else\n    MsgBox "You selected " & FileName\n  End If\nEnd Sub\n')),Object(i.b)("p",null,"Notice that the ",Object(i.b)("inlineCode",{parentName:"p"},"FileName")," variable is declared as a Variant data type. "),Object(i.b)("p",null,"If the user clicks ",Object(i.b)("inlineCode",{parentName:"p"},"Cancel"),", that variable contains a Boolean value (False). "),Object(i.b)("p",null,"Otherwise, FileName is a ",Object(i.b)("inlineCode",{parentName:"p"},"string"),". Therefore, using a Variant data type handles both possibilities."),Object(i.b)("hr",null),Object(i.b)("h2",{id:"getsaveasfilename-method"},"GetSaveAsFilename Method"),Object(i.b)("p",null,"The ",Object(i.b)("em",{parentName:"p"},"GetSaveAsFilename")," method works just like the ",Object(i.b)("em",{parentName:"p"},"GetOpenFilename")," method, but it displays the Save As dialog box rather than its Open dialog box. "),Object(i.b)("p",null,"The ",Object(i.b)("em",{parentName:"p"},"GetSaveAsFilename")," method gets a path and filename from the user but doesn\u2019t do anything with it. "),Object(i.b)("p",null,"It\u2019s up to you to write code that actually saves the file."),Object(i.b)("p",null,"The syntax for this method follows:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-vb"}),"' The GetSaveAsFilename method syntax\nobject.GetSaveAsFilename ([InitialFilename], [FileFilter], [FilterIndex], [Title], [ButtonText])\n")),Object(i.b)("p",null,"The ",Object(i.b)("em",{parentName:"p"},"GetSaveAsFilename")," method takes below arguments, all of which are optional."),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Arguments"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"What it does"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"InitialFileName"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Specifies a default filename that appears in the File Name box.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"FileFilter"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Determines the types of files that appear in the dialog box (for example, *.TXT).")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"You can specify several different filters from which the user can choose."),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"FilterIndex"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Determines which of the file filters the dialog box displays by default.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Title"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Specifies the caption for the dialog box\u2019s title bar.")))),Object(i.b)("hr",null),Object(i.b)("h2",{id:"getting-a-folder-name"},"Getting a Folder Name"),Object(i.b)("p",null,"Sometimes, you don\u2019t need to get a filename; you just need to get a folder name. "),Object(i.b)("p",null,"If that\u2019s the case, the ",Object(i.b)("em",{parentName:"p"},"FileDialog")," object is just what the doctor ordered."),Object(i.b)("p",null,"The following procedure displays a dialog box that allows the user to select a directory. "),Object(i.b)("p",null,"The selected directory name (or \u201cCanceled\u201d) is then displayed by using the ",Object(i.b)("inlineCode",{parentName:"p"},"MsgBox")," function."),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-vb"}),'\' FileDialog example\nSub GetAFolder()\n  With Application.FileDialog(msoFileDialogFolderPicker)\n    .InitialFileName = Application.DefaultFilePath & "\\"\n    .Title = "Please select a location for the backup"\n    .Show\n    If .SelectedItems.Count = 0 Then\n      MsgBox "Canceled"\n    Else\n      MsgBox .SelectedItems(1)\n    End If\n  End With\nEnd Sub\n')),Object(i.b)("p",null,"The ",Object(i.b)("em",{parentName:"p"},"FileDialog")," object lets you specify the starting directory by specifying a value for the InitialFileName property. "),Object(i.b)("p",null,"In this case, the code uses default file path as the starting directory."),Object(i.b)("p",null,"This is it."),Object(i.b)("p",null,"For User forms please visit ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"../vba-userforms"}),"VBA Userforms Page"),"."))}p.isMDXComponent=!0},152:function(e,t,a){"use strict";a.d(t,"a",(function(){return s})),a.d(t,"b",(function(){return u}));var n=a(0),l=a.n(n);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function b(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var c=l.a.createContext({}),p=function(e){var t=l.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},s=function(e){var t=p(e.components);return l.a.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return l.a.createElement(l.a.Fragment,{},t)}},d=l.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,r=e.parentName,c=b(e,["components","mdxType","originalType","parentName"]),s=p(a),d=n,u=s["".concat(r,".").concat(d)]||s[d]||m[d]||i;return a?l.a.createElement(u,o(o({ref:t},c),{},{components:a})):l.a.createElement(u,o({ref:t},c))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,r=new Array(i);r[0]=d;var o={};for(var b in t)hasOwnProperty.call(t,b)&&(o[b]=t[b]);o.originalType=e,o.mdxType="string"==typeof e?e:n,r[1]=o;for(var c=2;c<i;c++)r[c]=a[c];return l.a.createElement.apply(null,r)}return l.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);