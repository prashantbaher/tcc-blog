(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{152:function(e,t,a){"use strict";a.d(t,"a",(function(){return s})),a.d(t,"b",(function(){return d}));var n=a(0),r=a.n(n);function b(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){b(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},b=Object.keys(e);for(n=0;n<b.length;n++)a=b[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(n=0;n<b.length;n++)a=b[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=r.a.createContext({}),p=function(e){var t=r.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},s=function(e){var t=p(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,b=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),s=p(a),m=n,d=s["".concat(i,".").concat(m)]||s[m]||u[m]||b;return a?r.a.createElement(d,o(o({ref:t},c),{},{components:a})):r.a.createElement(d,o({ref:t},c))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var b=a.length,i=new Array(b);i[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:n,i[1]=o;for(var c=2;c<b;c++)i[c]=a[c];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"},91:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return o})),a.d(t,"rightToc",(function(){return l})),a.d(t,"default",(function(){return p}));var n=a(2),r=a(6),b=(a(0),a(152)),i={id:"vba-variables-decl",title:"Declaring and Scoping of Variables"},o={unversionedId:"vba/vba-variables-decl",id:"vba/vba-variables-decl",isDocsHomePage:!1,title:"Declaring and Scoping of Variables",description:"If you read the previous topics, you now know a bit about Variables and Data-types.",source:"@site/docs\\vba\\2019-01-4-vba-declaring-and-scoping-of-variables.md",slug:"/vba/vba-variables-decl",permalink:"/docs/vba/vba-variables-decl",version:"current",sidebar:"vba",previous:{title:"VBA Variables",permalink:"/docs/vba/vba-variables"},next:{title:"Variable Scope",permalink:"/docs/vba/vba-variable-scope"}},l=[],c={rightToc:l};function p(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(b.b)("wrapper",Object(n.a)({},c,a,{components:t,mdxType:"MDXLayout"}),Object(b.b)("p",null,"If you read the previous topics, you now know a bit about ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"vba-variables"}),"Variables")," and ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"vba-prog-concept#data-types-in-vba"}),"Data-types"),". "),Object(b.b)("p",null,"In this topic, you discover how to ",Object(b.b)("strong",{parentName:"p"},"declare")," a ",Object(b.b)("inlineCode",{parentName:"p"},"variable")," as a certain ",Object(b.b)("em",{parentName:"p"},"data type"),"."),Object(b.b)("p",null,"If you don\u2019t ",Object(b.b)("em",{parentName:"p"},"declare")," the ",Object(b.b)("em",{parentName:"p"},"data type")," for a ",Object(b.b)("inlineCode",{parentName:"p"},"variable")," you use in a ",Object(b.b)("inlineCode",{parentName:"p"},"VBA routine"),", ",Object(b.b)("inlineCode",{parentName:"p"},"VBA")," uses the default data type: ",Object(b.b)("inlineCode",{parentName:"p"},"Variant"),". "),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Data stored")," as a ",Object(b.b)("inlineCode",{parentName:"p"},"Variant")," acts like a ",Object(b.b)("strong",{parentName:"p"},"chameleon"),"; it changes type depending on what you do with it. "),Object(b.b)("p",null,"For example, if a ",Object(b.b)("em",{parentName:"p"},"variable")," is a ",Object(b.b)("inlineCode",{parentName:"p"},"Variant")," data type and contains a text string that looks like a number (such as \u201c123\u201d), you can use this ",Object(b.b)("em",{parentName:"p"},"variable")," for ",Object(b.b)("inlineCode",{parentName:"p"},"string")," manipulations as well as ",Object(b.b)("inlineCode",{parentName:"p"},"numeric")," calculations. "),Object(b.b)("p",null,Object(b.b)("inlineCode",{parentName:"p"},"VBA")," automatically handles the conversion. Letting ",Object(b.b)("inlineCode",{parentName:"p"},"VBA")," handle data types may seem like an easy way out \u2014 but remember that you sacrifice speed and memory."),Object(b.b)("p",null,"Before you use ",Object(b.b)("em",{parentName:"p"},"variables")," in a ",Object(b.b)("inlineCode",{parentName:"p"},"procedure"),", it\u2019s an excellent practice to ",Object(b.b)("em",{parentName:"p"},"declare")," your variables \u2014 that is, tell ",Object(b.b)("inlineCode",{parentName:"p"},"VBA")," each variable\u2019s data type. "),Object(b.b)("p",null,"Declaring your ",Object(b.b)("em",{parentName:"p"},"variables")," makes your program run ",Object(b.b)("strong",{parentName:"p"},"faster")," and use memory ",Object(b.b)("em",{parentName:"p"},"more efficiently"),". "),Object(b.b)("p",null,"The default ",Object(b.b)("em",{parentName:"p"},"data type"),", ",Object(b.b)("inlineCode",{parentName:"p"},"Variant"),", causes ",Object(b.b)("inlineCode",{parentName:"p"},"VBA")," to repeatedly perform time consuming checks and reserve more memory than necessary. "),Object(b.b)("p",null,"If ",Object(b.b)("inlineCode",{parentName:"p"},"VBA")," knows a ",Object(b.b)("em",{parentName:"p"},"variable\u2019s data type"),", it doesn\u2019t have to investigate and can reserve just enough memory to store the data."),Object(b.b)("p",null,"To force yourself to declare all the variables you use, include the following as the first statement in your ",Object(b.b)("inlineCode",{parentName:"p"},"VBA")," module:"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-vb"}),"Option Explicit\n")),Object(b.b)("p",null,"When this ",Object(b.b)("em",{parentName:"p"},"statement")," is present, you won\u2019t be able to run your code if it contains any undeclared ",Object(b.b)("em",{parentName:"p"},"variables"),"."),Object(b.b)("p",null,"You need to use ",Object(b.b)("inlineCode",{parentName:"p"},"Option Explicit")," only once: at the ",Object(b.b)("em",{parentName:"p"},"beginning")," of your module, prior to the declaration of any procedures in the module. "),Object(b.b)("p",null,"Keep in mind that the ",Object(b.b)("inlineCode",{parentName:"p"},"Option Explicit")," statement applies only to the module in which it resides. "),Object(b.b)("p",null,"If you have more than one ",Object(b.b)("inlineCode",{parentName:"p"},"VBA")," module in a ",Object(b.b)("strong",{parentName:"p"},"project"),", you need an ",Object(b.b)("inlineCode",{parentName:"p"},"Option Explicit")," statement for each module."),Object(b.b)("p",null,"Suppose that you use an ",Object(b.b)("em",{parentName:"p"},"undeclared variable")," (that is, a ",Object(b.b)("inlineCode",{parentName:"p"},"Variant"),") named ",Object(b.b)("inlineCode",{parentName:"p"},"myDimension"),". "),Object(b.b)("p",null,"At some point in your routine, you insert the following statement:"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-vb"}),"myDimnsion = 11\n")),Object(b.b)("p",null,"This misspelled ",Object(b.b)("em",{parentName:"p"},"variable"),", which is difficult to spot, will probably cause your routine to give incorrect results. "),Object(b.b)("p",null,"If you use ",Object(b.b)("inlineCode",{parentName:"p"},"Option Explicit")," at the beginning of your module (forcing you to declare the ",Object(b.b)("inlineCode",{parentName:"p"},"myDimension")," variable), ",Object(b.b)("inlineCode",{parentName:"p"},"VBE")," generates an error if it encounters a misspelled variation of that variable."),Object(b.b)("p",null,"To ensure that the ",Object(b.b)("inlineCode",{parentName:"p"},"Option Explicit")," statement is inserted automatically whenever you insert a new ",Object(b.b)("inlineCode",{parentName:"p"},"VBA")," module; turn on the ",Object(b.b)("em",{parentName:"p"},"Require Variable Definition option"),". "),Object(b.b)("p",null,"You find it in the ",Object(b.b)("strong",{parentName:"p"},"Editor tab")," of the ",Object(b.b)("strong",{parentName:"p"},"Options dialog box")," (in the VBE, choose ",Object(b.b)("strong",{parentName:"p"},"Tools -> Options"),"). "),Object(b.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(b.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(b.b)("h5",{parentName:"div"},Object(b.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(b.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(b.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"tip")),Object(b.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(b.b)("p",{parentName:"div"},"I highly recommend doing so."))),Object(b.b)("p",null,"Declaring your variables also lets you take advantage of a shortcut that can save some typing. "),Object(b.b)("p",null,"Just type the first two or three characters of the variable name, and then press ",Object(b.b)("inlineCode",{parentName:"p"},"Ctrl + Space"),". "),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"VBE")," will either complete the entry for you or \u2014 if the choice is ambiguous \u2014 show you a list of matching words to select from. "),Object(b.b)("p",null,"In fact, this slick trick works with ",Object(b.b)("em",{parentName:"p"},"reserved words")," and ",Object(b.b)("em",{parentName:"p"},"functions"),", too."),Object(b.b)("p",null,"You now know the advantages of declaring ",Object(b.b)("em",{parentName:"p"},"variables"),", but how do you do this? "),Object(b.b)("p",null,"The most common way is to use a ",Object(b.b)("inlineCode",{parentName:"p"},"Dim")," statement. "),Object(b.b)("p",null,"Here are some examples of variables being declared:"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-vb"}),"Dim YourName as String\nDim PartLength as Long\nDim bRet as Boolean\nDim X\n")),Object(b.b)("p",null,"The first ",Object(b.b)("em",{parentName:"p"},"three")," variables are declared as a specific ",Object(b.b)("em",{parentName:"p"},"data type"),". "),Object(b.b)("p",null,"The last variable, ",Object(b.b)("strong",{parentName:"p"},"X"),", is not declared as a specific ",Object(b.b)("em",{parentName:"p"},"data type"),", so it\u2019s treated as a ",Object(b.b)("inlineCode",{parentName:"p"},"Variant")," (it can be anything)."),Object(b.b)("p",null,"Besides ",Object(b.b)("inlineCode",{parentName:"p"},"Dim"),", ",Object(b.b)("inlineCode",{parentName:"p"},"VBA")," has ",Object(b.b)("em",{parentName:"p"},"three")," other keywords that are used to declare variables:"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},"Static"),Object(b.b)("li",{parentName:"ul"},"Public"),Object(b.b)("li",{parentName:"ul"},"Private")),Object(b.b)("p",null,"I explain more about the ",Object(b.b)("inlineCode",{parentName:"p"},"Dim, Static, Public"),", and ",Object(b.b)("inlineCode",{parentName:"p"},"Private")," keywords later on, but first I must cover two other topics that are relevant here: ",Object(b.b)("strong",{parentName:"p"},"a variable\u2019s scope")," and ",Object(b.b)("strong",{parentName:"p"},"a variable\u2019s life"),"."),Object(b.b)("p",null,"Recall that your code can have any number of ",Object(b.b)("inlineCode",{parentName:"p"},"VBA modules")," and a ",Object(b.b)("inlineCode",{parentName:"p"},"VBA module")," can have any number of ",Object(b.b)("inlineCode",{parentName:"p"},"Sub")," and ",Object(b.b)("inlineCode",{parentName:"p"},"Function")," procedures. "),Object(b.b)("p",null,"A variable\u2019s scope determines which modules and procedures can use the variable. "),Object(b.b)("p",null,"Below Table describes the scopes:"),Object(b.b)("table",{class:"w3-table-all w3-mobile w3-card-4"},Object(b.b)("tr",null,Object(b.b)("th",{class:"w3-center",colspan:"2"},"VBA\u2019s Variable\u2019s Scope")),Object(b.b)("tr",null,Object(b.b)("th",null,"Scope"),Object(b.b)("th",null,"How the Variable is Declared")),Object(b.b)("tr",null,Object(b.b)("td",null,"Procedure only"),Object(b.b)("td",null,"By using a ",Object(b.b)("strong",null,"Dim")," or a ",Object(b.b)("strong",null,"Static")," statement in the procedure that uses the variable.")),Object(b.b)("tr",null,Object(b.b)("td",null,"Module only"),Object(b.b)("td",null,"By using a ",Object(b.b)("strong",null,"Dim")," or a ",Object(b.b)("strong",null,"Private")," statement before the first ",Object(b.b)("strong",null,"Sub")," or ",Object(b.b)("strong",null,"Function")," statement in the module.")),Object(b.b)("tr",null,Object(b.b)("td",null,"All procedures in all modules"),Object(b.b)("td",null,"By using a ",Object(b.b)("strong",null,"Public")," statement before the first ",Object(b.b)("strong",null,"Sub")," or",Object(b.b)("strong",null,"Function")," statement in the module."))),Object(b.b)("p",null,"If you get confused keep reading next post on these topics."),Object(b.b)("p",null,"Next post will be about ",Object(b.b)("strong",{parentName:"p"},Object(b.b)("em",{parentName:"strong"},"Variable Scope")),"."))}p.isMDXComponent=!0}}]);