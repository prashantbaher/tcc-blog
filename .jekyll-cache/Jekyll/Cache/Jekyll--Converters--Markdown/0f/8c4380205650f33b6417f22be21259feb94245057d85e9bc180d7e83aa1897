I"ƒ›<h2 id="objective">Objective</h2>

<p>In this post, I tell you about <em>how to create <strong>Extrude Cut</strong> through SOLIDWORKS VBA Macros</em> in a sketch.</p>

<p>This method is <strong><em>most updated</em></strong> method, so <strong><em>use this method</em></strong> if you want to create a new <strong>Extrude Cut</strong>.</p>

<h2 id="video-of-code-on-youtube">Video of Code on YouTube</h2>

<p>Please see below ðŸŽ¬ video on <strong>how to create Extrude Cut</strong> from SOLIDWORKS VBA Macros.</p>

<iframe src="https://www.youtube.com/embed/kdf1xAjfrJs" frameborder="0" allowfullscreen=""></iframe>
<p><br /></p>

<p>Please note that there are <strong>no explanation</strong> in the video.</p>

<p><strong>Explanation</strong> of each line and why we write code this way is given in this post.</p>

<h2 id="code-sample">Code Sample</h2>

<p>Below is the <code class="language-plaintext highlighter-rouge">code</code> sample for creating <em>Extrude Cut</em>.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">Option</span> <span class="n">Explicit</span>

<span class="c1">' Creating variable for Solidworks application</span>
<span class="k">Dim</span> <span class="nv">swApp</span> <span class="ow">As</span> <span class="n">SldWorks</span><span class="p">.</span><span class="n">SldWorks</span>
<span class="c1">' Creating variable for Solidworks document</span>
<span class="k">Dim</span> <span class="nv">swDoc</span> <span class="ow">As</span> <span class="n">SldWorks</span><span class="p">.</span><span class="n">ModelDoc2</span>
<span class="c1">' Creating variable for Solidworks Feature</span>
<span class="k">Dim</span> <span class="nv">swFeature</span> <span class="ow">As</span> <span class="n">SldWorks</span><span class="p">.</span><span class="n">Feature</span>
<span class="c1">' Boolean Variable</span>
<span class="k">Dim</span> <span class="nv">BoolStatus</span> <span class="ow">As</span> <span class="kt">Boolean</span>

<span class="c1">' Main function of our VBA program</span>
<span class="k">Sub</span> <span class="nf">main</span><span class="p">()</span>

  <span class="c1">' Setting Solidworks variable to Solidworks application</span>
  <span class="k">Set</span> <span class="n">swApp</span> <span class="o">=</span> <span class="n">Application</span><span class="p">.</span><span class="n">SldWorks</span>
  
  <span class="c1">' Check if Solidworks is opened or not</span>
  <span class="k">If</span> <span class="n">swApp</span> <span class="ow">Is</span> <span class="k">Nothing</span> <span class="k">Then</span>
      <span class="n">MsgBox</span> <span class="p">(</span><span class="s">"Solidworks is not opened"</span><span class="p">)</span>
      <span class="k">Exit</span> <span class="k">Sub</span>
  <span class="nf">End</span> <span class="k">If</span>
  
  <span class="c1">' Setting Solidworks document to new part document</span>
  <span class="k">Set</span> <span class="n">swDoc</span> <span class="o">=</span> <span class="n">swApp</span><span class="p">.</span><span class="n">ActiveDoc</span>
  
  <span class="c1">' Check if Solidworks document is opened or not</span>
  <span class="k">If</span> <span class="n">swDoc</span> <span class="ow">Is</span> <span class="k">Nothing</span> <span class="k">Then</span>
      <span class="n">MsgBox</span> <span class="p">(</span><span class="s">"Solidworks document is not opened. Please open a document."</span><span class="p">)</span>
      <span class="k">Exit</span> <span class="k">Sub</span>
  <span class="nf">End</span> <span class="k">If</span>

  <span class="c1">' Selecting Sketch 2</span>
  <span class="n">BoolStatus</span> <span class="o">=</span> <span class="n">swDoc</span><span class="p">.</span><span class="n">Extension</span><span class="p">.</span><span class="n">SelectByID2</span><span class="p">(</span><span class="s">"Sketch2"</span><span class="p">,</span> <span class="s">"SKETCH"</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">False</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">Nothing</span><span class="p">,</span> <span class="n">swSelectOption_e</span><span class="p">.</span><span class="n">swSelectOptionDefault</span><span class="p">)</span>

  <span class="c1">' Check if failed to select sketch 2</span>
  <span class="k">If</span> <span class="n">BoolStatus</span> <span class="o">=</span> <span class="k">False</span> <span class="k">Then</span>
      <span class="n">MsgBox</span> <span class="p">(</span><span class="s">"Failed to select sketch 2."</span><span class="p">)</span>
      <span class="k">Exit</span> <span class="k">Sub</span>
  <span class="nf">End</span> <span class="k">If</span>

  <span class="c1">' Create Extrude Cut Feature</span>
  <span class="k">Set</span> <span class="n">swFeature</span> <span class="o">=</span> <span class="n">swDoc</span><span class="p">.</span><span class="n">FeatureManager</span><span class="p">.</span><span class="n">FeatureCut4</span><span class="p">(</span><span class="k">True</span><span class="p">,</span> <span class="k">False</span><span class="p">,</span> <span class="k">False</span><span class="p">,</span> <span class="n">swEndCondThroughAll</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mf">0.01</span><span class="p">,</span> <span class="mf">0.01</span><span class="p">,</span> <span class="k">False</span><span class="p">,</span> <span class="k">False</span><span class="p">,</span> <span class="k">False</span><span class="p">,</span> <span class="k">False</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="k">False</span><span class="p">,</span> <span class="k">False</span><span class="p">,</span> <span class="k">False</span><span class="p">,</span> <span class="k">False</span><span class="p">,</span> <span class="k">False</span><span class="p">,</span> <span class="k">True</span><span class="p">,</span> <span class="k">True</span><span class="p">,</span> <span class="k">True</span><span class="p">,</span> <span class="k">True</span><span class="p">,</span> <span class="k">False</span><span class="p">,</span> <span class="n">swStartSketchPlane</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">False</span><span class="p">,</span> <span class="k">False</span><span class="p">)</span>

  <span class="c1">' Check if Extrude Cut Feature creates or not</span>
  <span class="k">If</span> <span class="n">swFeature</span> <span class="ow">Is</span> <span class="k">Nothing</span> <span class="k">Then</span>
      <span class="n">MsgBox</span> <span class="p">(</span><span class="s">"Failed to create Extrude Cut Feature."</span><span class="p">)</span>
      <span class="k">Exit</span> <span class="k">Sub</span>
  <span class="nf">End</span> <span class="k">If</span>

<span class="k">End</span> <span class="k">Sub</span>
</code></pre></div></div>

<h2 id="prerequisite">Prerequisite</h2>

<p>In this article there are some <em>prerequisite</em>.</p>

<p>We are <strong>not</strong> creating sketches from code but we use <strong>existing sketch</strong> to <em>create Extrude Cut</em> feature as shown in below picture.</p>

<p><a href="/assets/Solidworks_Images/feature-extrude-cut/prerequisite.png"><img src="/assets/Solidworks_Images/feature-extrude-cut/prerequisite.png" alt="prerequisite" /></a></p>

<p>As shown in above image, there are 1 sketch and 1 Extrude feature in our part.</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">Extrude Feature</code> : This is our <strong>extrude part</strong> for <em>Extrude Cut feature.</em></li>
  <li><code class="language-plaintext highlighter-rouge">Sketch2</code> : This is our <strong>profile of holes</strong> for <em>Extrude Cut feature.</em></li>
</ul>

<p>If you want to create <code class="language-plaintext highlighter-rouge">Sketch2</code> programmatically then please refer to below articles.</p>

<ul>
  <li>
    <p>For Circle ðŸ‘‰ read <strong><a href="/solidworks-macros/create-circle">SOLIDWORKS Macros - Create Circle</a></strong> article.</p>
  </li>
  <li>
    <p>For CenterPoint Arc ðŸ‘‰ read <strong><a href="/solidworks-macros/create-center-rectangle">SOLIDWORKS Macros - Create Center Rectangle</a></strong> article.</p>
  </li>
</ul>

<p>If you want to create Extrude feature programmatically then please refer to below article.</p>

<ul>
  <li>ðŸ‘‰ <strong><a href="/solidworks-macros/create-extrude-feature">SOLIDWORKS Macros - Create Extrude/Boss</a></strong></li>
</ul>

<p>Also, we will apply checks in this article, so the code we write should be error free most of the time.</p>

<h2 id="understanding-the-code">Understanding the Code</h2>

<p>Now let us walk through <strong>each line</strong> in the above code, and <strong>understand</strong> the meaning and purpose of every line.</p>

<p>I also give some ðŸ“Œ <strong><em>links</em></strong> so that you can go through them if there are anything I explained in previous articles.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">Option</span> <span class="n">Explicit</span>
</code></pre></div></div>

<p>This line forces us to define every variable we are going to use.</p>

<p>For more information please visit ðŸ‘‰ <strong><a href="/solidworks-macros/open-new-document">SOLIDWORKS Macros - Open new Part document</a></strong> post.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Create variable for SOLIDWORKS application</span>
<span class="k">Dim</span> <span class="nv">swApp</span> <span class="ow">As</span> <span class="n">SldWorks</span><span class="p">.</span><span class="n">SldWorks</span>
</code></pre></div></div>

<p>In this line, we create a variable which we named as <code class="language-plaintext highlighter-rouge">swApp</code> and the type of this <code class="language-plaintext highlighter-rouge">swApp</code> variable is <code class="language-plaintext highlighter-rouge">SldWorks.SldWorks</code>.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Create variable for SOLIDWORKS document</span>
<span class="k">Dim</span> <span class="nv">swDoc</span> <span class="ow">As</span> <span class="n">SldWorks</span><span class="p">.</span><span class="n">ModelDoc2</span>
</code></pre></div></div>

<p>In this line, we create a variable which we named as <code class="language-plaintext highlighter-rouge">swDoc</code> and the type of this <code class="language-plaintext highlighter-rouge">swDoc</code> variable is <code class="language-plaintext highlighter-rouge">SldWorks.ModelDoc2</code>.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Creating variable for SOLIDWORKS Feature</span>
<span class="k">Dim</span> <span class="nv">swFeature</span> <span class="ow">As</span> <span class="n">SldWorks</span><span class="p">.</span><span class="n">Feature</span>
</code></pre></div></div>

<p>In this line, we Create a variable which we named as <code class="language-plaintext highlighter-rouge">swFeature</code> and the type of this <code class="language-plaintext highlighter-rouge">swFeature</code> variable is <code class="language-plaintext highlighter-rouge">SldWorks.Feature</code>.</p>

<p>We create variable <code class="language-plaintext highlighter-rouge">swFeature</code> for <strong>SOLIDWORKS Feature</strong>.</p>

<p>To see methods and properties related to <code class="language-plaintext highlighter-rouge">Feature</code> object, please visit ðŸ‘‰ <strong><a href="https://help.solidworks.com/2019/english/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.IFeature_members.html">this page of SOLIDWORKS API Help</a></strong></p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Boolean Variable</span>
<span class="k">Dim</span> <span class="nv">BoolStatus</span> <span class="ow">As</span> <span class="kt">Boolean</span>
</code></pre></div></div>

<p>In this line, we create a variable named <code class="language-plaintext highlighter-rouge">BoolStatus</code> as <code class="language-plaintext highlighter-rouge">Boolean</code> object type.</p>

<p><strong><em>These all are our global variables.</em></strong></p>

<p>They are <strong>SOLIDWORKS API Objects</strong>.</p>

<p>So basically I group all the <strong>SOLIDWORKS API Objects</strong> in one place.</p>

<p>I have also place <code class="language-plaintext highlighter-rouge">boolean</code> type object at top also, because we use this variable frequently.</p>

<p>Thus, I have started placing it here.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Main function of our VBA program</span>
<span class="k">Sub</span> <span class="nf">main</span><span class="p">()</span>

<span class="k">End</span> <span class="k">Sub</span>
</code></pre></div></div>

<p>Next is our <code class="language-plaintext highlighter-rouge">Sub</code> procedure which has name of <code class="language-plaintext highlighter-rouge">main</code>.</p>

<p>This procedure hold all the <em>statements (instructions)</em> we give to computer.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Set SOLIDWORKS variable to SOLIDWORKS application</span>
<span class="k">Set</span> <span class="n">swApp</span> <span class="o">=</span> <span class="n">Application</span><span class="p">.</span><span class="n">SldWorks</span>
</code></pre></div></div>

<p>In this line, we set the value of our SOLIDWORKS variable <code class="language-plaintext highlighter-rouge">swApp</code>; which we define earlier; to SOLIDWORKS application.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Check if SOLIDWORKS is opened or not</span>
<span class="k">If</span> <span class="n">swApp</span> <span class="ow">Is</span> <span class="k">Nothing</span> <span class="k">Then</span>
  <span class="n">MsgBox</span> <span class="p">(</span><span class="s">"SOLIDWORKS is not opened"</span><span class="p">)</span>
  <span class="k">Exit</span> <span class="k">Sub</span>
<span class="nf">End</span> <span class="k">If</span>
</code></pre></div></div>

<p>In above line of code, we use an ðŸ‘‰ <strong><a href="/vba/if-then-structure-select-case/">IF statement</a></strong> to check if SOLIDWORKS application variable is <em>successfully assigned</em> to current SOLIDWORKS application.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Setting SOLIDWORKS document variable to opened part document</span>
<span class="k">Set</span> <span class="n">swDoc</span> <span class="o">=</span> <span class="n">swApp</span><span class="p">.</span><span class="n">ActiveDoc</span>
</code></pre></div></div>

<p>In above line of code, we set SOLIDWORKS document <code class="language-plaintext highlighter-rouge">swDoc</code> variable to currently open part document.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Check if SOLIDWORKS document is opened or not</span>
<span class="k">If</span> <span class="n">swDoc</span> <span class="ow">Is</span> <span class="k">Nothing</span> <span class="k">Then</span>
  <span class="n">MsgBox</span> <span class="p">(</span><span class="s">"SOLIDWORKS document is not opened. Please open a document."</span><span class="p">)</span>
  <span class="k">Exit</span> <span class="k">Sub</span>
<span class="nf">End</span> <span class="k">If</span>
</code></pre></div></div>

<p>In above line of code, we use an ðŸ‘‰ <strong><a href="/vba/if-then-structure-select-case/">IF statement</a></strong> to check if SOLIDWORKS document <code class="language-plaintext highlighter-rouge">swDoc</code> is opened.</p>

<p>If SOLIDWORKS document is not opened then code execute inside the code and inform the user by a ðŸ‘‰ <strong><a href="/vba/msgBox-function/">Message Window</a></strong>.</p>

<p>After showing message our program <strong>exit</strong> from here itself.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Selecting Sketch 2</span>
<span class="n">BoolStatus</span> <span class="o">=</span> <span class="n">swDoc</span><span class="p">.</span><span class="n">Extension</span><span class="p">.</span><span class="n">SelectByID2</span><span class="p">(</span><span class="s">"Sketch2"</span><span class="p">,</span> <span class="s">"SKETCH"</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">False</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">Nothing</span><span class="p">,</span> <span class="n">swSelectOption_e</span><span class="p">.</span><span class="n">swSelectOptionDefault</span><span class="p">)</span>
</code></pre></div></div>

<p>In above line, we select the <em>Sketch2</em> by using <code class="language-plaintext highlighter-rouge">SelectByID2</code> method from <code class="language-plaintext highlighter-rouge">Extension</code> object.</p>

<p>For more information about selection method please visit ðŸ‘‰ <strong><a href="/solidworks-macros/select-plane-from-tree">SOLIDWORKS Macros - Selection Methods</a></strong> post.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Check if Sketch 2 selected or not</span>
<span class="k">If</span> <span class="n">BoolStatus</span> <span class="o">=</span> <span class="k">False</span> <span class="k">Then</span>
  <span class="n">MsgBox</span> <span class="p">(</span><span class="s">"Fail to select Sketch 2."</span><span class="p">)</span>
  <span class="k">Exit</span> <span class="k">Sub</span>
<span class="nf">End</span> <span class="k">If</span>
</code></pre></div></div>

<p>In above line of code, we use an ðŸ‘‰ <strong><a href="/vba/if-then-structure-select-case/">IF statement</a></strong> to check if <em>Sketch 2</em> is selected or not .</p>

<p>If <em>Sketch 2</em> not selected then we execute code inside the ðŸ‘‰ <strong><a href="/vba/if-then-structure-select-case/">IF statement</a></strong> and inform the user by a ðŸ‘‰ <strong><a href="/vba/msgBox-function/">Message Window</a></strong>.</p>

<p>After showing message our program <strong>exit</strong> from here itself.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Create Extrude Cut Feature</span>
<span class="k">Set</span> <span class="n">swFeature</span> <span class="o">=</span> <span class="n">swDoc</span><span class="p">.</span><span class="n">FeatureManager</span><span class="p">.</span><span class="n">FeatureCut4</span><span class="p">(</span><span class="k">True</span><span class="p">,</span> <span class="k">False</span><span class="p">,</span> <span class="k">False</span><span class="p">,</span> <span class="n">swEndCondThroughAll</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mf">0.01</span><span class="p">,</span> <span class="mf">0.01</span><span class="p">,</span> <span class="k">False</span><span class="p">,</span> <span class="k">False</span><span class="p">,</span> <span class="k">False</span><span class="p">,</span> <span class="k">False</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="k">False</span><span class="p">,</span> <span class="k">False</span><span class="p">,</span> <span class="k">False</span><span class="p">,</span> <span class="k">False</span><span class="p">,</span> <span class="k">False</span><span class="p">,</span> <span class="k">True</span><span class="p">,</span> <span class="k">True</span><span class="p">,</span> <span class="k">True</span><span class="p">,</span> <span class="k">True</span><span class="p">,</span> <span class="k">False</span><span class="p">,</span> <span class="n">swStartSketchPlane</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">False</span><span class="p">,</span> <span class="k">False</span><span class="p">)</span>
</code></pre></div></div>

<p>In above line of code we create a <em>Extrude Cut feature</em>.</p>

<p>We create <em>Extrude Cut</em> by setting the value of variable <code class="language-plaintext highlighter-rouge">swFeature</code> by <code class="language-plaintext highlighter-rouge">FeatureCut4</code> method.</p>

<p><code class="language-plaintext highlighter-rouge">FeatureCut4</code> method is part of <code class="language-plaintext highlighter-rouge">FeatureManager</code> object.</p>

<p>This <code class="language-plaintext highlighter-rouge">FeatureManager</code> is again part of <code class="language-plaintext highlighter-rouge">ModelDoc2</code> object.</p>

<h2 id="featurecut4-method-parameters-details">FeatureCut4 Method Parameters Details</h2>

<p>This <code class="language-plaintext highlighter-rouge">FeatureCut4</code> takes following parameters as explained:</p>

<ul>
  <li>
    <p><strong>Sd</strong> - <code class="language-plaintext highlighter-rouge">True</code> for a single-ended cut, <code class="language-plaintext highlighter-rouge">False</code> for a doubled-ended cut.</p>
  </li>
  <li>
    <p><strong>Flip</strong>- <code class="language-plaintext highlighter-rouge">True</code> to remove material outside of the profile of the flip side to cut, <code class="language-plaintext highlighter-rouge">False</code> to not.</p>
  </li>
  <li>
    <p><strong>Dir</strong> - <code class="language-plaintext highlighter-rouge">True</code> for Direction 1 to be opposite of the default direction.</p>
  </li>
  <li>
    <p><strong>T1</strong>- Termination type for the first end as defined in <code class="language-plaintext highlighter-rouge">swEndConditions_e</code>.</p>

    <table>
      <thead>
        <tr>
          <th style="text-align: left">Member</th>
          <th>Description</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td style="text-align: left"><code class="language-plaintext highlighter-rouge">swEndCondBlind</code></td>
          <td>0</td>
        </tr>
        <tr>
          <td style="text-align: left"><code class="language-plaintext highlighter-rouge">swEndCondMidPlane</code></td>
          <td>6</td>
        </tr>
        <tr>
          <td style="text-align: left"><code class="language-plaintext highlighter-rouge">swEndCondOffsetFromSurface</code></td>
          <td>5</td>
        </tr>
        <tr>
          <td style="text-align: left"><code class="language-plaintext highlighter-rouge">swEndCondThroughAll</code></td>
          <td>1</td>
        </tr>
        <tr>
          <td style="text-align: left"><code class="language-plaintext highlighter-rouge">swEndCondThroughAllBoth</code></td>
          <td>9</td>
        </tr>
        <tr>
          <td style="text-align: left"><code class="language-plaintext highlighter-rouge">swEndCondThroughNext</code></td>
          <td>2</td>
        </tr>
        <tr>
          <td style="text-align: left"><code class="language-plaintext highlighter-rouge">swEndCondUpToBody</code></td>
          <td>7</td>
        </tr>
        <tr>
          <td style="text-align: left"><code class="language-plaintext highlighter-rouge">swEndCondUpToNext</code></td>
          <td>11</td>
        </tr>
        <tr>
          <td style="text-align: left"><code class="language-plaintext highlighter-rouge">swEndCondUpToSelection</code></td>
          <td>10</td>
        </tr>
        <tr>
          <td style="text-align: left"><code class="language-plaintext highlighter-rouge">swEndCondUpToSurface</code></td>
          <td>4 = Do not use;</td>
        </tr>
        <tr>
          <td style="text-align: left"><code class="language-plaintext highlighter-rouge">swEndCondUpToVertex</code></td>
          <td>3 = Do not use;</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>
    <p><strong>T2</strong>- Termination type for the second end as defined in <code class="language-plaintext highlighter-rouge">swEndConditions_e</code>.</p>

    <table>
      <thead>
        <tr>
          <th style="text-align: left">Member</th>
          <th>Description</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td style="text-align: left"><code class="language-plaintext highlighter-rouge">swEndCondBlind</code></td>
          <td>0</td>
        </tr>
        <tr>
          <td style="text-align: left"><code class="language-plaintext highlighter-rouge">swEndCondMidPlane</code></td>
          <td>6</td>
        </tr>
        <tr>
          <td style="text-align: left"><code class="language-plaintext highlighter-rouge">swEndCondOffsetFromSurface</code></td>
          <td>5</td>
        </tr>
        <tr>
          <td style="text-align: left"><code class="language-plaintext highlighter-rouge">swEndCondThroughAll</code></td>
          <td>1</td>
        </tr>
        <tr>
          <td style="text-align: left"><code class="language-plaintext highlighter-rouge">swEndCondThroughAllBoth</code></td>
          <td>9</td>
        </tr>
        <tr>
          <td style="text-align: left"><code class="language-plaintext highlighter-rouge">swEndCondThroughNext</code></td>
          <td>2</td>
        </tr>
        <tr>
          <td style="text-align: left"><code class="language-plaintext highlighter-rouge">swEndCondUpToBody</code></td>
          <td>7</td>
        </tr>
        <tr>
          <td style="text-align: left"><code class="language-plaintext highlighter-rouge">swEndCondUpToNext</code></td>
          <td>11</td>
        </tr>
        <tr>
          <td style="text-align: left"><code class="language-plaintext highlighter-rouge">swEndCondUpToSelection</code></td>
          <td>10</td>
        </tr>
        <tr>
          <td style="text-align: left"><code class="language-plaintext highlighter-rouge">swEndCondUpToSurface</code></td>
          <td>4 = Do not use;</td>
        </tr>
        <tr>
          <td style="text-align: left"><code class="language-plaintext highlighter-rouge">swEndCondUpToVertex</code></td>
          <td>3 = Do not use;</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>
    <p><strong>D1</strong> - Depth of extrusion for the first end in meters.</p>
  </li>
  <li>
    <p><strong>D2</strong> - Depth of extrusion for the second end in meters.</p>
  </li>
  <li>
    <p><strong>Dchk1</strong> - <code class="language-plaintext highlighter-rouge">True</code> allows a draft angle in the first direction, <code class="language-plaintext highlighter-rouge">False</code> does not allow drafting in the first direction.</p>
  </li>
  <li>
    <p><strong>Dchk2</strong> - <code class="language-plaintext highlighter-rouge">True</code> allows a draft angle in the second direction, <code class="language-plaintext highlighter-rouge">False</code> does not allow  drafting in the second direction</p>
  </li>
  <li>
    <p><strong>Ddir1</strong> - <code class="language-plaintext highlighter-rouge">True</code> for the first draft angle to be inward, <code class="language-plaintext highlighter-rouge">False</code> to be outward; only valid when <strong>Dchk1</strong> is true.</p>
  </li>
  <li>
    <p><strong>Ddir2</strong> - <code class="language-plaintext highlighter-rouge">True</code> for the second draft angle to be inward, <code class="language-plaintext highlighter-rouge">False</code> to be outward; only valid when <strong>Dchk2</strong> is true.</p>
  </li>
  <li>
    <p><strong>Dang1</strong> - Draft angle for the first end; only valid when <strong>Dchk1</strong> is <code class="language-plaintext highlighter-rouge">True</code>.</p>
  </li>
  <li>
    <p><strong>Dang2</strong> - Draft angle for the second end; only valid when <strong>Dchk2</strong> is <code class="language-plaintext highlighter-rouge">True</code>.</p>
  </li>
  <li>
    <p><strong>OffsetReverse1</strong> - <code class="language-plaintext highlighter-rouge">True</code> to specifies offset in direction away from the sketch, <code class="language-plaintext highlighter-rouge">False</code> specifies offset from the face or plane in a direction toward the sketch.</p>
  </li>
  <li>
    <p><strong>OffsetReverse2</strong> - <code class="language-plaintext highlighter-rouge">True</code> to specifies offset in direction away from the sketch, <code class="language-plaintext highlighter-rouge">False</code> specifies offset from the face or plane in a direction toward the sketch.</p>
  </li>
  <li>
    <p><strong>TranslateSurface1</strong> - <code class="language-plaintext highlighter-rouge">True</code> specifies that the end of the extrusion is a translation of the reference surface, <code class="language-plaintext highlighter-rouge">False</code> specifies to use a true offset.</p>
  </li>
  <li>
    <p><strong>TranslateSurface2</strong> - <code class="language-plaintext highlighter-rouge">True</code> specifies that the end of the extrusion is a translation of the reference surface, <code class="language-plaintext highlighter-rouge">False</code> specifies to use a true offset.</p>
  </li>
  <li>
    <p><strong>NormalCut</strong> - <code class="language-plaintext highlighter-rouge">True</code> to create the cut normal to the sheet metal thickness, <code class="language-plaintext highlighter-rouge">False</code> to not.</p>
  </li>
  <li>
    <p><strong>UseFeatScope</strong> - <code class="language-plaintext highlighter-rouge">True</code> if the feature only affects selected bodies or components, <code class="language-plaintext highlighter-rouge">False</code> if the feature affects all bodies or components.</p>
  </li>
  <li>
    <p><strong>UseAutoSelect</strong> - <code class="language-plaintext highlighter-rouge">True</code> to automatically select all bodies or components and have the feature affect those bodies or components, <code class="language-plaintext highlighter-rouge">False</code> to only select the bodies or components the feature affects.</p>
  </li>
  <li>
    <p><strong>AssemblyFeatureScope</strong> - <code class="language-plaintext highlighter-rouge">True</code> if the assembly feature only affects selected components in the assembly, <code class="language-plaintext highlighter-rouge">False</code> if the assembly feature affects all components in the assembly.</p>
  </li>
  <li>
    <p><strong>AutoSelectComponents</strong> - <code class="language-plaintext highlighter-rouge">True</code> to automatically select all affected components, <code class="language-plaintext highlighter-rouge">False</code> to use only the selected components.</p>
  </li>
  <li>
    <p><strong>PropagateFeatureToParts</strong> - <code class="language-plaintext highlighter-rouge">True</code> to propagate the assembly feature to the components in the model that it affects, <code class="language-plaintext highlighter-rouge">False</code> to not.</p>
  </li>
  <li>
    <p><strong>T0</strong> - Start conditions as defined in <code class="language-plaintext highlighter-rouge">swStartConditions_e</code>.</p>

    <table>
      <thead>
        <tr>
          <th>Member</th>
          <th>Description</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td><code class="language-plaintext highlighter-rouge">swStartOffset</code></td>
          <td>3</td>
        </tr>
        <tr>
          <td><code class="language-plaintext highlighter-rouge">swStartSketchPlane</code></td>
          <td>0</td>
        </tr>
        <tr>
          <td><code class="language-plaintext highlighter-rouge">swStartSurface</code></td>
          <td>1</td>
        </tr>
        <tr>
          <td><code class="language-plaintext highlighter-rouge">swStartVertex</code></td>
          <td>2</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li><strong>StartOffset</strong> - If <code class="language-plaintext highlighter-rouge">T0</code> is <code class="language-plaintext highlighter-rouge">swStartConditions_e.swStartOffset</code>, then specify an offset value.</li>
  <li><strong>FlipStartOffset</strong> - If <code class="language-plaintext highlighter-rouge">T0</code> is <code class="language-plaintext highlighter-rouge">swStartConditions_e.swStartOffset</code>, then <code class="language-plaintext highlighter-rouge">True</code> to flip the direction of cut, <code class="language-plaintext highlighter-rouge">False</code> to not.</li>
  <li><strong>OptimizeGeometry</strong> - <code class="language-plaintext highlighter-rouge">True</code> to optimize the normal cut in a sheet metal part, <code class="language-plaintext highlighter-rouge">False</code> to not; only valid for sheet metal parts and when NormalCut is true.</li>
</ul>

<p><strong>Return Value</strong> : This <code class="language-plaintext highlighter-rouge">InsertProtrusionBlend2</code> method return <strong>feature</strong> data object.</p>

<p>In our code, I have used following values:</p>

<table>
  <thead>
    <tr>
      <th>Parameter Name</th>
      <th>Value Used</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><em>Sd</em></td>
      <td><code class="language-plaintext highlighter-rouge">True</code></td>
    </tr>
    <tr>
      <td><em>Flip</em></td>
      <td><code class="language-plaintext highlighter-rouge">False</code></td>
    </tr>
    <tr>
      <td><em>Dir</em></td>
      <td><code class="language-plaintext highlighter-rouge">False</code></td>
    </tr>
    <tr>
      <td><em>T1</em></td>
      <td><code class="language-plaintext highlighter-rouge">swEndCondThroughAll</code></td>
    </tr>
    <tr>
      <td><em>T2</em></td>
      <td><code class="language-plaintext highlighter-rouge">0</code></td>
    </tr>
    <tr>
      <td><em>D1</em></td>
      <td><code class="language-plaintext highlighter-rouge">0.01</code></td>
    </tr>
    <tr>
      <td><em>D2</em></td>
      <td><code class="language-plaintext highlighter-rouge">0.01</code></td>
    </tr>
    <tr>
      <td><em>Dchk1</em></td>
      <td><code class="language-plaintext highlighter-rouge">False</code></td>
    </tr>
    <tr>
      <td><em>Dchk2</em></td>
      <td><code class="language-plaintext highlighter-rouge">False</code></td>
    </tr>
    <tr>
      <td><em>Ddir1</em></td>
      <td><code class="language-plaintext highlighter-rouge">False</code></td>
    </tr>
    <tr>
      <td><em>Ddir2</em></td>
      <td><code class="language-plaintext highlighter-rouge">False</code></td>
    </tr>
    <tr>
      <td><em>Dang1</em></td>
      <td><code class="language-plaintext highlighter-rouge">1</code></td>
    </tr>
    <tr>
      <td><em>Dang2</em></td>
      <td><code class="language-plaintext highlighter-rouge">1</code></td>
    </tr>
    <tr>
      <td><em>OffsetReverse1</em></td>
      <td><code class="language-plaintext highlighter-rouge">False</code></td>
    </tr>
    <tr>
      <td><em>OffsetReverse2</em></td>
      <td><code class="language-plaintext highlighter-rouge">False</code></td>
    </tr>
    <tr>
      <td><em>TranslateSurface1</em></td>
      <td><code class="language-plaintext highlighter-rouge">False</code></td>
    </tr>
    <tr>
      <td><em>TranslateSurface2</em></td>
      <td><code class="language-plaintext highlighter-rouge">False</code></td>
    </tr>
    <tr>
      <td><em>NormalCut</em></td>
      <td><code class="language-plaintext highlighter-rouge">False</code></td>
    </tr>
    <tr>
      <td><em>UseFeatScope</em></td>
      <td><code class="language-plaintext highlighter-rouge">True</code></td>
    </tr>
    <tr>
      <td><em>UseAutoSelect</em></td>
      <td><code class="language-plaintext highlighter-rouge">True</code></td>
    </tr>
    <tr>
      <td><em>AssemblyFeatureScope</em></td>
      <td><code class="language-plaintext highlighter-rouge">True</code></td>
    </tr>
    <tr>
      <td><em>AutoSelectComponents</em></td>
      <td><code class="language-plaintext highlighter-rouge">True</code></td>
    </tr>
    <tr>
      <td><em>PropagateFeatureToParts</em></td>
      <td><code class="language-plaintext highlighter-rouge">False</code></td>
    </tr>
    <tr>
      <td><em>T0</em></td>
      <td><code class="language-plaintext highlighter-rouge">swStartSketchPlane</code></td>
    </tr>
    <tr>
      <td><em>StartOffset</em></td>
      <td><code class="language-plaintext highlighter-rouge">0</code></td>
    </tr>
    <tr>
      <td><em>FlipStartOffset</em></td>
      <td><code class="language-plaintext highlighter-rouge">False</code></td>
    </tr>
    <tr>
      <td><em>OptimizeGeometry</em></td>
      <td><code class="language-plaintext highlighter-rouge">False</code></td>
    </tr>
  </tbody>
</table>

<p>To see methods and properties related to <code class="language-plaintext highlighter-rouge">FeatureManager</code> object, please visit ðŸ‘‰ <strong><a href="https://help.solidworks.com/2019/english/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.IFeatureManager_members.html">this page of SOLIDWORKS API Help</a></strong>.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Check if Extrude Cut Feature creates or not</span>
<span class="k">If</span> <span class="n">swFeature</span> <span class="ow">Is</span> <span class="k">Nothing</span> <span class="k">Then</span>
    <span class="n">MsgBox</span> <span class="p">(</span><span class="s">"Failed to create Extrude Cut Feature."</span><span class="p">)</span>
    <span class="k">Exit</span> <span class="k">Sub</span>
<span class="nf">End</span> <span class="k">If</span>
</code></pre></div></div>

<p>In above line of code, we use an ðŸ‘‰ <strong><a href="/vba/if-then-structure-select-case/">IF statement</a></strong> to check if we able to create <em>Extrude Cut</em> Feature or not.</p>

<p>If we failed to select then inform the user by a ðŸ‘‰ <strong><a href="/vba/msgBox-function/">Message Window</a></strong>.</p>

<p>After showing error message our program <strong>exit</strong> from here itself.</p>

<p>Now we run the macro and after running macro we get extrude as shown in below image.</p>

<p><a href="/assets/Solidworks_Images/feature-extrude-cut/extrude-cut-final-result.png"><img src="/assets/Solidworks_Images/feature-extrude-cut/extrude-cut-final-result.png" alt="extrude-cut-feature-final-result" /></a></p>

<p><strong>This is it !!!</strong></p>

<p><em>I hope my efforts will helpful to someone!</em></p>

<p>If you found anything to <strong>add or update</strong>, please let me know on my <em>e-mail</em>.</p>

<p>Hope this post helps you to <strong>create Extrude Cut</strong> with SOLIDWORKS VBA Macros.</p>

<p>For more such tutorials on <strong>SOLIDWORKS VBA Macro</strong>, do come to this blog after sometime.</p>

<p><em>If you like the post then please share it with your friends also.</em></p>

<p><em>Do let me know by you like this post or not!</em></p>

<p><em>Till then, Happy learning!!!</em></p>
:ET