I"Š­<h2 id="objective">Objective</h2>

<p>In this post, I tell you about <em>how to create Lofted Base/Boss through Solidworks VBA Macros</em> in a sketch.</p>

<p>This method is <strong><em>most updated</em></strong> method, so <strong><em>use this method</em></strong> if you want to create a new <strong>Lofted Base/Boss</strong>.</p>

<h2 id="video-of-code-on-youtube">Video of Code on YouTube</h2>

<p>Please see below video on <strong>how to create Lofted Base/Boss</strong> from Solidworks VBA Macros.</p>

<iframe src="https://www.youtube.com/embed/wg6_7sjZBnE" frameborder="0" allowfullscreen=""></iframe>
<p><br /></p>

<p>Please note that there are <strong>no explanation</strong> in the video.</p>

<p><strong>Explanation</strong> of each line and why we write code this way is given in this post.</p>

<h2 id="code-sample">Code Sample</h2>

<p>Below is the <code class="language-plaintext highlighter-rouge">code</code> sample for creating <em>Lofted Base/Boss</em>.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">Option</span> <span class="n">Explicit</span>

<span class="c1">' Create variable for Solidworks application</span>
<span class="k">Dim</span> <span class="nv">swApp</span> <span class="ow">As</span> <span class="n">SldWorks</span><span class="p">.</span><span class="n">SldWorks</span>
<span class="c1">' Create variable for Solidworks document</span>
<span class="k">Dim</span> <span class="nv">swDoc</span> <span class="ow">As</span> <span class="n">SldWorks</span><span class="p">.</span><span class="n">ModelDoc2</span>
<span class="c1">' Creating variable for Solidworks Feature</span>
<span class="k">Dim</span> <span class="nv">swFeature</span> <span class="ow">As</span> <span class="n">SldWorks</span><span class="p">.</span><span class="n">Feature</span>
<span class="c1">' Boolean Variable</span>
<span class="k">Dim</span> <span class="nv">boolStatus</span> <span class="ow">As</span> <span class="kt">Boolean</span>

<span class="c1">' Lofted Boss/Extrude program</span>
<span class="k">Sub</span> <span class="nf">main</span><span class="p">()</span>

  <span class="c1">' Setting Solidworks variable to current application</span>
  <span class="k">Set</span> <span class="n">swApp</span> <span class="o">=</span> <span class="n">Application</span><span class="p">.</span><span class="n">SldWorks</span>
  
  <span class="c1">' Check if Solidworks is opened or not</span>
  <span class="k">If</span> <span class="n">swApp</span> <span class="ow">Is</span> <span class="k">Nothing</span> <span class="k">Then</span>
    <span class="n">MsgBox</span> <span class="p">(</span><span class="s">"Solidworks is not opened"</span><span class="p">)</span>
    <span class="k">Exit</span> <span class="k">Sub</span>
  <span class="nf">End</span> <span class="k">If</span>
  
  <span class="c1">' Setting Solidworks document variable to opened part document</span>
  <span class="k">Set</span> <span class="n">swDoc</span> <span class="o">=</span> <span class="n">swApp</span><span class="p">.</span><span class="n">ActiveDoc</span>
  
  <span class="c1">' Check if Solidworks document is opened or not</span>
  <span class="k">If</span> <span class="n">swDoc</span> <span class="ow">Is</span> <span class="k">Nothing</span> <span class="k">Then</span>
    <span class="n">MsgBox</span> <span class="p">(</span><span class="s">"Solidworks document is not opened. Please open a document."</span><span class="p">)</span>
    <span class="k">Exit</span> <span class="k">Sub</span>
  <span class="nf">End</span> <span class="k">If</span>
  
  <span class="c1">' Select Sketch 3 in opened part document</span>
  <span class="n">boolStatus</span> <span class="o">=</span> <span class="n">swDoc</span><span class="p">.</span><span class="n">Extension</span><span class="p">.</span><span class="n">SelectByID2</span><span class="p">(</span><span class="s">"Sketch3"</span><span class="p">,</span> <span class="s">"SKETCH"</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">False</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="k">Nothing</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
  
  <span class="c1">' Check if select Sketch 3 selected or not</span>
  <span class="k">If</span> <span class="n">boolStatus</span> <span class="o">=</span> <span class="k">False</span> <span class="k">Then</span>
    <span class="n">MsgBox</span> <span class="p">(</span><span class="s">"Fail to select Sketch 3 as profile for Loft."</span><span class="p">)</span>
    <span class="k">Exit</span> <span class="k">Sub</span>
  <span class="nf">End</span> <span class="k">If</span>
  
  <span class="c1">' Select Sketch 2 in opened part document</span>
  <span class="n">boolStatus</span> <span class="o">=</span> <span class="n">swDoc</span><span class="p">.</span><span class="n">Extension</span><span class="p">.</span><span class="n">SelectByID2</span><span class="p">(</span><span class="s">"Sketch2"</span><span class="p">,</span> <span class="s">"SKETCH"</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">True</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="k">Nothing</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
  
  <span class="c1">' Check if select Sketch 2 selected or not</span>
  <span class="k">If</span> <span class="n">boolStatus</span> <span class="o">=</span> <span class="k">False</span> <span class="k">Then</span>
    <span class="n">MsgBox</span> <span class="p">(</span><span class="s">"Fail to select Sketch 2 as profile for Loft."</span><span class="p">)</span>
    <span class="k">Exit</span> <span class="k">Sub</span>
  <span class="nf">End</span> <span class="k">If</span>
  
  <span class="c1">' Select Sketch 1 in opened part document</span>
  <span class="n">boolStatus</span> <span class="o">=</span> <span class="n">swDoc</span><span class="p">.</span><span class="n">Extension</span><span class="p">.</span><span class="n">SelectByID2</span><span class="p">(</span><span class="s">"Sketch1"</span><span class="p">,</span> <span class="s">"SKETCH"</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">True</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="k">Nothing</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
  
  <span class="c1">' Check if select Sketch 1 selected or not</span>
  <span class="k">If</span> <span class="n">boolStatus</span> <span class="o">=</span> <span class="k">False</span> <span class="k">Then</span>
    <span class="n">MsgBox</span> <span class="p">(</span><span class="s">"Fail to select Sketch 1 as profile for Loft."</span><span class="p">)</span>
    <span class="k">Exit</span> <span class="k">Sub</span>
  <span class="nf">End</span> <span class="k">If</span>
  
  <span class="c1">' Select 3DSketch1 in opened part document</span>
  <span class="n">boolStatus</span> <span class="o">=</span> <span class="n">swDoc</span><span class="p">.</span><span class="n">Extension</span><span class="p">.</span><span class="n">SelectByID2</span><span class="p">(</span><span class="s">"3DSketch1"</span><span class="p">,</span> <span class="s">"SKETCH"</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">True</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="k">Nothing</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
  
  <span class="c1">' Check if select 3DSketch1 selected or not</span>
  <span class="k">If</span> <span class="n">boolStatus</span> <span class="o">=</span> <span class="k">False</span> <span class="k">Then</span>
    <span class="n">MsgBox</span> <span class="p">(</span><span class="s">"Fail to select 3DSketch1 as Guide curve for Loft."</span><span class="p">)</span>
    <span class="k">Exit</span> <span class="k">Sub</span>
  <span class="nf">End</span> <span class="k">If</span>
  
  <span class="c1">' Create Lofted Boss feature</span>
  <span class="k">Set</span> <span class="n">swFeature</span> <span class="o">=</span> <span class="n">swDoc</span><span class="p">.</span><span class="n">FeatureManager</span><span class="p">.</span><span class="n">InsertProtrusionBlend2</span><span class="p">(</span><span class="k">False</span><span class="p">,</span> <span class="k">True</span><span class="p">,</span> <span class="k">True</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">True</span><span class="p">,</span> <span class="k">True</span><span class="p">,</span> <span class="k">False</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">True</span><span class="p">,</span> <span class="k">True</span><span class="p">,</span> <span class="k">True</span><span class="p">,</span> <span class="n">swGuideCurveInfluence_e</span><span class="p">.</span><span class="n">swGuideCurveInfluenceNextGlobal</span><span class="p">)</span>

  <span class="c1">' Check if Loft boss feature is created or not</span>
  <span class="k">If</span> <span class="n">swFeature</span> <span class="ow">Is</span> <span class="k">Nothing</span> <span class="k">Then</span>
    <span class="n">MsgBox</span> <span class="p">(</span><span class="s">"Failed to create Lofted boss."</span><span class="p">)</span>
    <span class="k">Exit</span> <span class="k">Sub</span>
  <span class="nf">End</span> <span class="k">If</span>
    
<span class="k">End</span> <span class="k">Sub</span>
</code></pre></div></div>

<h2 id="prerequisite">Prerequisite</h2>

<p>In this article there are some <em>prerequisite</em>.</p>

<p>We are <strong>not</strong> creating sketches from code but we use <strong>existing sketch</strong> to <em>create Lofted Base/Boss</em> feature as shown in below picture.</p>

<p><a href="/assets/Solidworks_Images/feature-lofted-boss/sketch-to-use-for-lofted-bose-feature.png"><img src="/assets/Solidworks_Images/feature-lofted-boss/sketch-to-use-for-lofted-bose-feature.png" alt="sketch-to-use-for-lofted-bose-feature" /></a></p>

<p>As shown in above image, there are 2 sketch in our part.</p>

<ol>
  <li>
    <p><code class="language-plaintext highlighter-rouge">Sketch1</code> : This is our <strong>profile 1</strong> for Lofted feature.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">Sketch2</code> : This is our <strong>profile 2</strong> for Lofted feature.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">Sketch3</code> : This is our <strong>profile 3</strong> for Lofted feature.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">3DSketch1</code> : This is our <strong>Guide Curve</strong> for Lofted feature.</p>
  </li>
</ol>

<p>If you want to create these 2 sketch programmatically then please refer to below articles.</p>

<p>For Circle ðŸ‘‰ read <strong><a href="/solidworks-macros/create-circle">Solidworks Macros - Create Circle</a></strong> article.</p>

<p>For CenterPoint Arc ðŸ‘‰ read <strong><a href="/solidworks-macros/create-center-rectangle">Solidworks Macros - Create Center Rectangle</a></strong> article.</p>

<p>Also, we will apply checks in this article, so that code we write should be error free most of the time.</p>

<h2 id="understanding-the-code">Understanding the Code</h2>

<p>Now let us walk through <strong>each line</strong> in the above code, and <strong>understand</strong> the meaning and purpose of every line.</p>

<p>I also give some link so that you can go through them if there are anything I explained in previous posts.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">Option</span> <span class="n">Explicit</span>
</code></pre></div></div>

<p>This line forces us to define every variable we are going to use.</p>

<p>For more information please visit ðŸ‘‰ <strong><a href="/solidworks-macros/open-new-document">Solidworks Macros - Open new Part document</a></strong> post.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Create variable for Solidworks application</span>
<span class="k">Dim</span> <span class="nv">swApp</span> <span class="ow">As</span> <span class="n">SldWorks</span><span class="p">.</span><span class="n">SldWorks</span>
</code></pre></div></div>

<p>In this line, we create a variable which we named as <code class="language-plaintext highlighter-rouge">swApp</code> and the type of this <code class="language-plaintext highlighter-rouge">swApp</code> variable is <code class="language-plaintext highlighter-rouge">SldWorks.SldWorks</code>.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Create variable for Solidworks document</span>
<span class="k">Dim</span> <span class="nv">swDoc</span> <span class="ow">As</span> <span class="n">SldWorks</span><span class="p">.</span><span class="n">ModelDoc2</span>
</code></pre></div></div>

<p>In this line, we create a variable which we named as <code class="language-plaintext highlighter-rouge">swDoc</code> and the type of this <code class="language-plaintext highlighter-rouge">swDoc</code> variable is <code class="language-plaintext highlighter-rouge">SldWorks.ModelDoc2</code>.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Creating variable for Solidworks Feature</span>
<span class="k">Dim</span> <span class="nv">swFeature</span> <span class="ow">As</span> <span class="n">SldWorks</span><span class="p">.</span><span class="n">Feature</span>
</code></pre></div></div>

<p>In this line, we Create a variable which we named as <code class="language-plaintext highlighter-rouge">swFeature</code> and the type of this <code class="language-plaintext highlighter-rouge">swFeature</code> variable is <code class="language-plaintext highlighter-rouge">SldWorks.Feature</code>.</p>

<p>We create variable <code class="language-plaintext highlighter-rouge">swFeature</code> for <strong>Solidworks Feature</strong>.</p>

<p>To see methods and properties related to <code class="language-plaintext highlighter-rouge">Feature</code> object, please visit ðŸ‘‰ <strong><a href="https://help.solidworks.com/2019/english/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.IFeature_members.html">this page of Solidworks API Help</a></strong></p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Boolean Variable</span>
<span class="k">Dim</span> <span class="nv">boolStatus</span> <span class="ow">As</span> <span class="kt">Boolean</span>
</code></pre></div></div>

<p>In this line, we create a variable named <code class="language-plaintext highlighter-rouge">boolStatus</code> as <code class="language-plaintext highlighter-rouge">Boolean</code> object type.</p>

<p><strong>These all are our global variables.</strong></p>

<p>They are <strong>Solidworks API Objects</strong>.</p>

<p>So basically I group all the <strong>Solidworks API Objects</strong> in one place.</p>

<p>I have also place <code class="language-plaintext highlighter-rouge">boolean</code> type object at top also, because we use this variable frequently.</p>

<p>Thus, I have started placing it here.</p>

<p>Next is our <code class="language-plaintext highlighter-rouge">Sub</code> procedure which has name of <code class="language-plaintext highlighter-rouge">main</code>.</p>

<p>This procedure hold all the <em>statements (instructions)</em> we give to computer.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Set Solidworks variable to Solidworks application</span>
<span class="k">Set</span> <span class="n">swApp</span> <span class="o">=</span> <span class="n">Application</span><span class="p">.</span><span class="n">SldWorks</span>
</code></pre></div></div>

<p>In this line, we set the value of our Solidworks variable <code class="language-plaintext highlighter-rouge">swApp</code>; which we define earlier; to Solidworks application.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Check if Solidworks is opened or not</span>
<span class="k">If</span> <span class="n">swApp</span> <span class="ow">Is</span> <span class="k">Nothing</span> <span class="k">Then</span>
  <span class="n">MsgBox</span> <span class="p">(</span><span class="s">"Solidworks is not opened"</span><span class="p">)</span>
  <span class="k">Exit</span> <span class="k">Sub</span>
<span class="nf">End</span> <span class="k">If</span>
</code></pre></div></div>

<p>In above line of code, we use an ðŸ‘‰ <strong><a href="/vba/if-then-structure-select-case/">IF statement</a></strong> to check if Solidworks application variable is <em>successfully assigned</em> to current Solidworks application.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Setting Solidworks document variable to opened part document</span>
<span class="k">Set</span> <span class="n">swDoc</span> <span class="o">=</span> <span class="n">swApp</span><span class="p">.</span><span class="n">ActiveDoc</span>
</code></pre></div></div>

<p>In above line of code, we set Solidwors document <code class="language-plaintext highlighter-rouge">swDoc</code> variable to currently open part document.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Check if Solidworks document is opened or not</span>
<span class="k">If</span> <span class="n">swDoc</span> <span class="ow">Is</span> <span class="k">Nothing</span> <span class="k">Then</span>
  <span class="n">MsgBox</span> <span class="p">(</span><span class="s">"Solidworks document is not opened. Please open a document."</span><span class="p">)</span>
  <span class="k">Exit</span> <span class="k">Sub</span>
<span class="nf">End</span> <span class="k">If</span>
</code></pre></div></div>

<p>In above line of code, we use an ðŸ‘‰ <strong><a href="/vba/if-then-structure-select-case/">IF statement</a></strong> to check if Solidworks document <code class="language-plaintext highlighter-rouge">swDoc</code> is opened.</p>

<p>If Solidworks document is not opened then code execute inside the code and inform the user by a ðŸ‘‰ <strong><a href="/vba/msgBox-function/">Message Window</a></strong>.</p>

<p>After showing message our program <strong>exit</strong> from here itself.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Select Sketch 3 as profile in opened part document</span>
<span class="n">boolStatus</span> <span class="o">=</span> <span class="n">swDoc</span><span class="p">.</span><span class="n">Extension</span><span class="p">.</span><span class="n">SelectByID2</span><span class="p">(</span><span class="s">"Sketch3"</span><span class="p">,</span> <span class="s">"SKETCH"</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">True</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="k">Nothing</span><span class="p">,</span> <span class="n">swSelectOption_e</span><span class="p">.</span><span class="n">swSelectOptionDefault</span><span class="p">)</span>
</code></pre></div></div>

<p>In above line, we select the <em>Sketch3</em> by using <code class="language-plaintext highlighter-rouge">SelectByID2</code> method from <code class="language-plaintext highlighter-rouge">Extension</code> object.</p>

<p>Please note that for selecting profile we need to <code class="language-plaintext highlighter-rouge">Mark</code> the selected entity as <code class="language-plaintext highlighter-rouge">1</code>.</p>

<p>For more information about selection method please visit ðŸ‘‰ <strong><a href="/solidworks-macros/select-plane-from-tree">Solidworks Macros - Selection Methods</a></strong> post.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Check if Sketch 3 selected or not</span>
<span class="k">If</span> <span class="n">boolStatus</span> <span class="o">=</span> <span class="k">False</span> <span class="k">Then</span>
  <span class="n">MsgBox</span> <span class="p">(</span><span class="s">"Fail to select Sketch 3 as profile for Loft."</span><span class="p">)</span>
  <span class="k">Exit</span> <span class="k">Sub</span>
<span class="nf">End</span> <span class="k">If</span>
</code></pre></div></div>

<p>In above line of code, we use an ðŸ‘‰ <strong><a href="/vba/if-then-structure-select-case/">IF statement</a></strong> to check if Solidworks document <code class="language-plaintext highlighter-rouge">swDoc</code> is opened.</p>

<p>If <em>Sketch 3 selected or not</em> then code execute inside the code and inform the user by a ðŸ‘‰ <strong><a href="/vba/msgBox-function/">Message Window</a></strong>.</p>

<p>After showing message our program <strong>exit</strong> from here itself.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Select Sketch 2 as profile in opened part document</span>
<span class="n">boolStatus</span> <span class="o">=</span> <span class="n">swDoc</span><span class="p">.</span><span class="n">Extension</span><span class="p">.</span><span class="n">SelectByID2</span><span class="p">(</span><span class="s">"Sketch2"</span><span class="p">,</span> <span class="s">"SKETCH"</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">True</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="k">Nothing</span><span class="p">,</span> <span class="n">swSelectOption_e</span><span class="p">.</span><span class="n">swSelectOptionDefault</span><span class="p">)</span>
</code></pre></div></div>

<p>In above line, we select the <em>Sketch2</em> by using <code class="language-plaintext highlighter-rouge">SelectByID2</code> method from <code class="language-plaintext highlighter-rouge">Extension</code> object.</p>

<p>Please note that for selecting profile we need to <code class="language-plaintext highlighter-rouge">Mark</code> the selected entity as <code class="language-plaintext highlighter-rouge">1</code>.</p>

<p>For more information about selection method please visit ðŸ‘‰ <strong><a href="/solidworks-macros/select-plane-from-tree">Solidworks Macros - Selection Methods</a></strong> post.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Check if Sketch 2 selected or not</span>
<span class="k">If</span> <span class="n">boolStatus</span> <span class="o">=</span> <span class="k">False</span> <span class="k">Then</span>
  <span class="n">MsgBox</span> <span class="p">(</span><span class="s">"Fail to select Sketch 2 as profile for Loft."</span><span class="p">)</span>
  <span class="k">Exit</span> <span class="k">Sub</span>
<span class="nf">End</span> <span class="k">If</span>
</code></pre></div></div>

<p>In above line of code, we use an ðŸ‘‰ <strong><a href="/vba/if-then-structure-select-case/">IF statement</a></strong> to check if Solidworks document <code class="language-plaintext highlighter-rouge">swDoc</code> is opened.</p>

<p>If <em>Sketch 2 selected or not</em> then code execute inside the code and inform the user by a ðŸ‘‰ <strong><a href="/vba/msgBox-function/">Message Window</a></strong>.</p>

<p>After showing message our program <strong>exit</strong> from here itself.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Select Sketch 1 as profile in opened part document</span>
<span class="n">boolStatus</span> <span class="o">=</span> <span class="n">swDoc</span><span class="p">.</span><span class="n">Extension</span><span class="p">.</span><span class="n">SelectByID2</span><span class="p">(</span><span class="s">"Sketch1"</span><span class="p">,</span> <span class="s">"SKETCH"</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">True</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="k">Nothing</span><span class="p">,</span> <span class="n">swSelectOption_e</span><span class="p">.</span><span class="n">swSelectOptionDefault</span><span class="p">)</span>
</code></pre></div></div>

<p>In above line, we select the <em>Sketch1</em> by using <code class="language-plaintext highlighter-rouge">SelectByID2</code> method from <code class="language-plaintext highlighter-rouge">Extension</code> object.</p>

<p>Please note that for selecting profile we need to <code class="language-plaintext highlighter-rouge">Mark</code> the selected entity as <code class="language-plaintext highlighter-rouge">1</code>.</p>

<p>For more information about selection method please visit ðŸ‘‰ <strong><a href="/solidworks-macros/select-plane-from-tree">Solidworks Macros - Selection Methods</a></strong> post.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Check if Sketch 1 selected or not</span>
<span class="k">If</span> <span class="n">boolStatus</span> <span class="o">=</span> <span class="k">False</span> <span class="k">Then</span>
  <span class="n">MsgBox</span> <span class="p">(</span><span class="s">"Fail to select Sketch 1 as profile for Loft."</span><span class="p">)</span>
  <span class="k">Exit</span> <span class="k">Sub</span>
<span class="nf">End</span> <span class="k">If</span>
</code></pre></div></div>

<p>In above line of code, we use an ðŸ‘‰ <strong><a href="/vba/if-then-structure-select-case/">IF statement</a></strong> to check if Solidworks document <code class="language-plaintext highlighter-rouge">swDoc</code> is opened.</p>

<p>If <em>Sketch 1 selected or not</em> then code execute inside the code and inform the user by a ðŸ‘‰ <strong><a href="/vba/msgBox-function/">Message Window</a></strong>.</p>

<p>After showing message our program <strong>exit</strong> from here itself.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Select 3DSketch1 as Guide curve in opened part document</span>
<span class="n">boolStatus</span> <span class="o">=</span> <span class="n">swDoc</span><span class="p">.</span><span class="n">Extension</span><span class="p">.</span><span class="n">SelectByID2</span><span class="p">(</span><span class="s">"3DSketch1"</span><span class="p">,</span> <span class="s">"SKETCH"</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">True</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="k">Nothing</span><span class="p">,</span> <span class="n">swSelectOption_e</span><span class="p">.</span><span class="n">swSelectOptionDefault</span><span class="p">)</span>
</code></pre></div></div>

<p>In above line, we select the <em>3DSketch1</em> by using <code class="language-plaintext highlighter-rouge">SelectByID2</code> method from <code class="language-plaintext highlighter-rouge">Extension</code> object.</p>

<p>Please note that for selecting profile we need to <code class="language-plaintext highlighter-rouge">Mark</code> the selected entity as <code class="language-plaintext highlighter-rouge">2</code>.</p>

<p>For more information about selection method please visit ðŸ‘‰ <strong><a href="/solidworks-macros/select-plane-from-tree">Solidworks Macros - Selection Methods</a></strong> post.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Check if 3DSketch1 selected or not</span>
<span class="k">If</span> <span class="n">boolStatus</span> <span class="o">=</span> <span class="k">False</span> <span class="k">Then</span>
  <span class="n">MsgBox</span> <span class="p">(</span><span class="s">"Fail to select 3DSketch1 as Guide curve for Loft."</span><span class="p">)</span>
  <span class="k">Exit</span> <span class="k">Sub</span>
<span class="nf">End</span> <span class="k">If</span>
</code></pre></div></div>

<p>In above line of code, we use an ðŸ‘‰ <strong><a href="/vba/if-then-structure-select-case/">IF statement</a></strong> to check if Solidworks document <code class="language-plaintext highlighter-rouge">swDoc</code> is opened.</p>

<p>If <em>3DSketch1 selected or not</em> then code execute inside the code and inform the user by a ðŸ‘‰ <strong><a href="/vba/msgBox-function/">Message Window</a></strong>.</p>

<p>After showing message our program <strong>exit</strong> from here itself.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Create Lofted feature</span>
<span class="k">Set</span> <span class="n">swFeature</span> <span class="o">=</span> <span class="n">swDoc</span><span class="p">.</span><span class="n">FeatureManager</span><span class="p">.</span><span class="n">InsertProtrusionBlend2</span><span class="p">(</span><span class="k">False</span><span class="p">,</span> <span class="k">True</span><span class="p">,</span> <span class="k">True</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">True</span><span class="p">,</span> <span class="k">True</span><span class="p">,</span> <span class="k">False</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">True</span><span class="p">,</span> <span class="k">True</span><span class="p">,</span> <span class="k">True</span><span class="p">,</span> <span class="n">swGuideCurveInfluence_e</span><span class="p">.</span><span class="n">swGuideCurveInfluenceNextGlobal</span><span class="p">)</span>
</code></pre></div></div>

<p>In above line of code we set the value of variable <code class="language-plaintext highlighter-rouge">swFeature</code> by <code class="language-plaintext highlighter-rouge">InsertProtrusionBlend2</code> method.</p>

<p><code class="language-plaintext highlighter-rouge">InsertProtrusionBlend2</code> method is part of <code class="language-plaintext highlighter-rouge">FeatureManager</code> object.</p>

<p>This <code class="language-plaintext highlighter-rouge">FeatureManager</code> is again part of <code class="language-plaintext highlighter-rouge">swDoc</code> variable i.e. <code class="language-plaintext highlighter-rouge">ModelDoc2</code> object.</p>

<h2 id="insertprotrusionblend2-method-parameters-details">InsertProtrusionBlend2 Method Parameters Details</h2>

<p>This <code class="language-plaintext highlighter-rouge">InsertProtrusionBlend2</code> method takes following parameters as explained:</p>

<ul>
  <li>
    <p><strong>Closed</strong> - <em><code class="language-plaintext highlighter-rouge">True</code> closes the loft, <code class="language-plaintext highlighter-rouge">False</code> leaves the loft open. If <code class="language-plaintext highlighter-rouge">True</code> and less than three profiles are selected, then any selected guide curves <strong>must</strong> be closed curves</em>.</p>
  </li>
  <li>
    <p><strong>KeepTangency</strong> - <em><code class="language-plaintext highlighter-rouge">True</code> maintains the tangency as seen in the section curves, <code class="language-plaintext highlighter-rouge">False</code> does not</em>.</p>
  </li>
  <li>
    <p><strong>ForceNonRational</strong> - <em><code class="language-plaintext highlighter-rouge">True</code> obtains smoother surfaces, <code class="language-plaintext highlighter-rouge">False</code> does not</em>.</p>
  </li>
  <li>
    <p><strong>TessToleranceFactor</strong> - <em>Factor that controls the number of intermediate sections used for loft with centerline; the default value is 1.0; the greater the value, the more intermediate sections are created.</em></p>
  </li>
  <li>
    <p><strong>StartMatchingType</strong> - <em>Tangency type at the start profile as follows:</em></p>

    <ul>
      <li><code class="language-plaintext highlighter-rouge">0</code> = <em>none.</em></li>
      <li><code class="language-plaintext highlighter-rouge">1</code> = <em>tangent to the normal of the profile.</em></li>
      <li><code class="language-plaintext highlighter-rouge">2</code> = <em>tangent to a selected vector.</em></li>
      <li><code class="language-plaintext highlighter-rouge">3</code> = <em>tangency to all the adjacent faces sharing an edge with the start profile.</em></li>
      <li><code class="language-plaintext highlighter-rouge">4</code> = <em>tangent to some of the selected faces sharing an edge with the start profile (not available).</em></li>
    </ul>
  </li>
  <li>
    <p><strong>EndMatchingType</strong> - <em>Tangency type at the end profile as follows:</em></p>

    <ul>
      <li><code class="language-plaintext highlighter-rouge">0</code> = <em>none.</em></li>
      <li><code class="language-plaintext highlighter-rouge">1</code> = <em>tangent to the normal of the profile.</em></li>
      <li><code class="language-plaintext highlighter-rouge">2</code> = <em>tangent to a selected vector.</em></li>
      <li><code class="language-plaintext highlighter-rouge">3</code> = <em>tangency to all the adjacent faces sharing an edge with the start profile.</em></li>
      <li><code class="language-plaintext highlighter-rouge">4</code> = <em>tangent to some of the selected faces sharing an edge with the start profile (not available).</em></li>
    </ul>
  </li>
  <li>
    <p><strong>StartTangentLength</strong> - <em>Start tangent length.</em></p>
  </li>
  <li>
    <p><strong>EndTangentLength</strong> - <em>End tangent length.</em></p>
  </li>
  <li>
    <p><strong>StartTangentDir</strong> - <em><code class="language-plaintext highlighter-rouge">True</code> is one direction, <code class="language-plaintext highlighter-rouge">False</code> is the opposite.</em></p>
  </li>
  <li>
    <p><strong>EndTangentDir</strong> - <em><code class="language-plaintext highlighter-rouge">True</code> is one direction, <code class="language-plaintext highlighter-rouge">False</code> is the opposite.</em></p>
  </li>
  <li>
    <p><strong>IsThinBody</strong> - <em><code class="language-plaintext highlighter-rouge">True</code> if this feature is a thin body, <code class="language-plaintext highlighter-rouge">False</code> if it is not.</em></p>
  </li>
  <li>
    <p><strong>Thickness1</strong> - <em>Thickness value for the first direction.</em></p>
  </li>
  <li>
    <p><strong>Thickness2</strong> - <em>Thickness value for the second direction.</em></p>
  </li>
  <li>
    <p><strong>ThinType</strong> - <em>Thin wall type :</em></p>

    <ul>
      <li><code class="language-plaintext highlighter-rouge">0</code> = <em>One direction</em></li>
      <li><code class="language-plaintext highlighter-rouge">1</code> = <em>One direction reverse</em></li>
      <li><code class="language-plaintext highlighter-rouge">2</code> = <em>Mid-plane</em></li>
      <li><code class="language-plaintext highlighter-rouge">3</code> = <em>Two direction</em></li>
    </ul>
  </li>
  <li>
    <p><strong>Merge</strong> - <em><code class="language-plaintext highlighter-rouge">True</code> merges the results in a multibody part, <code class="language-plaintext highlighter-rouge">False</code> does not.</em></p>
  </li>
  <li>
    <p><strong>UseFeatScope</strong> - <em><code class="language-plaintext highlighter-rouge">True</code> if the feature only affects selected bodies, <code class="language-plaintext highlighter-rouge">False</code> if the feature affects all bodies.</em></p>
  </li>
  <li>
    <p><strong>UseAutoSelect</strong> - <em><code class="language-plaintext highlighter-rouge">True</code> to automatically select all bodies and have the feature affect those bodies, <code class="language-plaintext highlighter-rouge">False</code> to select the bodies the feature affects.</em></p>
  </li>
  <li>
    <p><strong>GuideCurveInfluence</strong> - <em>Guide curves influence as defined in <code class="language-plaintext highlighter-rouge">swGuideCurveInfluence_e</code></em></p>

    <ul>
      <li><code class="language-plaintext highlighter-rouge">0</code> = <code class="language-plaintext highlighter-rouge">swGuideCurveInfluenceNextGuide</code></li>
      <li><code class="language-plaintext highlighter-rouge">1</code> = <code class="language-plaintext highlighter-rouge">swGuideCurveInfluenceNextSharp</code></li>
      <li><code class="language-plaintext highlighter-rouge">2</code> = <code class="language-plaintext highlighter-rouge">swGuideCurveInfluenceNextEdge</code></li>
      <li><code class="language-plaintext highlighter-rouge">3</code> = <code class="language-plaintext highlighter-rouge">swGuideCurveInfluenceNextGlobal</code></li>
    </ul>
  </li>
</ul>

<p><strong>Return Value</strong> : This <code class="language-plaintext highlighter-rouge">InsertProtrusionBlend2</code> method return <strong>feature</strong> data object.</p>

<p>In our code, I have used following values:</p>

<ul>
  <li>
    <p><strong>Closed</strong> - <em>I use <code class="language-plaintext highlighter-rouge">False</code> to leave the loft open</em>.</p>
  </li>
  <li>
    <p><strong>KeepTangency</strong> - <em>I use <code class="language-plaintext highlighter-rouge">True</code> to maintains the tangency</em>.</p>
  </li>
  <li>
    <p><strong>ForceNonRational</strong> - <em>I use <code class="language-plaintext highlighter-rouge">True</code> to obtains smoother surfaces</em>.</p>
  </li>
  <li>
    <p><strong>TessToleranceFactor</strong> - <em>I use <code class="language-plaintext highlighter-rouge">0</code> number of intermediate sections used for loft with centerline</em>.</p>
  </li>
  <li>
    <p><strong>StartMatchingType</strong> - <em>I use <code class="language-plaintext highlighter-rouge">0</code> at the start profile.</em></p>
  </li>
  <li>
    <p><strong>EndMatchingType</strong> - <em>I use <code class="language-plaintext highlighter-rouge">0</code> at the start profile.</em></p>
  </li>
  <li>
    <p><strong>StartTangentLength</strong> - <em>I use <code class="language-plaintext highlighter-rouge">0</code> at the start tangent length.</em></p>
  </li>
  <li>
    <p><strong>EndTangentLength</strong> - <em>I use <code class="language-plaintext highlighter-rouge">0</code> at the end tangent length.</em></p>
  </li>
  <li>
    <p><strong>StartTangentDir</strong> - <em>I use <code class="language-plaintext highlighter-rouge">True</code> in one direction</em>.</p>
  </li>
  <li>
    <p><strong>EndTangentDir</strong> - <em>I use <code class="language-plaintext highlighter-rouge">True</code> in one direction</em>.</p>
  </li>
  <li>
    <p><strong>IsThinBody</strong> - <em>I use <code class="language-plaintext highlighter-rouge">False</code> for this feature is a thin body</em>.</p>
  </li>
  <li>
    <p><strong>Thickness1</strong> - <em>I use <code class="language-plaintext highlighter-rouge">0</code> for the first direction</em>.</p>
  </li>
  <li>
    <p><strong>Thickness2</strong> - <em>I use <code class="language-plaintext highlighter-rouge">0</code> for the second direction</em>.</p>
  </li>
  <li>
    <p><strong>ThinType</strong> - <em>I use <code class="language-plaintext highlighter-rouge">0</code> for Thin wall type</em>.</p>
  </li>
  <li>
    <p><strong>Merge</strong> - <em>I use <code class="language-plaintext highlighter-rouge">True</code> for merges the results in a multibody part</em>.</p>
  </li>
  <li>
    <p><strong>UseFeatScope</strong> - <em>I use <code class="language-plaintext highlighter-rouge">True</code> for the feature only affects selected bodies</em>.</p>
  </li>
  <li>
    <p><strong>UseAutoSelect</strong> - <em>I use <code class="language-plaintext highlighter-rouge">True</code> for automatically select all bodies and have the feature affect those bodies</em>.</p>
  </li>
  <li>
    <p><strong>GuideCurveInfluence</strong> - <em>I use <code class="language-plaintext highlighter-rouge">swGuideCurveInfluence_e.swGuideCurveInfluenceNextGlobal</code> for Guide curves influence</em>.</p>
  </li>
</ul>

<p>To see methods and properties related to <code class="language-plaintext highlighter-rouge">FeatureManager</code> object, please visit ðŸ‘‰ <strong><a href="https://help.solidworks.com/2019/english/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.IFeatureManager_members.html">this page of Solidworks API Help</a></strong>.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Check if Lofted boss creates or not</span>
<span class="k">If</span> <span class="n">swFeature</span> <span class="ow">Is</span> <span class="k">Nothing</span> <span class="k">Then</span>
  <span class="n">MsgBox</span> <span class="p">(</span><span class="s">"Failed to create Lofted boss."</span><span class="p">)</span>
  <span class="k">Exit</span> <span class="k">Sub</span>
<span class="nf">End</span> <span class="k">If</span>
</code></pre></div></div>

<p>In above line of code, we use an ðŸ‘‰ <strong><a href="/vba/if-then-structure-select-case/">IF statement</a></strong> to check if we able to create <em>Lofted Boss/Base</em> Feature or not.</p>

<p>If we failed to select then inform the user by a ðŸ‘‰ <strong><a href="/vba/msgBox-function/">Message Window</a></strong>.</p>

<p>After showing error message our program <strong>exit</strong> from here itself.</p>

<p>Now we run the macro and after running macro we get extrude as shown in below image.</p>

<p><a href="/assets/Solidworks_Images/feature-lofted-boss/loft-boss-feature-final-result.png"><img src="/assets/Solidworks_Images/feature-lofted-boss/loft-boss-feature-final-result.png" alt="loft-boss-feature-final-result" /></a></p>

<p><strong>This is it !!!</strong></p>

<p><em>I hope my efforts will helpful to someone!</em></p>

<p>If you found anything to <strong>add or update</strong>, please let me know on my <em>e-mail</em>.</p>

<p>Hope this post helps you to <strong>create Lofted Base/Boss</strong> with Solidworks VBA Macros.</p>

<p>For more such tutorials on <strong>Solidworks VBA Macro</strong>, do come to this blog after sometime.</p>

<p><em>If you like the post then please share it with your friends also.</em></p>

<p><em>Do let me know by you like this post or not!</em></p>

<p><em>Till then, Happy learning!!!</em></p>
:ET