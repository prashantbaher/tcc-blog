I"uX<p>In this post, I tell you about <em>how to create a Polygon through Solidworks VBA Macros</em> in a sketch.</p>

<p>The process is almost identical with previous <strong><a href="/solidworks-macros/create-tangent-arc">Sketch - Create Tangent Arc</a></strong> post.</p>

<p>In this post, I tell you about <code class="language-plaintext highlighter-rouge">CreatePolygon</code> method from <strong>Solidworks</strong> <code class="language-plaintext highlighter-rouge">SketchManager</code> object.</p>

<p>This method is <strong><em>most updated</em></strong> method, I found in <em>Solidworks API Help</em>.</p>

<p>So <strong><em>use this method</em></strong> if you want to create a new <strong>Polygon</strong>.</p>

<hr />

<h2 id="video-of-code-on-youtube">Video of Code on YouTube</h2>

<p>Please see below video on <strong>how to create a Polygon</strong> from Solidworks VBA Macros.</p>

<iframe src="https://www.youtube.com/embed/4hsvqMJmz1E" frameborder="0" allowfullscreen=""></iframe>
<p><br /></p>

<p>Please note that there are <strong>no explaination</strong> in the video.</p>

<p><strong>Explaination</strong> of each line and why we write code this way is given in this post.</p>

<hr />

<h2 id="code-sample">Code Sample</h2>

<p>Below is the <code class="language-plaintext highlighter-rouge">code</code> sample for creating <em>a Polygon</em>.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">Option</span> <span class="n">Explicit</span>

<span class="c1">' Creating variable for Solidworks application</span>
<span class="k">Dim</span> <span class="nv">swApp</span> <span class="ow">As</span> <span class="n">SldWorks</span><span class="p">.</span><span class="n">SldWorks</span>
<span class="c1">' Creating variable for Solidworks document</span>
<span class="k">Dim</span> <span class="nv">swDoc</span> <span class="ow">As</span> <span class="n">SldWorks</span><span class="p">.</span><span class="n">ModelDoc2</span>
<span class="c1">' Boolean Variable</span>
<span class="k">Dim</span> <span class="nv">BoolStatus</span> <span class="ow">As</span> <span class="kt">Boolean</span>
<span class="c1">' Creating variable for Solidworks Sketch Manager</span>
<span class="k">Dim</span> <span class="nv">swSketchManager</span> <span class="ow">As</span> <span class="n">SldWorks</span><span class="p">.</span><span class="n">SketchManager</span>

<span class="c1">' Main function of our VBA program</span>
<span class="k">Sub</span> <span class="nf">main</span><span class="p">()</span>

  <span class="c1">' Setting Solidworks variable to Solidworks application</span>
  <span class="k">Set</span> <span class="n">swApp</span> <span class="o">=</span> <span class="n">Application</span><span class="p">.</span><span class="n">SldWorks</span>
  
  <span class="c1">' Creating string type variable for storing default part location</span>
  <span class="k">Dim</span> <span class="nv">defaultTemplate</span> <span class="ow">As</span> <span class="kt">String</span>
  <span class="c1">' Setting value of this string type variable to "Default part template"</span>
  <span class="n">defaultTemplate</span> <span class="o">=</span> <span class="n">swApp</span><span class="p">.</span><span class="n">GetUserPreferenceStringValue</span><span class="p">(</span><span class="n">swUserPreferenceStringValue_e</span><span class="p">.</span><span class="n">swDefaultTemplatePart</span><span class="p">)</span>

  <span class="c1">' Setting Solidworks document to new part document</span>
  <span class="k">Set</span> <span class="n">swDoc</span> <span class="o">=</span> <span class="n">swApp</span><span class="p">.</span><span class="n">NewDocument</span><span class="p">(</span><span class="n">defaultTemplate</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>

  <span class="c1">' Selecting Front Plane</span>
  <span class="n">BoolStatus</span> <span class="o">=</span> <span class="n">swDoc</span><span class="p">.</span><span class="n">Extension</span><span class="p">.</span><span class="n">SelectByID2</span><span class="p">(</span><span class="s">"Front Plane"</span><span class="p">,</span> <span class="s">"PLANE"</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">False</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">Nothing</span><span class="p">,</span> <span class="n">swSelectOption_e</span><span class="p">.</span><span class="n">swSelectOptionDefault</span><span class="p">)</span>
  
  <span class="c1">' Setting Sketch manager for our sketch</span>
  <span class="k">Set</span> <span class="n">swSketchManager</span> <span class="o">=</span> <span class="n">swDoc</span><span class="p">.</span><span class="n">SketchManager</span>
  
  <span class="c1">' Inserting a sketch into selected plane</span>
  <span class="n">swSketchManager</span><span class="p">.</span><span class="n">InsertSketch</span> <span class="k">True</span>
  
  <span class="c1">' Creating Varient for Polygon</span>
  <span class="k">Dim</span> <span class="nv">myPolygon</span> <span class="ow">As</span> <span class="kt">Variant</span>
  
  <span class="c1">' Creating a Polygon</span>
  <span class="n">myPolygon</span> <span class="o">=</span> <span class="n">swSketchManager</span><span class="p">.</span><span class="n">CreatePolygon</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="k">True</span><span class="p">)</span>
  
  <span class="c1">' De-select the Polygon after creation</span>
  <span class="n">swDoc</span><span class="p">.</span><span class="n">ClearSelection2</span> <span class="k">True</span>
  
  <span class="c1">' Zoom to fit screen in Solidworks Window</span>
  <span class="n">swDoc</span><span class="p">.</span><span class="n">ViewZoomtofit</span>

<span class="k">End</span> <span class="k">Sub</span>
</code></pre></div></div>

<hr />

<h2 id="understanding-the-code">Understanding the Code</h2>

<p>Now let us walk through <em>each line</em> in the above code, and <strong>understand</strong> the meaning of every line.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">Option</span> <span class="n">Explicit</span>
</code></pre></div></div>

<p>This line forces us to define every variable we are going to use.</p>

<p>For more information please visit <strong><a href="/solidworks-macros/open-new-document">Solidworks Macros - Open new Part document</a></strong> post.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Creating variable for Solidworks application</span>
<span class="k">Dim</span> <span class="nv">swApp</span> <span class="ow">As</span> <span class="n">SldWorks</span><span class="p">.</span><span class="n">SldWorks</span>
</code></pre></div></div>

<p>In this line, we are creating a variable which we named as <code class="language-plaintext highlighter-rouge">swApp</code> and the type of this <code class="language-plaintext highlighter-rouge">swApp</code> variable is <code class="language-plaintext highlighter-rouge">SldWorks.SldWorks</code>.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Creating variable for Solidworks document</span>
<span class="k">Dim</span> <span class="nv">swDoc</span> <span class="ow">As</span> <span class="n">SldWorks</span><span class="p">.</span><span class="n">ModelDoc2</span>
</code></pre></div></div>

<p>In this line, we are creating a variable which we named as <code class="language-plaintext highlighter-rouge">swDoc</code> and the type of this <code class="language-plaintext highlighter-rouge">swDoc</code> variable is <code class="language-plaintext highlighter-rouge">SldWorks.ModelDoc2</code>.</p>

<p>Next is our <code class="language-plaintext highlighter-rouge">Sub</code> procedure named as <code class="language-plaintext highlighter-rouge">main</code>. This procedure hold all the <em>statements (instructions)</em> we give to computer.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Setting Solidworks variable to Solidworks application</span>
<span class="k">Set</span> <span class="n">swApp</span> <span class="o">=</span> <span class="n">Application</span><span class="p">.</span><span class="n">SldWorks</span>
</code></pre></div></div>

<p>In this line, we are setting the value of our Solidworks variable <code class="language-plaintext highlighter-rouge">swApp</code> which we defined earlier to Solidworks application.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Creating string type variable for storing default part location</span>
<span class="k">Dim</span> <span class="nv">defaultTemplate</span> <span class="ow">As</span> <span class="kt">String</span>
<span class="c1">' Setting value of this string type variable to "Default part template"</span>
<span class="n">defaultTemplate</span> <span class="o">=</span> <span class="n">swApp</span><span class="p">.</span><span class="n">GetUserPreferenceStringValue</span><span class="p">(</span><span class="n">swUserPreferenceStringValue_e</span><span class="p">.</span><span class="n">swDefaultTemplatePart</span><span class="p">)</span>
</code></pre></div></div>

<p>In 1st statement of above example, we are defining a variable of <code class="language-plaintext highlighter-rouge">string</code> type and named it as <code class="language-plaintext highlighter-rouge">defaultTemplate</code>.</p>

<p>This variable <code class="language-plaintext highlighter-rouge">defaultTemplate</code>, holds the location the location of <strong>Default Part Template</strong>.</p>

<p>In 2nd line of above example. we assign value to our newly define <code class="language-plaintext highlighter-rouge">defaultTemplate</code> variable.</p>

<p>We assign the value by using a <em>Method</em> named <code class="language-plaintext highlighter-rouge">GetUserPreferenceStringValue()</code>.</p>

<p>This method is a part of our main Solidworks variable <code class="language-plaintext highlighter-rouge">swApp</code>.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Setting Solidworks document to new part document</span>
<span class="k">Set</span> <span class="n">swDoc</span> <span class="o">=</span> <span class="n">swApp</span><span class="p">.</span><span class="n">NewDocument</span><span class="p">(</span><span class="n">defaultTemplate</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
</code></pre></div></div>

<p>In this line, we set the value of our <code class="language-plaintext highlighter-rouge">swDoc</code> variable to new document.</p>

<p>For <strong>more detailed information</strong> about above lines please visit <strong><a href="/solidworks-macros/open-new-document">Solidworks Macros - Open new Part document</a></strong> post.</p>

<p>I have discussed them <strong>thoroghly</strong> in <strong><a href="/solidworks-macros/open-new-document">Solidworks Macros - Open new Part document</a></strong> post, so do checkout this post if you don’t understand above code.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Boolean Variable</span>
<span class="k">Dim</span> <span class="nv">BoolStatus</span> <span class="ow">As</span> <span class="kt">Boolean</span>

<span class="c1">' Selecting Front Plane</span>
<span class="n">BoolStatus</span> <span class="o">=</span> <span class="n">swDoc</span><span class="p">.</span><span class="n">Extension</span><span class="p">.</span><span class="n">SelectByID2</span><span class="p">(</span><span class="s">"Front Plane"</span><span class="p">,</span> <span class="s">"PLANE"</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">False</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">Nothing</span><span class="p">,</span> <span class="n">swSelectOption_e</span><span class="p">.</span><span class="n">swSelectOptionDefault</span><span class="p">)</span>
</code></pre></div></div>

<p>In 1st line, we create a variable named <code class="language-plaintext highlighter-rouge">BoolStatus</code> as <code class="language-plaintext highlighter-rouge">Boolean</code> object.</p>

<p>In next line, we select the <em>front plane</em> by using <code class="language-plaintext highlighter-rouge">SelectByID2</code> method from <code class="language-plaintext highlighter-rouge">Extension</code> object.</p>

<p>For more information about selection method please visit <strong><a href="/solidworks-macros/select-plane-from-tree">Solidworks Macros - Selection Methods</a></strong> post.</p>

<p>I have discussed about different <em>Selection methods</em> in details in <strong><a href="/solidworks-macros/select-plane-from-tree">Soldworks Macros - Selection Methods</a></strong> post, so do visit this post for more <em>Selection methods</em>.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Creating variable for Solidworks Sketch Manager</span>
<span class="k">Dim</span> <span class="nv">swSketchManager</span> <span class="ow">As</span> <span class="n">SldWorks</span><span class="p">.</span><span class="n">SketchManager</span>
</code></pre></div></div>

<p>In above line, we create variable <code class="language-plaintext highlighter-rouge">swSketchManager</code> for <strong>Solidworks Sketch Manager</strong>.</p>

<p>As the name suggested, a <strong>Sketch Manager</strong> holds variours methods and properties to manage <em>Sketches</em>.</p>

<p>To see methods and properties related to SketchManager object, please visit <strong><a href="https://help.solidworks.com/2017/english/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.ISketchManager_members.html">this page of Solidworks API Help</a></strong></p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Setting Sketch manager for our sketch</span>
<span class="k">Set</span> <span class="n">swSketchManager</span> <span class="o">=</span> <span class="n">swDoc</span><span class="p">.</span><span class="n">SketchManager</span>
</code></pre></div></div>

<p>In above line, we set the <strong>Sketch manager</strong> variable to current document’s sketch manager.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Inserting a sketch into selected plane</span>
<span class="n">swSketchManager</span><span class="p">.</span><span class="n">InsertSketch</span> <span class="k">True</span>
</code></pre></div></div>

<p>In above line, we use <code class="language-plaintext highlighter-rouge">InsertSketch</code> method of <em>SketchManager</em> and give <code class="language-plaintext highlighter-rouge">True</code> value.</p>

<p>This method allows us to insert a sketch in selected plane.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Creating Varient for Polygon</span>
<span class="k">Dim</span> <span class="nv">myPolygon</span> <span class="ow">As</span> <span class="kt">Variant</span>

<span class="c1">' Creating a Polygon</span>
<span class="n">myPolygon</span> <span class="o">=</span> <span class="n">swSketchManager</span><span class="p">.</span><span class="n">CreatePolygon</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="k">True</span><span class="p">)</span>
</code></pre></div></div>

<p>In above sample code, we 1st create a variable named <code class="language-plaintext highlighter-rouge">myPolygon</code> of type <code class="language-plaintext highlighter-rouge">Variant</code>.</p>

<p>In 2nd line, we <strong>get</strong> the value of <em>Variant</em> variable <code class="language-plaintext highlighter-rouge">myPolygon</code>.</p>

<p>We get this value from <code class="language-plaintext highlighter-rouge">CreatePolygon</code> method which is inside the <code class="language-plaintext highlighter-rouge">swSketchManager</code> variable.</p>

<p><code class="language-plaintext highlighter-rouge">swSketchManager</code> variable is a type of <strong>SketchManager</strong>, hence we used <code class="language-plaintext highlighter-rouge">CreatePolygon</code> method from <strong>SketchManager</strong>.</p>

<p>This <code class="language-plaintext highlighter-rouge">CreatePolygon</code> method takes following parameters as explained:</p>

<ul>
  <li>
    <p><em>XC</em> : X coordinate of the center point, of the polygon</p>
  </li>
  <li>
    <p><em>YC</em> : Y coordinate of the center point, of the polygon</p>
  </li>
  <li>
    <p><em>ZC</em> : Z coordinate of the center point, of the polygon</p>
  </li>
  <li>
    <p><em>Xp</em> : X coordinate of the vertex point, of the polygon</p>
  </li>
  <li>
    <p><em>Yp</em> : Y coordinate of the vertex point, of the polygon</p>
  </li>
  <li>
    <p><em>Zp</em> : Z coordinate of the vertex point, of the polygon</p>
  </li>
  <li>
    <p><em>Sides</em> : Number of sides in the polygon</p>
  </li>
  <li>
    <p><em>Inscribed</em> : <code class="language-plaintext highlighter-rouge">True</code> to show an inscribed construction circle, <code class="language-plaintext highlighter-rouge">False</code> to show a circumscribed construction circle</p>
  </li>
</ul>

<p>For creating a <em>Polygon</em>, I used (0, 0, 0) as the <em>Center point</em>, which is <em>origin point</em> of our Sketch.</p>

<p>For <em>Vertex point</em> of <em>Polygon</em>, I used (1, 0, 0) which is 1 point distance in X-direction.</p>

<p>For <em>Number of sides</em> in the <em>Polygon</em>, I used <em>6</em> which represent <strong>a Hexagon</strong>.</p>

<p>Below Image show when <em>Inscribed</em> option is <code class="language-plaintext highlighter-rouge">True</code> and show an <em>inscribed construction circle</em>.</p>

<p><img src="/assets/Solidworks_Images/arcs/polygon-inscribed-circle-true.png" alt="polygon-inscribed-circle-true" /></p>

<p>Below Image show when <em>Inscribed</em> option is <code class="language-plaintext highlighter-rouge">False</code>and show a <em>circumscribed construction circle</em>.</p>

<p><img src="/assets/Solidworks_Images/arcs/polygon-inscribed-circle-false.png" alt="polygon-inscribed-circle-false" /></p>

<p>This <code class="language-plaintext highlighter-rouge">CreatePolygon</code> method returns <strong>an array</strong> of <em>sketch segments</em> that represent the sides created for this <em>Polygon</em>.</p>

<p>A <em>Sketch Segment</em> can represent a sketch arc, line, ellipse, parabola or spline.</p>

<p>Sketch Segment has <code class="language-plaintext highlighter-rouge">ISketchSegment</code> Interface, which provides functions that are generic to every type of sketch segment.</p>

<p>For example, every sketch segment has an ID and can be programmatically selected.</p>

<p>Therefore, the <code class="language-plaintext highlighter-rouge">ISketchSegment</code> interface provides functions to obtain the ID and to select the item.</p>

<h3 id="note">NOTE</h3>

<p>It is <strong><em>very important</em></strong> to remember that, when you give distance or any other numeric value in <strong>Solidworks API</strong>, Solidworks takes that numeric value in <strong><em>Meter only</em></strong>.</p>

<p><em>Solidworks API</em> does not care about your application’s Unit systems.</p>

<p>For example, I works in ANSI system means “inches” for distance.</p>

<p>But when I used Solidworks API through <em>VBA macros</em> or <em>C#</em>, I have to use <strong>converted</strong> numeric values.</p>

<p>Because Solidworks API output the distance in <strong>Meter</strong> only; which is not my requirement.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' De-select the Polygon after creation</span>
<span class="n">swDoc</span><span class="p">.</span><span class="n">ClearSelection2</span> <span class="k">True</span>
</code></pre></div></div>

<p>In the this line of code, we de-select the created Polygon.</p>

<p>For de-selecting, we use <code class="language-plaintext highlighter-rouge">ClearSelection2</code> method from our Solidworks document variable <code class="language-plaintext highlighter-rouge">swDoc</code>.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Zoom to fit screen in Solidworks Window</span>
<span class="n">swDoc</span><span class="p">.</span><span class="n">ViewZoomtofit</span>
</code></pre></div></div>

<p>In this last line we use <em>zoom to fit</em> command.</p>

<p>For Zoom to fit, we use <code class="language-plaintext highlighter-rouge">ViewZoomtofit</code> method from our Solidworks document variable <code class="language-plaintext highlighter-rouge">swDoc</code>.</p>

<p>Hope this post helps you to <em>create a Polygon</em> in Sketches with Solidworks VB Macros.</p>

<p>For more such tutorials on <strong>Solidworks VBA Macros</strong>, do come to this blog after sometime.</p>

<p>Till then, Happy learning!!!</p>

:ET