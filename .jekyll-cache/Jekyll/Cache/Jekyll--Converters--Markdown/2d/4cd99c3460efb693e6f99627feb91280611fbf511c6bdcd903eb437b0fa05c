I"·¯<h2 id="objective">Objective</h2>

<p>In this post, I tell you about <em>how to create Revolved Boss/Base through Solidworks VBA Macros</em> in a sketch.</p>

<p>In this post, I tell you about <code class="language-plaintext highlighter-rouge">FeatureRevolve2</code> method from <strong>Solidworks</strong> <code class="language-plaintext highlighter-rouge">FeatureManager</code> object.</p>

<p>This method is <strong><em>most updated</em></strong> method, I found in <em>Solidworks API Help</em>.</p>

<p>So <strong><em>use this method</em></strong> if you want to create a new <strong>Revolved Boss/Base</strong>.</p>

<h2 id="video-of-code-on-youtube">Video of Code on YouTube</h2>

<p>Please see below video on <strong>how to create Revolved Boss/Base</strong> from Solidworks VBA Macros.</p>

<iframe src="https://www.youtube.com/embed/oOsEvLge_0s" frameborder="0" allowfullscreen=""></iframe>
<p><br /></p>

<p>Please note that there are <strong>no explaination</strong> in the video.</p>

<p><strong>Explaination</strong> of each line and why we write code this way is given in this post.</p>

<h2 id="code-sample">Code Sample</h2>

<p>Below is the <code class="language-plaintext highlighter-rouge">code</code> sample for creating <em>Revolved Boss/Base</em>.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">Option</span> <span class="n">Explicit</span>

<span class="c1">' Create variable for Solidworks application</span>
<span class="k">Dim</span> <span class="nv">swApp</span> <span class="ow">As</span> <span class="n">SldWorks</span><span class="p">.</span><span class="n">SldWorks</span>
<span class="c1">' Create variable for Solidworks document</span>
<span class="k">Dim</span> <span class="nv">swDoc</span> <span class="ow">As</span> <span class="n">SldWorks</span><span class="p">.</span><span class="n">ModelDoc2</span>
<span class="c1">' Creating variable for Solidworks Feature</span>
<span class="k">Dim</span> <span class="nv">swFeature</span> <span class="ow">As</span> <span class="n">SldWorks</span><span class="p">.</span><span class="n">Feature</span>
<span class="c1">' Boolean Variable</span>
<span class="k">Dim</span> <span class="nv">boolStatus</span> <span class="ow">As</span> <span class="kt">Boolean</span>

<span class="c1">' Revolve Boss/Extrude program</span>
<span class="k">Sub</span> <span class="nf">main</span><span class="p">()</span>

  <span class="c1">' Setting Solidworks variable to current application</span>
  <span class="k">Set</span> <span class="n">swApp</span> <span class="o">=</span> <span class="n">Application</span><span class="p">.</span><span class="n">SldWorks</span>
  
  <span class="c1">' Check if Solidworks is opened or not</span>
  <span class="k">If</span> <span class="n">swApp</span> <span class="ow">Is</span> <span class="k">Nothing</span> <span class="k">Then</span>
      <span class="n">MsgBox</span> <span class="p">(</span><span class="s">"Solidworks is not opened"</span><span class="p">)</span>
      <span class="k">Exit</span> <span class="k">Sub</span>
  <span class="nf">End</span> <span class="k">If</span>
  
  <span class="c1">' Setting Solidworks document variable to opened part document</span>
  <span class="k">Set</span> <span class="n">swDoc</span> <span class="o">=</span> <span class="n">swApp</span><span class="p">.</span><span class="n">ActiveDoc</span>
  
  <span class="c1">' Check if Solidworks document is opened or not</span>
  <span class="k">If</span> <span class="n">swDoc</span> <span class="ow">Is</span> <span class="k">Nothing</span> <span class="k">Then</span>
      <span class="n">MsgBox</span> <span class="p">(</span><span class="s">"Solidworks document is not opened. Please open a document."</span><span class="p">)</span>
      <span class="k">Exit</span> <span class="k">Sub</span>
  <span class="nf">End</span> <span class="k">If</span>
  
  <span class="c1">'-----------------------BELOW IS THE SOLUTION----------------------------------------</span>

  <span class="c1">' Local variables used as Conversion Factors</span>
  <span class="k">Dim</span> <span class="nv">LengthConversionFactor</span> <span class="ow">As</span> <span class="kt">Double</span>
  <span class="k">Dim</span> <span class="nv">AngleConversionFactor</span> <span class="ow">As</span> <span class="kt">Double</span>

  <span class="c1">' Use a Select Case, to get the length of active Unit and set the different factors</span>
  <span class="k">Select</span> <span class="k">Case</span> <span class="n">swDoc</span><span class="p">.</span><span class="n">GetUnits</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>       <span class="c1">' GetUnits function gives us, active unit</span>
    
    <span class="k">Case</span> <span class="n">swMETER</span>    <span class="c1">' If length is in Meter</span>
      <span class="n">LengthConversionFactor</span> <span class="o">=</span> <span class="mi">1</span>
      <span class="n">AngleConversionFactor</span> <span class="o">=</span> <span class="mi">1</span>
    
    <span class="k">Case</span> <span class="n">swMM</span>       <span class="c1">' If length is in MM</span>
      <span class="n">LengthConversionFactor</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">/</span> <span class="mi">1000</span>
      <span class="n">AngleConversionFactor</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">*</span> <span class="mf">0.01745329</span>
    
    <span class="k">Case</span> <span class="n">swCM</span>       <span class="c1">' If length is in CM</span>
      <span class="n">LengthConversionFactor</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">/</span> <span class="mi">100</span>
      <span class="n">AngleConversionFactor</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">*</span> <span class="mf">0.01745329</span>
    
    <span class="k">Case</span> <span class="n">swINCHES</span>   <span class="c1">' If length is in INCHES</span>
      <span class="n">LengthConversionFactor</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">*</span> <span class="mf">0.0254</span>
      <span class="n">AngleConversionFactor</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">*</span> <span class="mf">0.01745329</span>
    
    <span class="k">Case</span> <span class="n">swFEET</span>     <span class="c1">' If length is in FEET</span>
      <span class="n">LengthConversionFactor</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">*</span> <span class="p">(</span><span class="mf">0.0254</span> <span class="o">*</span> <span class="mi">12</span><span class="p">)</span>
      <span class="n">AngleConversionFactor</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">*</span> <span class="mf">0.01745329</span>
    
    <span class="k">Case</span> <span class="n">swFEETINCHES</span>     <span class="c1">' If length is in FEET &amp; INCHES</span>
      <span class="n">LengthConversionFactor</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">*</span> <span class="mf">0.0254</span>  <span class="c1">' For length we use sama as Inch</span>
      <span class="n">AngleConversionFactor</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">*</span> <span class="mf">0.01745329</span>
    
    <span class="k">Case</span> <span class="n">swANGSTROM</span>        <span class="c1">' If length is in ANGSTROM</span>
      <span class="n">LengthConversionFactor</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">/</span> <span class="mi">10000000000</span><span class="p">#</span>
      <span class="n">AngleConversionFactor</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">*</span> <span class="mf">0.01745329</span>
    
    <span class="k">Case</span> <span class="n">swNANOMETER</span>       <span class="c1">' If length is in NANOMETER</span>
      <span class="n">LengthConversionFactor</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">/</span> <span class="mi">1000000000</span>
      <span class="n">AngleConversionFactor</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">*</span> <span class="mf">0.01745329</span>
    
    <span class="k">Case</span> <span class="n">swMICRON</span>       <span class="c1">' If length is in MICRON</span>
      <span class="n">LengthConversionFactor</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">/</span> <span class="mi">1000000</span>
      <span class="n">AngleConversionFactor</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">*</span> <span class="mf">0.01745329</span>
  <span class="k">End</span> <span class="k">Select</span>
  
  <span class="c1">'----------------------------------------------------------------</span>
  
  <span class="c1">' Select Sketch 1 in opened part document</span>
  <span class="n">boolStatus</span> <span class="o">=</span> <span class="n">swDoc</span><span class="p">.</span><span class="n">Extension</span><span class="p">.</span><span class="n">SelectByID2</span><span class="p">(</span><span class="s">"Sketch1"</span><span class="p">,</span> <span class="s">"SKETCH"</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">True</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">Nothing</span><span class="p">,</span> <span class="n">swSelectOption_e</span><span class="p">.</span><span class="n">swSelectOptionDefault</span><span class="p">)</span>
  
  <span class="c1">' Check if failed to select sketch 1</span>
  <span class="k">If</span> <span class="n">boolStatus</span> <span class="o">=</span> <span class="k">False</span> <span class="k">Then</span>
      <span class="n">MsgBox</span> <span class="p">(</span><span class="s">"Failed to select sketch 1."</span><span class="p">)</span>
      <span class="k">Exit</span> <span class="k">Sub</span>
  <span class="nf">End</span> <span class="k">If</span>    
  
  <span class="c1">' Create Revolve Feature</span>
  <span class="k">Set</span> <span class="n">swFeature</span> <span class="o">=</span> <span class="n">swDoc</span><span class="p">.</span><span class="n">FeatureManager</span><span class="p">.</span><span class="n">FeatureRevolve2</span><span class="p">(</span><span class="k">True</span><span class="p">,</span> <span class="k">True</span><span class="p">,</span> <span class="k">False</span><span class="p">,</span> <span class="k">False</span><span class="p">,</span> <span class="k">False</span><span class="p">,</span> <span class="k">True</span><span class="p">,</span> <span class="n">swEndConditions_e</span><span class="p">.</span><span class="n">swEndCondBlind</span><span class="p">,</span> <span class="n">swEndConditions_e</span><span class="p">.</span><span class="n">swEndCondBlind</span><span class="p">,</span> <span class="n">AngleConversionFactor</span> <span class="o">*</span> <span class="mi">360</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">False</span><span class="p">,</span> <span class="k">False</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">swThinWallType_e</span><span class="p">.</span><span class="n">swThinWallOneDirection</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">True</span><span class="p">,</span> <span class="k">False</span><span class="p">,</span> <span class="k">True</span><span class="p">)</span>
  
  <span class="c1">' Check if Revolve Feature creates or not</span>
  <span class="k">If</span> <span class="n">swFeature</span> <span class="ow">Is</span> <span class="k">Nothing</span> <span class="k">Then</span>
      <span class="n">MsgBox</span> <span class="p">(</span><span class="s">"Failed to create Revolve Feature."</span><span class="p">)</span>
      <span class="k">Exit</span> <span class="k">Sub</span>
  <span class="nf">End</span> <span class="k">If</span>
    
<span class="k">End</span> <span class="k">Sub</span>
</code></pre></div></div>

<h2 id="prerequisite">Prerequisite</h2>

<p>In this article there are some <em>prerequisite</em>.</p>

<p>We are <strong>not</strong> creating sketches from code but we use <strong>existing sketch</strong> to <em>create Revolve feature</em>.</p>

<p>Also, we will apply checks in this article, so that code we write should be error free.</p>

<h2 id="understanding-the-code">Understanding the Code</h2>

<p>Now let us walk through <strong>each line</strong> in the above code, and <strong>understand</strong> the meaning and purpose of every line.</p>

<p>I also give some link so that you can go through them if there are anything I explained in previous posts.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">Option</span> <span class="n">Explicit</span>
</code></pre></div></div>

<p>This line forces us to define every variable we are going to use.</p>

<p>For more information please visit <strong><a href="/solidworks-macros/open-new-document">Solidworks Macros - Open new Part document</a></strong> post.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Create variable for Solidworks application</span>
<span class="k">Dim</span> <span class="nv">swApp</span> <span class="ow">As</span> <span class="n">SldWorks</span><span class="p">.</span><span class="n">SldWorks</span>
</code></pre></div></div>

<p>In this line, we create a variable which we named as <code class="language-plaintext highlighter-rouge">swApp</code> and the type of this <code class="language-plaintext highlighter-rouge">swApp</code> variable is <code class="language-plaintext highlighter-rouge">SldWorks.SldWorks</code>.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Create variable for Solidworks document</span>
<span class="k">Dim</span> <span class="nv">swDoc</span> <span class="ow">As</span> <span class="n">SldWorks</span><span class="p">.</span><span class="n">ModelDoc2</span>
</code></pre></div></div>

<p>In this line, we create a variable which we named as <code class="language-plaintext highlighter-rouge">swDoc</code> and the type of this <code class="language-plaintext highlighter-rouge">swDoc</code> variable is <code class="language-plaintext highlighter-rouge">SldWorks.ModelDoc2</code>.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Creating variable for Solidworks Feature</span>
<span class="k">Dim</span> <span class="nv">swFeature</span> <span class="ow">As</span> <span class="n">SldWorks</span><span class="p">.</span><span class="n">Feature</span>
</code></pre></div></div>

<p>In this line, we Create a variable which we named as <code class="language-plaintext highlighter-rouge">swFeature</code> and the type of this <code class="language-plaintext highlighter-rouge">swFeature</code> variable is <code class="language-plaintext highlighter-rouge">SldWorks.Feature</code>.</p>

<p>We create variable <code class="language-plaintext highlighter-rouge">swFeature</code> for <strong>Solidworks Feature</strong>.</p>

<p>To see methods and properties related to <code class="language-plaintext highlighter-rouge">Feature</code> object, please visit <strong><a href="https://help.solidworks.com/2019/english/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.IFeature_members.html">this page of Solidworks API Help</a></strong></p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Boolean Variable</span>
<span class="k">Dim</span> <span class="nv">BoolStatus</span> <span class="ow">As</span> <span class="kt">Boolean</span>
</code></pre></div></div>

<p>In this line, we create a variable named <code class="language-plaintext highlighter-rouge">BoolStatus</code> as <code class="language-plaintext highlighter-rouge">Boolean</code> object type.</p>

<p>These all are our global variables.</p>

<p>As you can see in code sample, they are <strong>Solidworks API Objects</strong>.</p>

<p>So basically I group all the <strong>Solidworks API Objects</strong> in one place.</p>

<p>I have also place <code class="language-plaintext highlighter-rouge">boolean</code> type object at top also, because after certain point we will <em>need</em> this variable frequently.</p>

<p>Thus, I have started placing it here.</p>

<p>Next is our <code class="language-plaintext highlighter-rouge">Sub</code> procedure which has name of <code class="language-plaintext highlighter-rouge">main</code>.</p>

<p>This procedure hold all the <em>statements (instructions)</em> we give to computer.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Set Solidworks variable to Solidworks application</span>
<span class="k">Set</span> <span class="n">swApp</span> <span class="o">=</span> <span class="n">Application</span><span class="p">.</span><span class="n">SldWorks</span>
</code></pre></div></div>

<p>In this line, we set the value of our Solidworks variable <code class="language-plaintext highlighter-rouge">swApp</code>; which we define earlier; to Solidworks application.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Check if Solidworks is opened or not</span>
<span class="k">If</span> <span class="n">swApp</span> <span class="ow">Is</span> <span class="k">Nothing</span> <span class="k">Then</span>
    <span class="n">MsgBox</span> <span class="p">(</span><span class="s">"Solidworks is not opened"</span><span class="p">)</span>
    <span class="k">Exit</span> <span class="k">Sub</span>
<span class="nf">End</span> <span class="k">If</span>
</code></pre></div></div>

<p>In above line of code, we use an <strong><a href="/vba/if-then-structure-select-case/">IF statement</a></strong> to check if Solidworks application variable is <em>successfully assigned</em> to current Solidworks application.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Setting Solidworks document variable to opened part document</span>
<span class="k">Set</span> <span class="n">swDoc</span> <span class="o">=</span> <span class="n">swApp</span><span class="p">.</span><span class="n">ActiveDoc</span>
</code></pre></div></div>

<p>In above line of code, we set Solidwors document <code class="language-plaintext highlighter-rouge">swDoc</code> variable to currently open part document.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Check if Solidworks document is opened or not</span>
<span class="k">If</span> <span class="n">swDoc</span> <span class="ow">Is</span> <span class="k">Nothing</span> <span class="k">Then</span>
    <span class="n">MsgBox</span> <span class="p">(</span><span class="s">"Solidworks document is not opened. Please open a document."</span><span class="p">)</span>
    <span class="k">Exit</span> <span class="k">Sub</span>
<span class="nf">End</span> <span class="k">If</span>
</code></pre></div></div>

<p>In above line of code, we use an <strong><a href="/vba/if-then-structure-select-case/">IF statement</a></strong> to check if Solidworks document <code class="language-plaintext highlighter-rouge">swDoc</code> is opened.</p>

<p>If Solidworks document is not opened then code execute inside the code and inform the user by a <strong><a href="/vba/msgBox-function/">Message Window</a></strong>.</p>

<p>After showing message our program <strong>exit</strong> from here itself.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">'-----------------------BELOW IS THE SOLUTION----------------------------------------</span>

<span class="c1">' Local variables used as Conversion Factors</span>
<span class="k">Dim</span> <span class="nv">LengthConversionFactor</span> <span class="ow">As</span> <span class="kt">Double</span>
<span class="k">Dim</span> <span class="nv">AngleConversionFactor</span> <span class="ow">As</span> <span class="kt">Double</span>

<span class="c1">' Use a Select Case, to get the length of active Unit and set the different factors</span>
<span class="k">Select</span> <span class="k">Case</span> <span class="n">swDoc</span><span class="p">.</span><span class="n">GetUnits</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>       <span class="c1">' GetUnits function gives us, active unit</span>
  
  <span class="k">Case</span> <span class="n">swMETER</span>    <span class="c1">' If length is in Meter</span>
    <span class="n">LengthConversionFactor</span> <span class="o">=</span> <span class="mi">1</span>
    <span class="n">AngleConversionFactor</span> <span class="o">=</span> <span class="mi">1</span>
  
  <span class="k">Case</span> <span class="n">swMM</span>       <span class="c1">' If length is in MM</span>
    <span class="n">LengthConversionFactor</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">/</span> <span class="mi">1000</span>
    <span class="n">AngleConversionFactor</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">*</span> <span class="mf">0.01745329</span>
  
  <span class="k">Case</span> <span class="n">swCM</span>       <span class="c1">' If length is in CM</span>
    <span class="n">LengthConversionFactor</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">/</span> <span class="mi">100</span>
    <span class="n">AngleConversionFactor</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">*</span> <span class="mf">0.01745329</span>
  
  <span class="k">Case</span> <span class="n">swINCHES</span>   <span class="c1">' If length is in INCHES</span>
    <span class="n">LengthConversionFactor</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">*</span> <span class="mf">0.0254</span>
    <span class="n">AngleConversionFactor</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">*</span> <span class="mf">0.01745329</span>
  
  <span class="k">Case</span> <span class="n">swFEET</span>     <span class="c1">' If length is in FEET</span>
    <span class="n">LengthConversionFactor</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">*</span> <span class="p">(</span><span class="mf">0.0254</span> <span class="o">*</span> <span class="mi">12</span><span class="p">)</span>
    <span class="n">AngleConversionFactor</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">*</span> <span class="mf">0.01745329</span>
  
  <span class="k">Case</span> <span class="n">swFEETINCHES</span>     <span class="c1">' If length is in FEET &amp; INCHES</span>
    <span class="n">LengthConversionFactor</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">*</span> <span class="mf">0.0254</span>  <span class="c1">' For length we use sama as Inch</span>
    <span class="n">AngleConversionFactor</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">*</span> <span class="mf">0.01745329</span>
  
  <span class="k">Case</span> <span class="n">swANGSTROM</span>        <span class="c1">' If length is in ANGSTROM</span>
    <span class="n">LengthConversionFactor</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">/</span> <span class="mi">10000000000</span><span class="p">#</span>
    <span class="n">AngleConversionFactor</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">*</span> <span class="mf">0.01745329</span>
  
  <span class="k">Case</span> <span class="n">swNANOMETER</span>       <span class="c1">' If length is in NANOMETER</span>
    <span class="n">LengthConversionFactor</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">/</span> <span class="mi">1000000000</span>
    <span class="n">AngleConversionFactor</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">*</span> <span class="mf">0.01745329</span>
  
  <span class="k">Case</span> <span class="n">swMICRON</span>       <span class="c1">' If length is in MICRON</span>
    <span class="n">LengthConversionFactor</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">/</span> <span class="mi">1000000</span>
    <span class="n">AngleConversionFactor</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">*</span> <span class="mf">0.01745329</span>
<span class="k">End</span> <span class="k">Select</span>

<span class="c1">'----------------------------------------------------------------</span>
</code></pre></div></div>

<p>In above line of code, we get and update unit conversion variable as per document unit.</p>

<p>For more detail about why we are using this code sample, please visit <strong><a href="/solidworks-macros/unit-correction/">Solidworks Macro - Fix Unit Issue</a></strong> article.</p>

<p>In this line, we set the value of our variable to new document.</p>

<p>For <strong>detailed information</strong> about these lines please visit <strong><a href="/solidworks-macros/open-new-document">Solidworks Macros - Open new Part document</a></strong> post.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Select Sketch 1 in opened part document</span>
<span class="n">boolStatus</span> <span class="o">=</span> <span class="n">swDoc</span><span class="p">.</span><span class="n">Extension</span><span class="p">.</span><span class="n">SelectByID2</span><span class="p">(</span><span class="s">"Sketch1"</span><span class="p">,</span> <span class="s">"SKETCH"</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">True</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">Nothing</span><span class="p">,</span> <span class="n">swSelectOption_e</span><span class="p">.</span><span class="n">swSelectOptionDefault</span><span class="p">)</span>
</code></pre></div></div>

<p>In above line, we select the <em>Sketch1</em> by using <code class="language-plaintext highlighter-rouge">SelectByID2</code> method from <code class="language-plaintext highlighter-rouge">Extension</code> object.</p>

<p>For more information about selection method please visit <strong><a href="/solidworks-macros/select-plane-from-tree">Solidworks Macros - Selection Methods</a></strong> post.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Check if failed to select sketch 1</span>
<span class="k">If</span> <span class="n">boolStatus</span> <span class="o">=</span> <span class="k">False</span> <span class="k">Then</span>
    <span class="n">MsgBox</span> <span class="p">(</span><span class="s">"Failed to select sketch 1."</span><span class="p">)</span>
    <span class="k">Exit</span> <span class="k">Sub</span>
<span class="nf">End</span> <span class="k">If</span> 
</code></pre></div></div>

<p>In above line of code, we use an <strong><a href="/vba/if-then-structure-select-case/">IF statement</a></strong> to check if we able to select the <code class="language-plaintext highlighter-rouge">Sketch1</code> or not.</p>

<p>If we failed to select then inform the user by a <strong><a href="/vba/msgBox-function/">Message Window</a></strong>.</p>

<p>After showing error message our program <strong>exit</strong> from here itself.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Create Revolve Feature</span>
<span class="k">Set</span> <span class="n">swFeature</span> <span class="o">=</span> <span class="n">swDoc</span><span class="p">.</span><span class="n">FeatureManager</span><span class="p">.</span><span class="n">FeatureRevolve2</span><span class="p">(</span><span class="k">True</span><span class="p">,</span> <span class="k">True</span><span class="p">,</span> <span class="k">False</span><span class="p">,</span> <span class="k">False</span><span class="p">,</span> <span class="k">False</span><span class="p">,</span> <span class="k">True</span><span class="p">,</span> <span class="n">swEndConditions_e</span><span class="p">.</span><span class="n">swEndCondBlind</span><span class="p">,</span> <span class="n">swEndConditions_e</span><span class="p">.</span><span class="n">swEndCondBlind</span><span class="p">,</span> <span class="n">AngleConversionFactor</span> <span class="o">*</span> <span class="mi">360</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">False</span><span class="p">,</span> <span class="k">False</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">swThinWallType_e</span><span class="p">.</span><span class="n">swThinWallOneDirection</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">True</span><span class="p">,</span> <span class="k">False</span><span class="p">,</span> <span class="k">True</span><span class="p">)</span>
</code></pre></div></div>

<p>In above line of code we set the value of variable <code class="language-plaintext highlighter-rouge">swFeature</code> by <code class="language-plaintext highlighter-rouge">FeatureRevolve2</code> method.</p>

<p><code class="language-plaintext highlighter-rouge">FeatureRevolve2</code> method is part of <code class="language-plaintext highlighter-rouge">FeatureManager</code> object.</p>

<p>This <code class="language-plaintext highlighter-rouge">FeatureManager</code> is again part of <code class="language-plaintext highlighter-rouge">swDoc</code> variable i.e. <code class="language-plaintext highlighter-rouge">ModelDoc2</code> object.</p>

<h2 id="method-parameters-details">Method Parameters Details</h2>

<p>This <code class="language-plaintext highlighter-rouge">FeatureRevolve2</code> method takes following parameters as explained:</p>

<ul>
  <li>
    <p><strong>SingleDir</strong> - <em><code class="language-plaintext highlighter-rouge">True</code> if the revolve is in one direction, <code class="language-plaintext highlighter-rouge">False</code> if in both directions</em>.</p>
  </li>
  <li>
    <p><strong>IsSolid</strong> - <em><code class="language-plaintext highlighter-rouge">True</code> if this is a <strong>Solid</strong> revolve feature, <code class="language-plaintext highlighter-rouge">False</code> if not.</em></p>
  </li>
  <li>
    <p><strong>IsThin</strong> - <em><code class="language-plaintext highlighter-rouge">True</code> if this is a <strong>Thin</strong> revolve feature, <code class="language-plaintext highlighter-rouge">False</code> if not.</em></p>
  </li>
  <li>
    <p><strong>IsCut</strong> - <em><code class="language-plaintext highlighter-rouge">True</code> if this is a <strong>Cut</strong> revolve feature, <code class="language-plaintext highlighter-rouge">False</code> if not.</em></p>
  </li>
  <li>
    <p><strong>ReverseDir</strong> - <em><code class="language-plaintext highlighter-rouge">True</code> reverses the angle of the revolution, <code class="language-plaintext highlighter-rouge">False</code> does not; only applies if <code class="language-plaintext highlighter-rouge">Dir1Type</code> is not <code class="language-plaintext highlighter-rouge">swEndConditions_e.swEndCondMidPlane</code>.</em></p>
  </li>
  <li>
    <p><strong>BothDirectionUpToSameEntity</strong> - <em><code class="language-plaintext highlighter-rouge">True</code> if the revolve is up to the same entity in both directions, <code class="language-plaintext highlighter-rouge">False</code> if not; only applies if <code class="language-plaintext highlighter-rouge">SingleDir</code> is <code class="language-plaintext highlighter-rouge">False</code> and <code class="language-plaintext highlighter-rouge">Dir1Type</code> and <code class="language-plaintext highlighter-rouge">Dir2Type</code> are <code class="language-plaintext highlighter-rouge">swEndConditions_e.swEndCondUpToVertex</code>, <code class="language-plaintext highlighter-rouge">swEndConditions_e.swEndCondUpToSurface</code>, or <code class="language-plaintext highlighter-rouge">swEndConditions_e.swEndCondOffsetFromSurface</code>).</em></p>
  </li>
  <li>
    <p><strong>Dir1Type</strong> - <em>Revolve end condition in <strong>direction 1</strong> as defined in <code class="language-plaintext highlighter-rouge">swEndConditions_e</code>.</em></p>
  </li>
</ul>

<p>End Conditions has following enumeration values:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  - `swEndCondBlind` or **0**

  - `swEndCondMidPlane` or **6**

  - `swEndCondOffsetFromSurface` or **5**

  - `swEndCondThroughAll` or **1**

  - `swEndCondThroughAllBoth` or **9**

  - `swEndCondThroughNext` or **2**

  - `swEndCondUpToBody` or **7**

  - `swEndCondUpToNext` or **11**

  - `swEndCondUpToSelection` or **10**

  - `swEndCondUpToSurface` or **4** = Do not use; superseded by `swEndCondUpToSelection`

  - `swEndCondUpToVertex` or **3** = Do not use; superseded by `swEndCondUpToSelection`
</code></pre></div></div>

<ul>
  <li>
    <p><strong>Dir2Type</strong> - <em>Revolve end condition in <strong>direction 2</strong>; as defined in <code class="language-plaintext highlighter-rouge">swEndConditions_e</code> and only applies if <code class="language-plaintext highlighter-rouge">Dir1Type</code> is not <code class="language-plaintext highlighter-rouge">swEndConditions_e.swEndCondMidPlane</code>.</em></p>
  </li>
  <li>
    <p><strong>Dir1Angle</strong> - <em>Angle in radians of revolution in <strong>direction 1</strong>; only applies if <code class="language-plaintext highlighter-rouge">Dir1Type</code> is <code class="language-plaintext highlighter-rouge">swEndConditions_e.swEndCondBlind</code>.</em></p>
  </li>
  <li>
    <p><strong>Dir2Angle</strong> - <em>Angle in radians of revolution in <strong>direction 2</strong>; only applies if <code class="language-plaintext highlighter-rouge">Dir2Type</code> is <code class="language-plaintext highlighter-rouge">swEndConditions_e.swEndCondBlind</code>.</em></p>
  </li>
  <li>
    <p><strong>OffsetReverse1</strong> - <em><code class="language-plaintext highlighter-rouge">True</code> to reverse the offset direction in <strong>direction 1</strong>, <code class="language-plaintext highlighter-rouge">False</code> to not; only applies if <code class="language-plaintext highlighter-rouge">Dir1Type</code> is <code class="language-plaintext highlighter-rouge">swEndConditions_e.swEndCondOffsetFromSurface</code>.</em></p>
  </li>
  <li>
    <p><strong>OffsetReverse2</strong> - <em><code class="language-plaintext highlighter-rouge">True</code> to reverse the offset direction in <strong>direction 2</strong>, <code class="language-plaintext highlighter-rouge">False</code> to not; only applies if <code class="language-plaintext highlighter-rouge">Dir2Type</code> is <code class="language-plaintext highlighter-rouge">swEndConditions_e.swEndCondOffsetFromSurface</code>.</em></p>
  </li>
  <li>
    <p><strong>OffsetDistance1</strong> - <em>Offset distance in <strong>direction 1</strong>; only applies if <code class="language-plaintext highlighter-rouge">Dir1Type</code> is <code class="language-plaintext highlighter-rouge">swEndConditions_e.swEndCondOffsetFromSurface</code>.</em></p>
  </li>
  <li>
    <p><strong>OffsetDistance2</strong> - <em>Offset distance in <strong>direction 2</strong>; only applies if <code class="language-plaintext highlighter-rouge">Dir2Type</code> is <code class="language-plaintext highlighter-rouge">swEndConditions_e.swEndCondOffsetFromSurface</code>.</em></p>
  </li>
  <li>
    <p><strong>ThinType</strong> - <em>Type and direction as defined in <code class="language-plaintext highlighter-rouge">swThinWallType_e</code>.</em></p>
  </li>
</ul>

<p>Thin wall types has following enumeration values:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  - `swThinWallMidPlane` or **2**

  - `swThinWallOneDirection` or **0**

  - `swThinWallOppDirection` or **1**

  - `swThinWallTwoDirection` or **3**
</code></pre></div></div>

<ul>
  <li>
    <p><strong>ThinThickness1</strong> - <em>Wall thickness in <strong>direction 1</strong> (if ThinType is <code class="language-plaintext highlighter-rouge">swThinWallType_e.swThinWallMidPlane</code>, (ThinThickness1)/2 is used for each direction).</em></p>
  </li>
  <li>
    <p><strong>ThinThickness2</strong> - <em>Wall thickness in <strong>direction 2</strong> (only applies if ThinType is <code class="language-plaintext highlighter-rouge">swThinWallType_e.swThinWallTwoDirection</code>).</em></p>
  </li>
  <li>
    <p><strong>Merge</strong> - <em><code class="language-plaintext highlighter-rouge">True</code> to merge the results into a multi-body part, <code class="language-plaintext highlighter-rouge">False</code> to not.</em></p>
  </li>
  <li>
    <p><strong>UseFeatScope</strong> - <em><code class="language-plaintext highlighter-rouge">True</code> if the feature only affects selected bodies, <code class="language-plaintext highlighter-rouge">False</code> if the feature affects all bodies.</em></p>
  </li>
  <li>
    <p><strong>UseAutoSelect</strong> - <em><code class="language-plaintext highlighter-rouge">True</code> to automatically select all bodies and have the feature affect those bodies, <code class="language-plaintext highlighter-rouge">False</code> to select the bodies or components that the feature affects.</em></p>
  </li>
</ul>

<p><strong>Return Value</strong> : This <code class="language-plaintext highlighter-rouge">FeatureRevolve2</code> method retun <code class="language-plaintext highlighter-rouge">Feature</code> object.</p>

<p>To see methods and properties related to <code class="language-plaintext highlighter-rouge">Feature</code> object, please visit <strong><a href="https://help.solidworks.com/2019/english/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.IFeature_members.html">this page of Solidworks API Help</a></strong>.</p>

<p>In our code, I have used following values:</p>

<ul>
  <li>
    <p><strong>SingleDir</strong> - <em>I use <code class="language-plaintext highlighter-rouge">True</code> for revolve is in one direction</em>.</p>
  </li>
  <li>
    <p><strong>IsSolid</strong> - <em>I use <code class="language-plaintext highlighter-rouge">True</code> for <strong>Solid</strong> revolve feature</em>.</p>
  </li>
  <li>
    <p><strong>IsThin</strong> - <em>I use <code class="language-plaintext highlighter-rouge">False</code> for <strong>Thin</strong> revolve feature</em>.</p>
  </li>
  <li>
    <p><strong>IsCut</strong> - <em>I use <code class="language-plaintext highlighter-rouge">False</code> for <strong>Cut</strong> revolve feature</em>.</p>
  </li>
  <li>
    <p><strong>ReverseDir</strong> - <em>I use <code class="language-plaintext highlighter-rouge">False</code> for reverses the angle of the revolution</em>.</p>
  </li>
  <li>
    <p><strong>BothDirectionUpToSameEntity</strong> - <em>I use <code class="language-plaintext highlighter-rouge">True</code> for revolve is up to the same entity in both directions</em>.</p>

    <p class="notice--warning">Since <strong>SingleDir</strong> is <code class="language-plaintext highlighter-rouge">True</code>, setting the value to <code class="language-plaintext highlighter-rouge">True</code> is invalid.</p>
  </li>
  <li>
    <p><strong>Dir1Type</strong> - <em>I use <code class="language-plaintext highlighter-rouge">swEndConditions_e.swEndCondBlind</code> for Revolve end condition in direction 1</em>.</p>
  </li>
  <li>
    <p><strong>Dir2Type</strong> - <em>I use <code class="language-plaintext highlighter-rouge">swEndConditions_e.swEndCondBlind</code> for Revolve end condition in direction 2</em>.</p>
  </li>
  <li>
    <p><strong>Dir1Angle</strong> - <em>I use <code class="language-plaintext highlighter-rouge">AngleConversionFactor * 360</code> for Angle in radians of revolution in direction 1</em>.</p>
  </li>
  <li>
    <p><strong>Dir2Angle</strong> - <em>I use <code class="language-plaintext highlighter-rouge">0</code> for Angle in radians of revolution in direction 2</em>.</p>
  </li>
  <li>
    <p><strong>OffsetReverse1</strong> - <em>I use <code class="language-plaintext highlighter-rouge">False</code> for reverse the offset direction in direction 1</em>.</p>
  </li>
  <li>
    <p><strong>OffsetReverse2</strong> - <em>I use <code class="language-plaintext highlighter-rouge">False</code> for reverse the offset direction in direction 2</em>.</p>
  </li>
  <li>
    <p><strong>OffsetDistance1</strong> - <em>I use <code class="language-plaintext highlighter-rouge">0</code> for Offset distance in direction 1</em>.</p>
  </li>
  <li>
    <p><strong>OffsetDistance2</strong> - <em>I use <code class="language-plaintext highlighter-rouge">0</code> for Offset distance in direction 2</em>.</p>
  </li>
  <li>
    <p><strong>ThinType</strong> - <em>I use <code class="language-plaintext highlighter-rouge">swThinWallType_e.swThinWallOneDirection</code> for Type and direction</em>.</p>
  </li>
  <li>
    <p><strong>ThinThickness1</strong> - <em>I use <code class="language-plaintext highlighter-rouge">0</code> for Wall thickness in direction 1</em>.</p>
  </li>
  <li>
    <p><strong>ThinThickness2</strong> - <em>I use <code class="language-plaintext highlighter-rouge">0</code> for Wall thickness in direction 2</em>.</p>
  </li>
  <li>
    <p><strong>Merge</strong> - <em>I use <code class="language-plaintext highlighter-rouge">True</code> for merge the results into a multi-body part</em>.</p>
  </li>
  <li>
    <p><strong>UseFeatScope</strong> - <em>I use <code class="language-plaintext highlighter-rouge">False</code> for the feature affects all bodies</em>.</p>
  </li>
  <li>
    <p><strong>UseAutoSelect</strong> - <em>I use <code class="language-plaintext highlighter-rouge">True</code> for automatically select all bodies and have the feature affect those bodies</em>.</p>
  </li>
</ul>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Check if Revolve Feature creates or not</span>
<span class="k">If</span> <span class="n">swFeature</span> <span class="ow">Is</span> <span class="k">Nothing</span> <span class="k">Then</span>
    <span class="n">MsgBox</span> <span class="p">(</span><span class="s">"Failed to create Revolve Feature."</span><span class="p">)</span>
    <span class="k">Exit</span> <span class="k">Sub</span>
<span class="nf">End</span> <span class="k">If</span>
</code></pre></div></div>

<p>In above line of code, we use an <strong><a href="/vba/if-then-structure-select-case/">IF statement</a></strong> to check if we able to create Revolve Feature or not.</p>

<p>If we failed to select then inform the user by a <strong><a href="/vba/msgBox-function/">Message Window</a></strong>.</p>

<p>After showing error message our program <strong>exit</strong> from here itself.</p>

<p>Now we run the macro and after running macro we get extrude as shown in below image.</p>

<p><a href="/assets/Solidworks_Images/feature-revolve/final_Image.svg"><img src="/assets/Solidworks_Images/feature-revolve/final_Image.svg" alt="final_Image" /></a></p>

<hr />

<p><strong>This is it !!!</strong></p>

<p><em>I hope my efforts will helpful to someone!</em></p>

<p>If you found anything to <strong>add or update</strong>, please let me know on my <em>e-mail</em>.</p>

<p>Hope this post helps you to <strong>create Revolve Boss</strong> with Solidworks VBA Macros.</p>

<p>For more such tutorials on <strong>Solidworks VBA Macro</strong>, do come to this blog after sometime.</p>

<p><em>If you like the post then please share it with your friends also.</em></p>

<p><em>Do let me know by you like this post or not!</em></p>

<p><em>Till then, Happy learning!!!</em></p>
:ET