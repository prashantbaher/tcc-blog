I"ﬂX<p class="notice--warning">This post has ‚Äú<strong>beginner ‚û° intermediate</strong>‚Äù level Macro program.<br />
If you are following my articles then will not be an issue for you.<br />
In this article we did not use üöÄ <strong><a href="/vba/userform/">UserForm</a></strong> for taking inputs, instead we use üöÄ <strong><a href="/vba/inputbox-function/">Input Box</a></strong> for <em>value input</em> and üöÄ <strong><a href="/vba/msgBox-function/">Message Box</a></strong> to notify user.<br />
I hope you will also like this type of tutorials.<br />Thank you for reading.</p>

<h2 id="objective">Objective</h2>

<p>In this article we <strong>create and understand</strong> VBA macro of <strong>Unfix Component(s)</strong> in <strong>Assembly document</strong> of <em>SOLIDWORKS CAD Software</em>.</p>

<p>This method is <strong><em>most updated</em></strong> method, so <strong><em>use this method</em></strong> if you want to <strong>Unfix Component(s)</strong> quickly.</p>

<h2 id="results-we-can-get">Results We Can Get</h2>

<p>After running our macro we successfully <strong>Unfix Component(s)</strong> a Component in an Assembly as a result.</p>

<p>Below image shows the result we get.</p>

<p><a href="/assets/Solidworks_Images/assembly-Unfix-component/final-result-gif.gif"><img src="/assets/Solidworks_Images/assembly-Unfix-component/final-result-gif.gif" alt="unfix-component-final-result" /></a></p>

<p>We <strong>Unfix Component</strong> in following steps in general.</p>

<ol>
  <li><em>Unfix an open Part in new Assembly document.</em></li>
</ol>

<p class="notice--warning">To get the correct result please follow the steps correctly.</p>

<h2 id="macro-video">Macro Video</h2>

<p>Below üé¨ video shows <strong>Unfix Component</strong> from <em>SOLIDWORKS VBA Macros</em>.</p>

<iframe src="https://www.youtube.com/embed/2-_xYMr7i7Y" frameborder="0" allowfullscreen=""></iframe>

<p><br /></p>

<p><strong><em>Above video is just for visualization and there are no explanation.</em></strong></p>

<p><strong><em>I have explained each and every line in this article.</em></strong></p>

<p class="notice--warning">It is advisable to watch video, since it help you to better understand the process.</p>

<h2 id="vba-macro">VBA Macro</h2>

<p>Below is the <strong><em>VBA macro</em></strong> for <em>Unfix Component</em>.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">Option</span> <span class="n">Explicit</span>

<span class="c1">' Variable for Solidworks Application</span>
<span class="k">Dim</span> <span class="nv">swApp</span> <span class="ow">As</span> <span class="n">SldWorks</span><span class="p">.</span><span class="n">SldWorks</span>

<span class="c1">' Variable for Solidworks document</span>
<span class="k">Dim</span> <span class="nv">swDoc</span> <span class="ow">As</span> <span class="n">SldWorks</span><span class="p">.</span><span class="n">ModelDoc2</span>

<span class="c1">' Variable for Solidworks Assembly</span>
<span class="k">Dim</span> <span class="nv">swAssembly</span> <span class="ow">As</span> <span class="n">SldWorks</span><span class="p">.</span><span class="n">AssemblyDoc</span>

<span class="c1">' Variable for Solidworks Component</span>
<span class="k">Dim</span> <span class="nv">swComponent</span> <span class="ow">As</span> <span class="n">SldWorks</span><span class="p">.</span><span class="n">Component2</span>

<span class="c1">' Program to Unfix Component in assembly</span>
<span class="k">Sub</span> <span class="nf">main</span><span class="p">()</span>

  <span class="c1">' Set Solidworks Application variable to current application</span>
  <span class="k">Set</span> <span class="n">swApp</span> <span class="o">=</span> <span class="n">Application</span><span class="p">.</span><span class="n">SldWorks</span>
  
  <span class="c1">' Set Solidworks document variable to currently opened document</span>
  <span class="k">Set</span> <span class="n">swDoc</span> <span class="o">=</span> <span class="n">swApp</span><span class="p">.</span><span class="n">ActiveDoc</span>
  
  <span class="c1">' Check if Solidworks document is opened or not</span>
  <span class="k">If</span> <span class="n">swDoc</span> <span class="ow">Is</span> <span class="k">Nothing</span> <span class="k">Then</span>
    <span class="n">MsgBox</span> <span class="s">"Solidworks document is not opened."</span>
    <span class="k">Exit</span> <span class="k">Sub</span>
  <span class="nf">End</span> <span class="k">If</span>
  
  <span class="c1">' Set Solidworks Assembly document</span>
  <span class="k">Set</span> <span class="n">swAssembly</span> <span class="o">=</span> <span class="n">swDoc</span>
  
  <span class="c1">' Variable for Top Level components List</span>
  <span class="k">Dim</span> <span class="nv">vComponents</span> <span class="ow">As</span> <span class="kt">Variant</span>
  
  <span class="c1">' Get Components list in opened assembly</span>
  <span class="n">vComponents</span> <span class="o">=</span> <span class="n">swAssembly</span><span class="p">.</span><span class="n">GetComponents</span><span class="p">(</span><span class="k">True</span><span class="p">)</span>
  
  <span class="c1">' Variable for Looping</span>
  <span class="k">Dim</span> <span class="nv">index</span> <span class="ow">As</span> <span class="kt">Integer</span>
  
  <span class="c1">' Loop through Components List</span>
  <span class="k">For</span> <span class="n">index</span> <span class="o">=</span> <span class="mi">0</span> <span class="k">To</span> <span class="n">UBound</span><span class="p">(</span><span class="n">vComponents</span><span class="p">)</span>
    
    <span class="c1">' Set Solidworks Component variable</span>
    <span class="k">Set</span> <span class="n">swComponent</span> <span class="o">=</span> <span class="n">vComponents</span><span class="p">(</span><span class="n">index</span><span class="p">)</span>
    
    <span class="c1">' Check if this component is fixed or not</span>
    <span class="k">If</span> <span class="n">swComponent</span><span class="p">.</span><span class="n">IsFixed</span> <span class="k">Then</span>
      
      <span class="c1">' Select this component</span>
      <span class="n">swComponent</span><span class="p">.</span><span class="n">Select</span> <span class="k">True</span>
      
      <span class="c1">' Unfix this component</span>
      <span class="n">swAssembly</span><span class="p">.</span><span class="n">UnfixComponent</span>
      
      <span class="c1">' Clear all selection</span>
      <span class="n">swDoc</span><span class="p">.</span><span class="n">ClearSelection2</span> <span class="k">True</span>
    <span class="k">End</span> <span class="k">If</span>
    
  <span class="k">Next</span>
  
<span class="k">End</span> <span class="k">Sub</span>
</code></pre></div></div>

<h2 id="prerequisite">Prerequisite</h2>

<p>There are some <em>prerequisite</em> for this article.</p>

<ul>
  <li>
    <p>Knowledge of <strong>VBA programming language</strong> is ‚ùó<strong><em>required</em></strong>.</p>
  </li>
  <li>
    <p>We use an existing part in Assembly document.</p>
  </li>
  <li>
    <p>This component is Fixed as shown in below image.</p>
  </li>
</ul>

<p><a href="/assets/Solidworks_Images/assembly-Unfix-component/prerequisite.png"><img src="/assets/Solidworks_Images/assembly-Unfix-component/prerequisite.png" alt="prerequisite" /></a></p>

<p class="notice">We will apply checks in this article, so the code we write should be error free most of the time.</p>

<h2 id="steps-to-follow">Steps To Follow</h2>

<p>This <strong>Reference Point VBA macro</strong> can be divided into following sections:</p>

<ol>
  <li><em>Create and Initialize required variables</em></li>
  <li><em>Unfix Component</em></li>
</ol>

<p><strong><em>Every section with each line is explained below.</em></strong></p>

<p class="notice">I also give some <strong><em>links (see icon üöÄ)</em></strong> so that you can go through them if there are anything I explained in previous articles.</p>

<h3 id="create-and-initialize-required-variables">Create and Initialize required variables</h3>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">Option</span> <span class="n">Explicit</span>
</code></pre></div></div>

<ul>
  <li><strong>Purpose</strong>: Above line forces us to define every variable we are going to use.</li>
  <li><strong>Reference</strong>: üöÄ <strong><a href="/solidworks-macros/open-new-document">SOLIDWORKS Macros - Open new Part document</a></strong> article.</li>
</ul>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Variable for Solidworks application</span>
<span class="k">Dim</span> <span class="nv">swApp</span> <span class="ow">As</span> <span class="n">SldWorks</span><span class="p">.</span><span class="n">SldWorks</span>
</code></pre></div></div>

<ul>
  <li><strong>Purpose</strong>: In above line, we create a variable for <em>Solidworks application</em>.</li>
  <li><strong>Variable Name</strong>: <code class="language-plaintext highlighter-rouge">swApp</code></li>
  <li><strong>Type</strong>: <code class="language-plaintext highlighter-rouge">SldWorks.SldWorks</code></li>
  <li><strong>Reference</strong>: Please visit üöÄ <strong><a href="https://help.solidworks.com/2019/english/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.ISldWorks_members.html">online SOLIDWORKS API Help</a></strong>.</li>
</ul>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Variable for Solidworks document</span>
<span class="k">Dim</span> <span class="nv">swDoc</span> <span class="ow">As</span> <span class="n">SldWorks</span><span class="p">.</span><span class="n">ModelDoc2</span>
</code></pre></div></div>

<ul>
  <li><strong>Purpose</strong>: In above line, we create a variable for <em>Solidworks document</em>.</li>
  <li><strong>Variable Name</strong>: <code class="language-plaintext highlighter-rouge">swDoc</code></li>
  <li><strong>Type</strong>: <code class="language-plaintext highlighter-rouge">SldWorks.ModelDoc2</code></li>
  <li><strong>Reference</strong>: Please visit üöÄ <strong><a href="https://help.solidworks.com/2019/english/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.IModelDoc2_members.html">online SOLIDWORKS API Help</a></strong>.</li>
</ul>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Variable for Solidworks Assembly</span>
<span class="k">Dim</span> <span class="nv">swAssembly</span> <span class="ow">As</span> <span class="n">SldWorks</span><span class="p">.</span><span class="n">AssemblyDoc</span>
</code></pre></div></div>

<ul>
  <li><strong>Purpose</strong>: In above line, we create a variable for <em>Solidworks Assembly</em>.</li>
  <li><strong>Variable Name</strong>: <code class="language-plaintext highlighter-rouge">swAssembly</code></li>
  <li><strong>Type</strong>: <code class="language-plaintext highlighter-rouge">SldWorks.AssemblyDoc</code></li>
  <li><strong>Reference</strong>: Please visit üöÄ <strong><a href="https://help.solidworks.com/2019/english/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.IAssemblyDoc_members.html">online SOLIDWORKS API Help</a></strong>.</li>
</ul>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Variable for Solidworks Component</span>
<span class="k">Dim</span> <span class="nv">swComponent</span> <span class="ow">As</span> <span class="n">SldWorks</span><span class="p">.</span><span class="n">Component2</span>
</code></pre></div></div>

<ul>
  <li><strong>Purpose</strong>:  In above line, we create a variable for <em>Solidworks Component</em>.</li>
  <li><strong>Variable Name</strong>: <code class="language-plaintext highlighter-rouge">swComponent</code></li>
  <li><strong>Type</strong>: <code class="language-plaintext highlighter-rouge">SldWorks.Component2</code>.</li>
  <li><strong>Reference</strong>: Please visit üöÄ <strong><a href="https://help.solidworks.com/2019/english/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.IComponent2_members.html">online SOLIDWORKS API Help</a></strong>.</li>
</ul>

<p><strong><em>These all are our global variables.</em></strong></p>

<p>They are <strong>SOLIDWORKS API Objects</strong>.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Program to Unfix a Component in assembly</span>
<span class="k">Sub</span> <span class="nf">main</span><span class="p">()</span>

<span class="k">End</span> <span class="k">Sub</span>
</code></pre></div></div>

<ul>
  <li>In above line, we create <em>main Program to Unfix a Component in assembly</em>.</li>
  <li>This is a <strong><code class="language-plaintext highlighter-rouge">Sub</code></strong> procedure which has name of <strong><code class="language-plaintext highlighter-rouge">main</code></strong>.</li>
  <li>This procedure hold all the <em>statements (instructions)</em> we give to computer.</li>
  <li><strong>Reference</strong>: Detailed information üöÄ <strong><a href="/vba/sub-and-function-procedure/">VBA Sub and Function Procedures</a></strong> article of this website.</li>
</ul>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Set Solidworks Application variable to current application</span>
<span class="k">Set</span> <span class="n">swApp</span> <span class="o">=</span> <span class="n">Application</span><span class="p">.</span><span class="n">SldWorks</span>
</code></pre></div></div>

<ul>
  <li>In above line, we set <em>value</em> of <strong><code class="language-plaintext highlighter-rouge">swApp</code></strong> variable.</li>
  <li>This <em>value</em> is currently opened Solidworks application.</li>
</ul>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Set Solidworks document variable to currently opened document</span>
<span class="k">Set</span> <span class="n">swDoc</span> <span class="o">=</span> <span class="n">swApp</span><span class="p">.</span><span class="n">ActiveDoc</span>
</code></pre></div></div>

<ul>
  <li>In above line, we set <em>value</em> of <strong><code class="language-plaintext highlighter-rouge">swDoc</code></strong> variable.</li>
  <li>This <em>value</em> is currently <em>opened part document</em>.</li>
</ul>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Check if Solidworks document is opened or not</span>
<span class="k">If</span> <span class="n">swDoc</span> <span class="ow">Is</span> <span class="k">Nothing</span> <span class="k">Then</span>
  <span class="n">MsgBox</span> <span class="p">(</span><span class="s">"Solidworks document is not opened."</span><span class="p">)</span>
  <span class="k">Exit</span> <span class="k">Sub</span>
<span class="nf">End</span> <span class="k">If</span>
</code></pre></div></div>

<ul>
  <li>In above code block, we check if we successfully set the value of <strong><code class="language-plaintext highlighter-rouge">swDoc</code></strong> variable.</li>
  <li>We use üöÄ <strong><a href="/vba/if-then-structure-select-case/">IF statement</a></strong> for checking.</li>
  <li><strong>Condition</strong>: <strong><code class="language-plaintext highlighter-rouge">swDoc Is Nothing</code></strong></li>
  <li>When this condition is <strong><code class="language-plaintext highlighter-rouge">True</code></strong>,
    <ul>
      <li>We show and üöÄ <strong><a href="/vba/msgBox-function/">message window</a></strong> to user.</li>
      <li><strong>Message</strong>: <em>SOLIDWORKS document is not opened.</em></li>
      <li>Then we <strong>stop</strong> our macro here.</li>
    </ul>
  </li>
</ul>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Set Solidworks Assembly document</span>
<span class="k">Set</span> <span class="n">swAssembly</span> <span class="o">=</span> <span class="n">swDoc</span>
</code></pre></div></div>

<ul>
  <li>In above line, we set <em>value</em> of <strong><code class="language-plaintext highlighter-rouge">swAssembly</code></strong> variable.</li>
  <li>This <em>value</em> is <strong><code class="language-plaintext highlighter-rouge">swDoc</code></strong> variable.</li>
</ul>

<h3 id="unfix-component">Unfix Component</h3>

<p>In this section, we <em>Unfix Component</em>.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Variable for Top Level components List</span>
<span class="k">Dim</span> <span class="nv">vComponents</span> <span class="ow">As</span> <span class="kt">Variant</span>
</code></pre></div></div>

<ul>
  <li><strong>Purpose</strong>:  In above line, we create a variable for <em>Top Level components List</em>.</li>
  <li><strong>Variable Name</strong>: <code class="language-plaintext highlighter-rouge">vComponents</code></li>
  <li><strong>Type</strong>: <code class="language-plaintext highlighter-rouge">Variant</code></li>
</ul>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Get Components list in opened assembly</span>
<span class="n">vComponents</span> <span class="o">=</span> <span class="n">swAssembly</span><span class="p">.</span><span class="n">GetComponents</span><span class="p">(</span><span class="k">True</span><span class="p">)</span>
</code></pre></div></div>

<ul>
  <li>In above line, we set the value of <strong><code class="language-plaintext highlighter-rouge">vComponents</code></strong> variable.</li>
  <li>We set value by <strong><code class="language-plaintext highlighter-rouge">GetComponents</code></strong> method of <strong><code class="language-plaintext highlighter-rouge">swAssembly</code></strong> variable.</li>
</ul>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Variable for Looping</span>
<span class="k">Dim</span> <span class="nv">index</span> <span class="ow">As</span> <span class="kt">Integer</span>
</code></pre></div></div>

<ul>
  <li><strong>Purpose</strong>:  In above line, we create a variable for <em>Looping</em>.</li>
  <li><strong>Variable Name</strong>: <code class="language-plaintext highlighter-rouge">index</code></li>
  <li><strong>Type</strong>: <code class="language-plaintext highlighter-rouge">Integer</code></li>
</ul>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Loop through Components List</span>
<span class="k">For</span> <span class="n">index</span> <span class="o">=</span> <span class="mi">0</span> <span class="k">To</span> <span class="n">UBound</span><span class="p">(</span><span class="n">vComponents</span><span class="p">)</span>

<span class="k">Next</span>
</code></pre></div></div>

<ul>
  <li>In above line, we create a <code class="language-plaintext highlighter-rouge">For</code> loop.</li>
  <li>This loops start from <code class="language-plaintext highlighter-rouge">index = 0</code> to number of <code class="language-plaintext highlighter-rouge">UBound(vComponents)</code>.
    <ul>
      <li><code class="language-plaintext highlighter-rouge">UBound(vComponents)</code> : Maximum number of component in this variable.</li>
    </ul>
  </li>
</ul>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Set Solidworks Component variable</span>
<span class="k">Set</span> <span class="n">swComponent</span> <span class="o">=</span> <span class="n">vComponents</span><span class="p">(</span><span class="n">index</span><span class="p">)</span>
</code></pre></div></div>

<ul>
  <li>In above line, we set <em>value</em> of <strong><code class="language-plaintext highlighter-rouge">swComponent</code></strong> variable.</li>
  <li>This <em>value</em> is current component inside <strong><code class="language-plaintext highlighter-rouge">vComponents</code></strong> variable.
    <ul>
      <li>We get current component by Indexing <strong><code class="language-plaintext highlighter-rouge">vComponents</code></strong> variable.</li>
    </ul>
  </li>
</ul>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Check if this component is fixed or not</span>
<span class="k">If</span> <span class="n">swComponent</span><span class="p">.</span><span class="n">IsFixed</span> <span class="k">Then</span>
  
  <span class="c1">' Select this component</span>
  <span class="n">swComponent</span><span class="p">.</span><span class="n">Select</span> <span class="k">True</span>
  
  <span class="c1">' Unfix this component</span>
  <span class="n">swAssembly</span><span class="p">.</span><span class="n">UnfixComponent</span>
  
  <span class="c1">' Clear all selection</span>
  <span class="n">swDoc</span><span class="p">.</span><span class="n">ClearSelection2</span> <span class="k">True</span>
<span class="k">End</span> <span class="k">If</span>
</code></pre></div></div>

<ul>
  <li>In above code block, we check if this component is fixed or not.</li>
  <li>We use üöÄ <strong><a href="/vba/if-then-structure-select-case/">IF statement</a></strong> for checking.</li>
  <li><strong>Condition</strong>: <strong><code class="language-plaintext highlighter-rouge">swComponent.IsFixed</code></strong></li>
  <li>When this condition is <strong><code class="language-plaintext highlighter-rouge">True</code></strong>,
    <ul>
      <li>We select current component.</li>
      <li>Unfix current component.</li>
      <li>Then Clear all selection.</li>
    </ul>
  </li>
</ul>

<p><strong>This is it !!!</strong></p>

<p><em>I hope my efforts will helpful to someone!</em></p>

<p>If you found anything to <strong>add or update</strong>, please let me know on my <em>e-mail</em>.</p>

<p>Hope this post helps you to <strong>Unfix component</strong> with SOLIDWORKS VBA Macros.</p>

<p>For more such tutorials on <strong>SOLIDWORKS VBA Macro</strong>, do come to this website after sometime.</p>

<p><em>If you like the post then please share it with your friends also.</em></p>

<p><em>Do let me know by you like this post or not!</em></p>

<p><em>Till then, Happy learning!!!</em></p>
:ET