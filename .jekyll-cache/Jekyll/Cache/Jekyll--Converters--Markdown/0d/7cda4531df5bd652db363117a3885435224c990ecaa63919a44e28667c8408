I"$¶<p>In this post, I tell you about <em>how to Trim Sketch Entities using Solidworks VBA Macros</em> in a Sketch.</p>

<hr />

<h2 id="video-of-code-on-youtube">Video of Code on YouTube</h2>

<p>Please see below video how visually we <em>Trim Sketch Entities</em> in <strong>Solidworks VBA macro</strong>.</p>

<iframe src="https://www.youtube.com/embed/m1tPTzjK1Pc" frameborder="0" allowfullscreen=""></iframe>

<p>Please note that there are <strong>no explaination</strong> given in the video.</p>

<p><strong>Explaination</strong> of each line and why we write code this way is given in this post.</p>

<hr />

<h2 id="for-experience-macro-developer">For Experience Macro Developer</h2>

<p>If you are an experience <strong>Solidworks Macro developer</strong>, then you are looking for a specific code sample.</p>

<p>Below is the code for <strong>Trim Sketch Entities</strong> from <strong>Solidworks VBA Macro</strong>.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Boolean Variable</span>
<span class="k">Dim</span> <span class="nv">BoolStatus</span> <span class="ow">As</span> <span class="kt">Boolean</span>

<span class="c1">' Select Line 1</span>
<span class="n">BoolStatus</span> <span class="o">=</span> <span class="n">swDoc</span><span class="p">.</span><span class="n">Extension</span><span class="p">.</span><span class="n">SelectByID2</span><span class="p">(</span><span class="s">"Line1"</span><span class="p">,</span> <span class="s">"SKETCHSEGMENT"</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">True</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">Nothing</span><span class="p">,</span> <span class="n">swSelectOption_e</span><span class="p">.</span><span class="n">swSelectOptionDefault</span><span class="p">)</span>

<span class="c1">' Select Line 2</span>
<span class="n">BoolStatus</span> <span class="o">=</span> <span class="n">swDoc</span><span class="p">.</span><span class="n">Extension</span><span class="p">.</span><span class="n">SelectByID2</span><span class="p">(</span><span class="s">"Line2"</span><span class="p">,</span> <span class="s">"SKETCHSEGMENT"</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">True</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">Nothing</span><span class="p">,</span> <span class="n">swSelectOption_e</span><span class="p">.</span><span class="n">swSelectOptionDefault</span><span class="p">)</span>

<span class="c1">' Trim Solidworks Sketch segment by "SketchTrim" method from Solidworks sketch manager</span>
<span class="n">BoolStatus</span> <span class="o">=</span> <span class="n">swSketchManager</span><span class="p">.</span><span class="n">SketchTrim</span><span class="p">(</span><span class="n">swSketchTrimChoice_e</span><span class="p">.</span><span class="n">swSketchTrimCorner</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
</code></pre></div></div>

<p>For <strong>Trim</strong> Solidworks Sketch segment, first you need to <strong>Create</strong> a variable of <code class="language-plaintext highlighter-rouge">Boolean</code> type.</p>

<p>After creating variable, you need to set the value of this <code class="language-plaintext highlighter-rouge">Boolean</code> variable.</p>

<p>For this you used <code class="language-plaintext highlighter-rouge">SketchTrim</code> method from <strong>Solidworks Sketch Manager</strong>.</p>

<p>This <code class="language-plaintext highlighter-rouge">SketchTrim</code> method set the value of <code class="language-plaintext highlighter-rouge">Boolean</code> type variable.</p>

<p>If Trim is <strong>successful</strong> then <code class="language-plaintext highlighter-rouge">SketchTrim</code> method return <strong>True</strong> otherwise <code class="language-plaintext highlighter-rouge">SketchTrim</code> returns <strong>False</strong>.</p>

<p>This <code class="language-plaintext highlighter-rouge">SketchTrim</code> method takes following parameters as explained:</p>

<ul>
  <li>
    <p><strong>Option</strong> : <em>Sketch trim options as defined in <code class="language-plaintext highlighter-rouge">swSketchTrimChoice_e</code></em></p>
  </li>
  <li>
    <p><strong>X</strong> : <em>X pick location</em></p>
  </li>
  <li>
    <p><strong>Y</strong> : <em>Y pick location</em></p>
  </li>
</ul>

<p>In <code class="language-plaintext highlighter-rouge">swSketchTrimChoice_e</code> we have following options:</p>

<ul>
  <li>
    <p><code class="language-plaintext highlighter-rouge">swSketchTrimClosest</code> : This option Trim Closest selected Sketch Entity.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">swSketchTrimCorner</code> : This option Trim/Extend Corners of selected Sketch Entity.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">swSketchTrimEntities</code> : This option Trim/Delete selected Sketch Entity.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">swSketchTrimEntityPoint</code> : This option migth be Trim selected Sketch Point or Entity. (I did not know what it do!!!)</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">swSketchTrimInside</code> : This option Trim selected Sketch Entity between <strong>two boundaries</strong>.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">swSketchTrimOutside</code> : This option Keep selected Sketch Entity between <strong>two boundaries</strong> and Trim outside of the boundaries.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">swSketchTrimTwoEntities</code> : This option Trim/Delete selected <em>two Sketch Entities</em>.</p>
  </li>
</ul>

<p>If you want a more detail explaination then please read further otherwise this will help you to <strong>Trim Sketch Entities From VBA Macro</strong>.</p>

<hr />

<h2 id="for-beginners-macro-developers">For Beginners Macro Developers</h2>

<p>In this post, I tell you about <code class="language-plaintext highlighter-rouge">SketchTrim</code> method from <strong>Solidworks</strong> <code class="language-plaintext highlighter-rouge">SketchManager</code> object.</p>

<p>This method is <strong><em>most updated</em></strong> method, I found in <em>Solidworks API Help</em>.</p>

<p>So <strong><em>use this method</em></strong> if you want to <em>Trim Sketces</em>..</p>

<p>Below is the <code class="language-plaintext highlighter-rouge">code</code> sample for <em>Trim Sketces</em>.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">Option</span> <span class="n">Explicit</span>

<span class="c1">' Create variable for Solidworks application</span>
<span class="k">Dim</span> <span class="nv">swApp</span> <span class="ow">As</span> <span class="n">SldWorks</span><span class="p">.</span><span class="n">SldWorks</span>

<span class="c1">' Create variable for Solidworks document</span>
<span class="k">Dim</span> <span class="nv">swDoc</span> <span class="ow">As</span> <span class="n">SldWorks</span><span class="p">.</span><span class="n">ModelDoc2</span>

<span class="c1">' Boolean Variable</span>
<span class="k">Dim</span> <span class="nv">BoolStatus</span> <span class="ow">As</span> <span class="kt">Boolean</span>

<span class="c1">' Create variable for Solidworks Sketch Manager</span>
<span class="k">Dim</span> <span class="nv">swSketchManager</span> <span class="ow">As</span> <span class="n">SldWorks</span><span class="p">.</span><span class="n">SketchManager</span>

<span class="c1">' Create Variable for Solidworks Sketch Segment</span>
<span class="k">Dim</span> <span class="nv">swSketchSegment</span> <span class="ow">As</span> <span class="n">SldWorks</span><span class="p">.</span><span class="n">SketchSegment</span>

<span class="c1">' Main function of our VBA program</span>
<span class="k">Sub</span> <span class="nf">main</span><span class="p">()</span>

  <span class="c1">' Set Solidworks variable to Solidworks application</span>
  <span class="k">Set</span> <span class="n">swApp</span> <span class="o">=</span> <span class="n">Application</span><span class="p">.</span><span class="n">SldWorks</span>
  
  <span class="c1">' Create string type variable for storing default part location</span>
  <span class="k">Dim</span> <span class="nv">defaultTemplate</span> <span class="ow">As</span> <span class="kt">String</span>
  <span class="c1">' Set value of this string type variable to "Default part template"</span>
  <span class="n">defaultTemplate</span> <span class="o">=</span> <span class="n">swApp</span><span class="p">.</span><span class="n">GetUserPreferenceStringValue</span><span class="p">(</span><span class="n">swUserPreferenceStringValue_e</span><span class="p">.</span><span class="n">swDefaultTemplatePart</span><span class="p">)</span>

  <span class="c1">' Set Solidworks document to new part document</span>
  <span class="k">Set</span> <span class="n">swDoc</span> <span class="o">=</span> <span class="n">swApp</span><span class="p">.</span><span class="n">NewDocument</span><span class="p">(</span><span class="n">defaultTemplate</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>

  <span class="c1">' Select Front Plane</span>
  <span class="n">BoolStatus</span> <span class="o">=</span> <span class="n">swDoc</span><span class="p">.</span><span class="n">Extension</span><span class="p">.</span><span class="n">SelectByID2</span><span class="p">(</span><span class="s">"Front Plane"</span><span class="p">,</span> <span class="s">"PLANE"</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">False</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">Nothing</span><span class="p">,</span> <span class="n">swSelectOption_e</span><span class="p">.</span><span class="n">swSelectOptionDefault</span><span class="p">)</span>

  <span class="c1">' Set Sketch manager for our sketch</span>
  <span class="k">Set</span> <span class="n">swSketchManager</span> <span class="o">=</span> <span class="n">swDoc</span><span class="p">.</span><span class="n">SketchManager</span>

  <span class="c1">' Insert a sketch into selected plane</span>
  <span class="n">swSketchManager</span><span class="p">.</span><span class="n">InsertSketch</span> <span class="k">True</span>
  
  <span class="c1">' Set Sketch Segment value and Create Line 1</span>
  <span class="k">Set</span> <span class="n">swSketchSegment</span> <span class="o">=</span> <span class="n">swSketchManager</span><span class="p">.</span><span class="n">CreateLine</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
  
  <span class="c1">' Set Sketch Segment value and Create Line 2</span>
  <span class="k">Set</span> <span class="n">swSketchSegment</span> <span class="o">=</span> <span class="n">swSketchManager</span><span class="p">.</span><span class="n">CreateLine</span><span class="p">(</span><span class="mf">1.5</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mf">1.5</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
  
  <span class="c1">' De-select the lines after creation</span>
  <span class="n">swDoc</span><span class="p">.</span><span class="n">ClearSelection2</span> <span class="k">True</span>
  
  <span class="c1">' Select Line 1</span>
  <span class="n">BoolStatus</span> <span class="o">=</span> <span class="n">swDoc</span><span class="p">.</span><span class="n">Extension</span><span class="p">.</span><span class="n">SelectByID2</span><span class="p">(</span><span class="s">"Line1"</span><span class="p">,</span> <span class="s">"SKETCHSEGMENT"</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">False</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">Nothing</span><span class="p">,</span> <span class="n">swSelectOption_e</span><span class="p">.</span><span class="n">swSelectOptionDefault</span><span class="p">)</span>

  <span class="c1">' Select Line 2</span>
  <span class="n">BoolStatus</span> <span class="o">=</span> <span class="n">swDoc</span><span class="p">.</span><span class="n">Extension</span><span class="p">.</span><span class="n">SelectByID2</span><span class="p">(</span><span class="s">"Line2"</span><span class="p">,</span> <span class="s">"SKETCHSEGMENT"</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">True</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">Nothing</span><span class="p">,</span> <span class="n">swSelectOption_e</span><span class="p">.</span><span class="n">swSelectOptionDefault</span><span class="p">)</span>

  <span class="c1">' Trim selected Sketch Segments by "SketchTrim" method from Solidworks sketch manager</span>
  <span class="n">BoolStatus</span> <span class="o">=</span> <span class="n">swSketchManager</span><span class="p">.</span><span class="n">SketchTrim</span><span class="p">(</span><span class="n">swSketchTrimChoice_e</span><span class="p">.</span><span class="n">swSketchTrimCorner</span><span class="p">,</span> <span class="mf">0.0</span><span class="p">,</span> <span class="mf">0.0</span><span class="p">,</span> <span class="mf">0.0</span><span class="p">)</span>

  <span class="c1">' De-select the Sketch Segment after Trim</span>
  <span class="n">swDoc</span><span class="p">.</span><span class="n">ClearSelection2</span> <span class="k">True</span>
  
  <span class="c1">' Show Front View after Trim Sketch Segments</span>
  <span class="n">swDoc</span><span class="p">.</span><span class="n">ShowNamedView2</span> <span class="s">""</span><span class="p">,</span> <span class="n">swStandardViews_e</span><span class="p">.</span><span class="n">swFrontView</span>
  
  <span class="c1">' Zoom to fit screen in Solidworks Window</span>
  <span class="n">swDoc</span><span class="p">.</span><span class="n">ViewZoomtofit2</span>

<span class="k">End</span> <span class="k">Sub</span>
</code></pre></div></div>

<hr />

<h3 id="understanding-the-code">Understanding the Code</h3>

<p>Now let us walk through <em>each line</em> in the above code, and <strong>understand</strong> the meaning of every line.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">Option</span> <span class="n">Explicit</span>
</code></pre></div></div>

<p>This line forces us to define every variable we are going to use.</p>

<p>For more information please visit <strong><a href="/solidworks-macros/open-new-document">Solidworks Macros - Open new Part document</a></strong> post.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Create variable for Solidworks application</span>
<span class="k">Dim</span> <span class="nv">swApp</span> <span class="ow">As</span> <span class="n">SldWorks</span><span class="p">.</span><span class="n">SldWorks</span>
</code></pre></div></div>

<p>In this line, we create a variable which we named as <code class="language-plaintext highlighter-rouge">swApp</code> and the type of this <code class="language-plaintext highlighter-rouge">swApp</code> variable is <code class="language-plaintext highlighter-rouge">SldWorks.SldWorks</code>.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Create variable for Solidworks document</span>
<span class="k">Dim</span> <span class="nv">swDoc</span> <span class="ow">As</span> <span class="n">SldWorks</span><span class="p">.</span><span class="n">ModelDoc2</span>
</code></pre></div></div>

<p>In this line, we create a variable which we named as <code class="language-plaintext highlighter-rouge">swDoc</code> and the type of this <code class="language-plaintext highlighter-rouge">swDoc</code> variable is <code class="language-plaintext highlighter-rouge">SldWorks.ModelDoc2</code>.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Boolean Variable</span>
<span class="k">Dim</span> <span class="nv">BoolStatus</span> <span class="ow">As</span> <span class="kt">Boolean</span>
</code></pre></div></div>

<p>In this line, we create a variable named <code class="language-plaintext highlighter-rouge">BoolStatus</code> as <code class="language-plaintext highlighter-rouge">Boolean</code> object type.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Create variable for Solidworks Sketch Manager</span>
<span class="k">Dim</span> <span class="nv">swSketchManager</span> <span class="ow">As</span> <span class="n">SldWorks</span><span class="p">.</span><span class="n">SketchManager</span>
</code></pre></div></div>

<p>In above line, we create variable <code class="language-plaintext highlighter-rouge">swSketchManager</code> for <strong>Solidworks Sketch Manager</strong>.</p>

<p>As the name suggested, a <strong>Sketch Manager</strong> holds variours methods and properties to manage <em>Sketches</em>.</p>

<p>To see methods and properties related to <code class="language-plaintext highlighter-rouge">SketchManager</code> object, please visit <strong><a href="https://help.solidworks.com/2017/english/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.ISketchManager_members.html">this page of Solidworks API Help</a></strong></p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Create variable for Solidworks Sketch Segment</span>
<span class="k">Dim</span> <span class="nv">swSketchSegment</span> <span class="ow">As</span> <span class="n">SldWorks</span><span class="p">.</span><span class="n">SketchSegment</span>
</code></pre></div></div>

<p>In this line, we Create a variable which we named as <code class="language-plaintext highlighter-rouge">swSketchSegment</code> and the type of this <code class="language-plaintext highlighter-rouge">swSketchSegment</code> variable is <code class="language-plaintext highlighter-rouge">SldWorks.SketchSegment</code>.</p>

<p>We create variable <code class="language-plaintext highlighter-rouge">swSketchSegment</code> for <strong>Solidworks Sketch Segments</strong>.</p>

<p>To see methods and properties related to <code class="language-plaintext highlighter-rouge">swSketchSegment</code> object, please visit <strong><a href="https://help.solidworks.com/2019/English/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.ISketchSegment_members.html">this page of Solidworks API Help</a></strong></p>

<p>These all are our global variables.</p>

<p>As you can see in code sample, they are <strong>Solidworks API Objects</strong>.</p>

<p>So basically I group all the <strong>Solidworks API Objects</strong> in one place.</p>

<p>I have also place <code class="language-plaintext highlighter-rouge">boolean</code> type object at top also, because after certain point we will <em>need</em> this variable frequently.</p>

<p>Thus, I have started placing it here.</p>

<p>Next is our <code class="language-plaintext highlighter-rouge">Sub</code> procedure which has name of <code class="language-plaintext highlighter-rouge">main</code>.</p>

<p>This procedure hold all the <em>statements (instructions)</em> we give to computer.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Set Solidworks variable to Solidworks application</span>
<span class="k">Set</span> <span class="n">swApp</span> <span class="o">=</span> <span class="n">Application</span><span class="p">.</span><span class="n">SldWorks</span>
</code></pre></div></div>

<p>In this line, we are setting the value of our Solidworks variable which we define earlier to Solidworks application.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Create string type variable for storing default part location</span>
<span class="k">Dim</span> <span class="nv">defaultTemplate</span> <span class="ow">As</span> <span class="kt">String</span>
<span class="c1">' Set value of this string type variable to "Default part template"</span>
<span class="n">defaultTemplate</span> <span class="o">=</span> <span class="n">swApp</span><span class="p">.</span><span class="n">GetUserPreferenceStringValue</span><span class="p">(</span><span class="n">swUserPreferenceStringValue_e</span><span class="p">.</span><span class="n">swDefaultTemplatePart</span><span class="p">)</span>
</code></pre></div></div>

<p>In 1st statement of above example, we are defining a variable of <code class="language-plaintext highlighter-rouge">string</code> type and named it as <code class="language-plaintext highlighter-rouge">defaultTemplate</code>.</p>

<p>This variable <code class="language-plaintext highlighter-rouge">defaultTemplate</code>, hold the location the location of <strong>Default Part Template</strong>.</p>

<p>In 2nd line of above example. we assign value to our newly define <code class="language-plaintext highlighter-rouge">defaultTemplate</code> variable.</p>

<p>We assign the value by using a <em>Method</em> named <code class="language-plaintext highlighter-rouge">GetUserPreferenceStringValue()</code>.</p>

<p>This <code class="language-plaintext highlighter-rouge">GetUserPreferenceStringValue()</code> method is a part of our main Solidworks variable <code class="language-plaintext highlighter-rouge">swApp</code>.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Set Solidworks document to new part document</span>
<span class="k">Set</span> <span class="n">swDoc</span> <span class="o">=</span> <span class="n">swApp</span><span class="p">.</span><span class="n">NewDocument</span><span class="p">(</span><span class="n">defaultTemplate</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
</code></pre></div></div>

<p>In this line, we set the value of our <code class="language-plaintext highlighter-rouge">swDoc</code> variable to new document.</p>

<p>For <strong>detailed information</strong> about these lines please visit <strong><a href="/solidworks-macros/open-new-document">Solidworks Macros - Open new Part document</a></strong> post.</p>

<p>I have discussed them <strong>thoroghly</strong> in <strong><a href="/solidworks-macros/open-new-document">Solidworks Macros - Open new Part document</a></strong> post, so do checkout this post if you donât understand above code.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Select Front Plane</span>
<span class="n">BoolStatus</span> <span class="o">=</span> <span class="n">swDoc</span><span class="p">.</span><span class="n">Extension</span><span class="p">.</span><span class="n">SelectByID2</span><span class="p">(</span><span class="s">"Front Plane"</span><span class="p">,</span> <span class="s">"PLANE"</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">False</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">Nothing</span><span class="p">,</span> <span class="n">swSelectOption_e</span><span class="p">.</span><span class="n">swSelectOptionDefault</span><span class="p">)</span>
</code></pre></div></div>

<p>In above line, we select the <em>front plane</em> by using <code class="language-plaintext highlighter-rouge">SelectByID2</code> method from <code class="language-plaintext highlighter-rouge">Extension</code> object.</p>

<p>For more information about selection method please visit <strong><a href="/solidworks-macros/select-plane-from-tree">Solidworks Macros - Selection Methods</a></strong> post.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Set Sketch manager for our sketch</span>
<span class="k">Set</span> <span class="n">swSketchManager</span> <span class="o">=</span> <span class="n">swDoc</span><span class="p">.</span><span class="n">SketchManager</span>
</code></pre></div></div>

<p>In above line, we set the sketch manager variable to current documentâs sketch manager.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Insert a sketch into selected plane</span>
<span class="n">swSketchManager</span><span class="p">.</span><span class="n">InsertSketch</span> <span class="k">True</span>
</code></pre></div></div>

<p>In above line, we use <code class="language-plaintext highlighter-rouge">InsertSketch</code> method of <em>SketchManager</em> and give <code class="language-plaintext highlighter-rouge">True</code> value.</p>

<p>This method allows us to insert a sketch in selected plane.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Set Sketch Segment value and Create Line 1</span>
<span class="k">Set</span> <span class="n">swSketchSegment</span> <span class="o">=</span> <span class="n">swSketchManager</span><span class="p">.</span><span class="n">CreateLine</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
</code></pre></div></div>

<p>In above line, we set the value of Solidworks Sketch Segment variable <code class="language-plaintext highlighter-rouge">swSketchSegment</code> by <code class="language-plaintext highlighter-rouge">CreateLine</code> method from <em>Solidworks Sketch Manager</em>.</p>

<p>This <code class="language-plaintext highlighter-rouge">CreateLine</code> method creates Lines between 2 given points.</p>

<p>For more information about <code class="language-plaintext highlighter-rouge">CreateLine</code> method, you can read my <strong><a href="/solidworks-macros/sketch-create-line">Solidworks Sketch Macros - Create Line</a></strong> post..</p>

<p>This post describe all the parameters we need for this <code class="language-plaintext highlighter-rouge">CreateLine</code> method.</p>

<p>In above line, we create a Line between origin of Sketch (0, 0, 0) and 1 distance in X-axis direction.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Set Sketch Segment value and Create Line 2</span>
<span class="k">Set</span> <span class="n">swSketchSegment</span> <span class="o">=</span> <span class="n">swSketchManager</span><span class="p">.</span><span class="n">CreateLine</span><span class="p">(</span><span class="mf">1.5</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mf">1.5</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
</code></pre></div></div>

<p>In above line we create Line 2 by using same <code class="language-plaintext highlighter-rouge">CreateLine</code> method from <em>Solidworks Sketch Manager</em>.</p>

<p>In above code, we create our 2nd line between <strong>point (1.5, 0, 0)</strong> and <strong>point (1.5, 1, 0)</strong>.</p>

<p>This line start at 1.5 distance in X-axis and ends at a distance of 1 in Y-axis.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' De-select the lines after creation</span>
<span class="n">swDoc</span><span class="p">.</span><span class="n">ClearSelection2</span> <span class="k">True</span>
</code></pre></div></div>

<p>After creating both lines we de-select those lines.</p>

<blockquote>
  <p>We <strong>donât need</strong> to de-select the lines for <strong>Trim operation</strong> as I will select those lines agains in next 2 lines. I just want to show you how to select a <strong>Sketch Segment</strong> with <code class="language-plaintext highlighter-rouge">SelectById</code> Menthod.</p>
</blockquote>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Select Line 1</span>
<span class="n">BoolStatus</span> <span class="o">=</span> <span class="n">swDoc</span><span class="p">.</span><span class="n">Extension</span><span class="p">.</span><span class="n">SelectByID2</span><span class="p">(</span><span class="s">"Line1"</span><span class="p">,</span> <span class="s">"SKETCHSEGMENT"</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">False</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">Nothing</span><span class="p">,</span> <span class="n">swSelectOption_e</span><span class="p">.</span><span class="n">swSelectOptionDefault</span><span class="p">)</span>

<span class="c1">' Select Line 2</span>
<span class="n">BoolStatus</span> <span class="o">=</span> <span class="n">swDoc</span><span class="p">.</span><span class="n">Extension</span><span class="p">.</span><span class="n">SelectByID2</span><span class="p">(</span><span class="s">"Line2"</span><span class="p">,</span> <span class="s">"SKETCHSEGMENT"</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">True</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">Nothing</span><span class="p">,</span> <span class="n">swSelectOption_e</span><span class="p">.</span><span class="n">swSelectOptionDefault</span><span class="p">)</span>

</code></pre></div></div>

<p>In above line, we select <strong>Line 1 and 2</strong>.</p>

<p>The thing to notice here is that <em>Append</em> value I set to <code class="language-plaintext highlighter-rouge">False</code> for <strong>Line 1</strong> and <code class="language-plaintext highlighter-rouge">True</code> for <strong>Line 2</strong>.</p>

<p><strong>Line 1</strong> is 1st entity in items of selection hence we can use <code class="language-plaintext highlighter-rouge">False</code> here.</p>

<p>For <strong>Line 2</strong>, we want to add this line into Selection List, hence <em>Append</em> value I set to <code class="language-plaintext highlighter-rouge">True</code>.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Trim selected Sketch Segments by "SketchTrim" method from Solidworks sketch manager</span>
<span class="n">BoolStatus</span> <span class="o">=</span> <span class="n">swSketchManager</span><span class="p">.</span><span class="n">SketchTrim</span><span class="p">(</span><span class="n">swSketchTrimChoice_e</span><span class="p">.</span><span class="n">swSketchTrimCorner</span><span class="p">,</span> <span class="mf">0.0</span><span class="p">,</span> <span class="mf">0.0</span><span class="p">,</span> <span class="mf">0.0</span><span class="p">)</span>
</code></pre></div></div>

<p>In above line, we <strong>Trim</strong> selected <em>Sketch Segments</em> by <code class="language-plaintext highlighter-rouge">SketchTrim</code> method from <em>Solidworks sketch manager</em>.</p>

<p>This <code class="language-plaintext highlighter-rouge">SketchTrim</code> method takes following parameters:</p>

<p><strong>Option</strong> : <em>Sketch trim options as defined in <code class="language-plaintext highlighter-rouge">swSketchTrimChoice_e</code></em></p>

<p>The <code class="language-plaintext highlighter-rouge">swSketchTrimChoice_e</code> we have following options:</p>

<ul>
  <li>
    <p><code class="language-plaintext highlighter-rouge">swSketchTrimClosest</code> : This option Trim Closest selected Sketch Entity.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">swSketchTrimCorner</code> : This option Trim/Extend Corners of selected Sketch Entity.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">swSketchTrimEntities</code> : This option Trim/Delete selected Sketch Entity.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">swSketchTrimEntityPoint</code> : This option migth be Trim selected Sketch Point or Entity. (I did not know what it do!!!)</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">swSketchTrimInside</code> : This option Trim selected Sketch Entity between <strong>two boundaries</strong>.</p>

    <p><strong><em>NOTES</em></strong>: Please note following point for this Trim option:</p>

    <ul>
      <li>
        <p><strong>Lines needed</strong>: For this we need at-least 3 lines.</p>
      </li>
      <li>
        <p><strong>Boudaries</strong>: <strong>1st and 2nd seletced sketch</strong> act as <strong>the Boundaries</strong> for this option.</p>
      </li>
      <li>
        <p><strong>Trim Entity</strong>: <strong>3rd sketch</strong> is <strong>the Trimed entity</strong>. In this option, 3rd sketch between the boundary is trimed.</p>
      </li>
    </ul>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">swSketchTrimOutside</code> : This option Keep selected Sketch Entity between <strong>two boundaries</strong> and Trim outside of the boundaries.</p>

    <p><strong><em>NOTES</em></strong>: Please note following point for this Trim option::</p>

    <ul>
      <li>
        <p><strong>Lines needed</strong>: For this we need at-least 3 lines.</p>
      </li>
      <li>
        <p><strong>Boudaries</strong>: <strong>1st and 2nd seletced sketch</strong> act as <strong>the Boundaries</strong> for this option.</p>
      </li>
      <li>
        <p><strong>Trim Entity</strong>: <strong>3rd sketch</strong> is <strong>the Trimed entity</strong>. In this option, 3rd sketch outside of the boundary is trimed.</p>
      </li>
    </ul>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">swSketchTrimTwoEntities</code> : This option Trim/Delete selected <em>two Sketch Entities</em>.</p>
  </li>
</ul>

<p><strong>X</strong> : <em>X pick location</em></p>

<p><strong>Y</strong> : <em>Y pick location</em></p>

<p><strong>Z</strong> : <em>Z pick location</em></p>

<p><strong>NOTE:</strong></p>

<ul>
  <li>
    <p><em>X, Y and Z arguments</em> are passed in the <code class="language-plaintext highlighter-rouge">swSketchTrimClosest</code> and <code class="language-plaintext highlighter-rouge">swSketchTrimEntityPoint</code> options.</p>
  </li>
  <li>
    <p><em>Z arguments</em> is needed only for <em>3D Sketch</em>.</p>
  </li>
</ul>

<p><strong>Return Value</strong>:</p>

<ul>
  <li>
    <p><strong>True</strong>: If Trim operation is <em>Success</em>.</p>
  </li>
  <li>
    <p><strong>False</strong>: If Trim operation is <em>Fail</em>.</p>
  </li>
</ul>

<p>In our code, I have used following values:</p>

<p><strong>Option</strong> : I have used <code class="language-plaintext highlighter-rouge">swSketchTrimChoice_e.swSketchTrimCorner</code> enumerator as the type of Sketch Trim option.</p>

<p><strong>X</strong> : I have used 0.0 value for <em>X pick location</em>.</p>

<p><strong>Y</strong> : I have used 0.0 value for <em>Y pick location</em>.</p>

<p><strong>Z</strong> : I have used 0.0 value for <em>Z pick location</em>.</p>

<p>Below image shows before and after Trim operation on the sketch.</p>

<p><strong>Before Trim Operation</strong></p>

<p><img src="/assets/Solidworks_Images/trim_and_extend/before_trim.png" alt="before_trim" /></p>

<p><strong>After Trim Operation</strong></p>

<p><img src="/assets/Solidworks_Images/trim_and_extend/after_trim.png" alt="after_trim" /></p>

<hr />

<h3 id="note">NOTE</h3>

<p>It is <strong><em>very important</em></strong> to remember that, when you give distance or any other numeric value in <strong>Solidworks API</strong>, Solidworks takes that numeric value in <strong><em>Meter only</em></strong>.</p>

<p>Solidworks API does not care about your applicationâs Unit systems.</p>

<p>For example, I works in <strong>ANSI</strong> system means inches for distance. But when I used <strong>Solidworks API</strong> through <em>VBA macros or C#</em>, I need to use converted numeric values.</p>

<p>Because Solidworks API output the distance in <strong>Meter</strong> which is not my requirement.</p>

<hr />

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' De-select the Sketch after creation</span>
<span class="n">swDoc</span><span class="p">.</span><span class="n">ClearSelection2</span> <span class="k">True</span>
</code></pre></div></div>

<p>In the above line of code, we deselect the <strong>Sketch</strong> after the <em>Trim</em> operation.</p>

<p>For de-selecting, we use <code class="language-plaintext highlighter-rouge">ClearSelection2</code> method from our Solidworks document name <code class="language-plaintext highlighter-rouge">swDoc</code>.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Show Front View after Sketch Trim</span>
<span class="n">swDoc</span><span class="p">.</span><span class="n">ShowNamedView2</span> <span class="s">""</span><span class="p">,</span> <span class="n">swStandardViews_e</span><span class="p">.</span><span class="n">swFrontView</span>
</code></pre></div></div>

<p>In the above line of code, we update the <em>view orientation</em> to <strong>Front View</strong>.</p>

<p>In my machine, after inserting a sketch view orientation does not changed.</p>

<p>Because of this I have to update the view to <strong>Front view</strong>.</p>

<p>For showing <strong>Front View</strong> we used <code class="language-plaintext highlighter-rouge">ShowNamedView2</code> method from our Solidworks document name <code class="language-plaintext highlighter-rouge">swDoc</code>.</p>

<p>This method takes 2 parameter described as follows:</p>

<ul>
  <li>
    <p><strong>VName</strong> : Name of the view to display or an empty string to use ViewId instead</p>
  </li>
  <li>
    <p><strong>ViewId</strong> : ID of the view to display as defined by <code class="language-plaintext highlighter-rouge">swStandardViews_e</code> or -1 to use the <strong>VName</strong> argument instead.</p>
  </li>
</ul>

<p><em>NOTE:</em> If you specify both <strong>VName</strong> and <strong>ViewId</strong>, then <strong>ViewId</strong> takes precedence if the two arguments do not resolve to the same view.</p>

<p><code class="language-plaintext highlighter-rouge">swStandardViews_e</code> has following Standard View Types:</p>

<ul>
  <li>
    <p><em>swBackView</em></p>
  </li>
  <li>
    <p><em>swBottomView</em></p>
  </li>
  <li>
    <p><em>swDimetricView</em></p>
  </li>
  <li>
    <p><em>swFrontView</em></p>
  </li>
  <li>
    <p><em>swIsometricView</em></p>
  </li>
  <li>
    <p><em>swLeftView</em></p>
  </li>
  <li>
    <p><em>swRightView</em></p>
  </li>
  <li>
    <p><em>swTopView</em></p>
  </li>
  <li>
    <p><em>swTrimetricView</em></p>
  </li>
</ul>

<p>In our code, we did not use <strong>VName</strong> instead I used <em>empty string</em> in form of <strong><em>ââ</em></strong> symbol.</p>

<p>I used <strong>ViewId</strong> value to specify view and used <code class="language-plaintext highlighter-rouge">swStandardViews_e.swFrontView</code> value to use <em>Standard Front View</em>.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Zoom to fit screen in Solidworks Window</span>
<span class="n">swDoc</span><span class="p">.</span><span class="n">ViewZoomtofit</span>
</code></pre></div></div>

<p>In this last line we use <em>zoom to fit</em> command.</p>

<p>For Zoom to fit, we use <code class="language-plaintext highlighter-rouge">ViewZoomtofit</code> method from our Solidworks document variable <code class="language-plaintext highlighter-rouge">swDoc</code>.</p>

<p>This is it !!!</p>

<p>If you found anything to add or update, please let me know on my e-mail.</p>

<hr />

<h2 id="vba-language-feature-used-in-this-post">VBA Language feature used in this post</h2>

<p>In this post used some features of <strong>VBA programming language</strong>.</p>

<p>This section of post, has some brief information about the VBA programming language specific features.</p>

<ol>
  <li>
    <p>We use <strong>Option Explicit</strong> for capturing un-declared variables. If you want to read more about <strong>Option Explicit</strong> then please visit <strong><a href="/vba/declaring-and-scoping-of-variables">Declaring and Scoping of Variables</a></strong>.</p>
  </li>
  <li>
    <p>Then we create <strong>variable</strong> for different data types. If you donât know about them, then please visit <strong><a href="/vba/variables">Variables</a></strong> and <strong><a href="/vba/programming-concepts/#data-types-in-vba">Data-types</a></strong> posts of this blog. These posts will help you to understand what <strong>Variables</strong> are and how to use them.</p>
  </li>
  <li>
    <p>Then we create <strong>main Sub procedure</strong> for our macro. If you donât know about the <strong>Sub procedure</strong>, then I suggest you to visit <strong><a href="/vba/sub-and-function-procedure">VBA Sub and Function Procedures</a></strong> and <strong><a href="/vba/executing-procedures">Executing Sub and Function Procedures</a></strong> posts of this blog. These posts will help you to understand what <strong>Procedures</strong> are and how to use them.</p>
  </li>
  <li>
    <p>In most part we create some variables and set their values. We set those values by using some <strong>functions</strong> provided from objects. If you donât know about the <strong>functions</strong>, then you should visit <strong><a href="/vba/functions">VBA Functions</a></strong> and <strong><a href="/vba/more-functions">VBA Functions that do more</a></strong> posts of this blog. These posts will help you to understand what <strong>functions</strong> are and how to use them.</p>
  </li>
</ol>

<hr />

<h2 id="solidworks-api-objects">Solidworks API Objects</h2>

<p>In this post of <strong>Sketch Trim</strong>, we use <em>Solidworks API objects and their methods</em>.</p>

<p>This section contains the list of all <strong>Solidworks Objects</strong> used in this post.</p>

<p>I have also attached links of these <strong>Solidworks API Objects</strong> in <strong>API Help website</strong>.</p>

<p>If you want to explore those objects, you can use these links.</p>

<p>These Solidworks API Objects are listed below:</p>

<ul>
  <li>
    <p><strong>Solidworks Application Object</strong></p>

    <p>If you want explore <strong><em>Properties and Methods/Functions</em></strong> of <strong>Solidworks Application Object</strong> object you can visit <strong><a href="https://help.solidworks.com/2019/english/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.ISldWorks_members.html">this link</a></strong>.</p>
  </li>
  <li>
    <p><strong>Solidworks Document Object</strong></p>

    <p>If you want explore <strong><em>Properties and Methods/Functions</em></strong> of <strong>Solidworks Document Object</strong> object you can visit <strong><a href="https://help.solidworks.com/2019/english/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.IModelDoc2_members.html">this link</a></strong>.</p>
  </li>
  <li>
    <p><strong>Solidworks Sketch Manager Object</strong></p>

    <p>If you want explore <strong><em>Properties and Methods/Functions</em></strong> of <strong>Solidworks Sketch Manager Object</strong> you can visit <strong><a href="https://help.solidworks.com/2017/english/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.ISketchManager_members.html">this link</a></strong>.</p>
  </li>
  <li>
    <p><strong>Solidworks Sketch Segment Object</strong></p>

    <p>If you want explore <strong><em>Properties and Methods/Functions</em></strong> of <strong>Solidworks Sketch Segment Object</strong> you can visit <strong><a href="https://help.solidworks.com/2019/English/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.ISketchSegment_members.html">this link</a></strong>.</p>
  </li>
</ul>

<hr />

<p>Hope this post helps you to <em>Trim</em> Sketch Entities with Solidworks VB Macros.</p>

<p>For more such tutorials on <strong>Solidworks VBA Macros</strong>, do come to this blog after sometime.</p>

<p>Till then, Happy learning!!!</p>
:ET