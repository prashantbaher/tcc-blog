I"9R<p>In this post, we learn how can we <strong>Open new Assembly and Drawing document</strong> from a Visual Basic for Application’s <strong>Userform</strong>.</p>

<p>For this please we need to do following steps as described below.</p>

<h2 id="video-of-code-on-youtube">Video of Code on YouTube</h2>

<p>Please see below video how visually we <em>Open new Assembly and Drawing document</em> in <strong>Solidworks VBA macro Userform</strong>.</p>

<iframe src="https://www.youtube.com/embed/AQ3Fyw78ExI" frameborder="0" allowfullscreen=""></iframe>
<p><br /></p>

<p>Please note that there are <strong>no explanation</strong> in the video.</p>

<p><strong>Explanation</strong> of each line and why we write code this way is given in this post.</p>

<h2 id="create-a-new-macro">Create a new macro</h2>

<p>1st we need to create a <strong>new macro</strong> in <em>Solidworks 3D CAD Software</em>.</p>

<p>If you don’t know how to create a new macro in Solidworks, please go to <a href="/solidworks-macros/vba-in-solidworks/">VBA in Solidworks</a> post for this.</p>

<p>This will open a new macro in Visual Basic Editor with some code as shown in below image.</p>

<p><img src="/assets/vba-images/Open_assembly_and_drawing_from_Userform/open-new-macro.png" alt="open-new-macro" /></p>

<h2 id="insert-userform-in-the-macro">Insert userform in the macro</h2>

<p>After this we need to insert <em>a userform</em> in our macro.</p>

<p>For this, select the button shown in below image.</p>

<p><img src="/assets/vba-images/Open_assembly_and_drawing_from_Userform/insert-userform-into-macro.png" alt="insert-userform-into-macro" /></p>

<p>This button is called <strong><em>insert userform</em></strong>.</p>

<p>As the name suggest, function of this button is <em>inserting a userform</em>.</p>

<blockquote>
  <p>Please note that in a macro we can insert any number of userform as we like. But for this example we insert only 1 userform.</p>
</blockquote>

<p>After clicking the <strong><em>insert userform</em></strong> button we get the userform window.</p>

<h2 id="adding-controls-into-userform">Adding Controls into Userform</h2>

<p>Now in our userform window, we add following controls:</p>

<ol>
  <li>
    <p><strong>A ComboBox</strong></p>
  </li>
  <li>
    <p><strong>A CommandButton</strong></p>
  </li>
</ol>

<h3 id="adding-combobox">Adding ComboBox</h3>

<p>You can find <code class="language-plaintext highlighter-rouge">ComboBox</code> option, as highlighted in <em>Red Square</em> in below image.</p>

<p><img src="/assets/vba-images/Open_assembly_and_drawing_from_Userform/insert-combox-into-userform.png" alt="insert-combox-into-userform" /></p>

<p>After adding ComboBox, we get window as shown in below image.</p>

<p><img src="/assets/vba-images/Open_assembly_and_drawing_from_Userform/combobox-into-userform.png" alt="combobox-into-userform" /></p>

<h3 id="adding-commandbutton">Adding CommandButton</h3>

<p>You can find <code class="language-plaintext highlighter-rouge">CommandButton</code> option, as highlighted in <em>Red Square</em> in below image.</p>

<p><img src="/assets/vba-images/Open_assembly_and_drawing_from_Userform/insert-command-button-into-userform.png" alt="insert-command-button-into-userform" /></p>

<p>After adding CommandButton, we get window as shown in below image.</p>

<p><img src="/assets/vba-images/Open_assembly_and_drawing_from_Userform/command-button-into-userform.png" alt="command-button-into-userform" /></p>

<h2 id="updating-properties">Updating Properties</h2>

<p>Now we update some properties of following:</p>

<ol>
  <li>
    <p><strong>UserForm</strong></p>
  </li>
  <li>
    <p><strong>ComboBox</strong></p>
  </li>
  <li>
    <p><strong>CommandButton</strong></p>
  </li>
</ol>

<h3 id="updating-properties-of-the-userform">Updating Properties of the UserForm</h3>

<p>We update following properties of the Userform:</p>

<ol>
  <li>
    <p>Name of Userform</p>
  </li>
  <li>
    <p>Caption of Userform</p>
  </li>
</ol>

<p>In below image, I have shown the properties of <code class="language-plaintext highlighter-rouge">Userform1</code> and update the properties:</p>

<p><img src="/assets/vba-images/Open_assembly_and_drawing_from_Userform/update-userform-properties.png" alt="update-userform-properties" /></p>

<p>Update the value of <em>Name</em> property from <code class="language-plaintext highlighter-rouge">UserForm1</code> to <code class="language-plaintext highlighter-rouge">OpenDocumentWindow</code>.</p>

<ul>
  <li>From <em>Name</em> property, we access the Userform.</li>
</ul>

<p>Update the value of <em>Caption</em> property from <code class="language-plaintext highlighter-rouge">UserForm1</code> to <code class="language-plaintext highlighter-rouge">Open Document</code>.</p>

<ul>
  <li>From <em>Caption</em> property, we update the text appears in the window of our Userform.</li>
</ul>

<blockquote>
  <p>Please note that it is <strong>not necessary</strong> to update properties but it is a good habit to update them for our purpose.</p>
</blockquote>

<h3 id="updating-properties-of-the-combobox">Updating Properties of the ComboBox</h3>

<p>Now, we update following property of the ComboBox:</p>

<ol>
  <li>Name of ComboBox</li>
</ol>

<p>In below image, I have shown the properties of <code class="language-plaintext highlighter-rouge">ComboBox1</code> and update the properties:</p>

<p><img src="/assets/vba-images/Open_assembly_and_drawing_from_Userform/update-combobox-properties.png" alt="update-combobox-properties" /></p>

<p>Update the value of <em>Name</em> property from <code class="language-plaintext highlighter-rouge">ComboBox1</code> to <code class="language-plaintext highlighter-rouge">DocumentTypeComboBox</code>.</p>

<ul>
  <li>From <em>Name</em> property, we access the ComboBox.</li>
</ul>

<h3 id="updating-properties-of-the-command-button">Updating Properties of the Command Button</h3>

<p>Now, we update following property of the Command Button:</p>

<ol>
  <li>
    <p>Name of Command Button</p>
  </li>
  <li>
    <p>Caption of Command Button</p>
  </li>
</ol>

<p>In below image, I have shown the properties of <code class="language-plaintext highlighter-rouge">CommandButton1</code> and update the properties:</p>

<p><img src="/assets/vba-images/Open_assembly_and_drawing_from_Userform/update-command-button-properties.png" alt="update-command-button-properties" /></p>

<p>Update the value of <em>Name</em> property from <code class="language-plaintext highlighter-rouge">CommandButton1</code> to <code class="language-plaintext highlighter-rouge">OpenDocumentButton</code>.</p>

<blockquote>
  <p>From <em>Name</em> property, we access the Command Button.</p>
</blockquote>

<p>Update the value of <em>Caption</em> property from <code class="language-plaintext highlighter-rouge">CommandButton1</code> to <code class="language-plaintext highlighter-rouge">Open Selected Document</code>.</p>

<blockquote>
  <p>From <em>Caption</em> property, we update the text appears in the Command Button of our Userform.</p>
</blockquote>

<h2 id="calling-userform-in-main-module">Calling UserForm in Main Module</h2>

<p>Now, we need to call the our <em>Userform</em> inside main <strong><em>module</em></strong>.</p>

<p>For this goto main <code class="language-plaintext highlighter-rouge">Sub procedure</code> inside the <strong>main Module</strong>.</p>

<p>Code inside the main Module is as given below.</p>

<figure class="highlight"><pre><code class="language-vb" data-lang="vb"><span class="k">Dim</span> <span class="nv">swApp</span> <span class="ow">As</span> <span class="kt">Object</span>
<span class="k">Sub</span> <span class="nf">main</span><span class="p">()</span>

<span class="k">Set</span> <span class="n">swApp</span> <span class="o">=</span> <span class="n">Application</span><span class="p">.</span><span class="n">SldWorks</span>
<span class="k">End</span> <span class="k">Sub</span></code></pre></figure>

<p>To call our <code class="language-plaintext highlighter-rouge">Userform</code>, replace above code with below code:</p>

<figure class="highlight"><pre><code class="language-vb" data-lang="vb"><span class="c1">' Main function of our VBA program</span>
<span class="k">Sub</span> <span class="nf">main</span><span class="p">()</span>
  <span class="c1">' Calling our window to show</span>
  <span class="n">OpenDocumentWindow</span><span class="p">.</span><span class="n">Show</span>
<span class="k">End</span> <span class="k">Sub</span></code></pre></figure>

<p>Above function call our window to appears on screen.</p>

<p>When the window appears on screen, we <em>1st</em> select the document we want to <em>open</em> and <em>then</em> hit the button to open selected document.</p>

<h2 id="adding-document-list">Adding Document list</h2>

<p>Before anything we need to <em>add</em> a <em>list</em> of documents inside our combobox.</p>

<p>From this list, we select the document which we want to open.</p>

<p>In this post, we are listing only “<strong>Assembly</strong>” and “<strong>Drawing</strong>” documents.</p>

<p>For “<strong>Part</strong>” document, I will give you a simple exercise.</p>

<p>To add documents list inside our combobox, we 1st need to go in <strong>Code Window</strong> of userform.</p>

<p>For this, we need to <strong>right click</strong> on userform and select “<strong>View Code</strong>” option.</p>

<p>Please see below image for “<em>how to open code window of userform</em>”.</p>

<p><img src="/assets/vba-images/Open_assembly_and_drawing_from_Userform/select-view-code-option.png" alt="select-view-code-option" /></p>

<p>After selecting “<strong>View Code</strong>” a <em>Code window</em> appears, which is shown in below image.</p>

<p><img src="/assets/vba-images/Open_assembly_and_drawing_from_Userform/behind-userform-code-window.png" alt="behind-userform-code-window" /></p>

<p>Now <em>before</em> adding document list we need to understand <strong>one important thing</strong>!!!</p>

<p>We want to add document list, when we <strong>load</strong> our <code class="language-plaintext highlighter-rouge">Userform</code>.</p>

<p>For this we need to create an <code class="language-plaintext highlighter-rouge">Initialize Function</code>.</p>

<p>Below <code class="language-plaintext highlighter-rouge">Code</code> is that <code class="language-plaintext highlighter-rouge">Initialize Function</code> which load document lists in our combobox.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Call when user load</span>
<span class="k">Private</span> <span class="k">Sub</span> <span class="nf">UserForm_Initialize</span><span class="p">()</span>
  <span class="c1">' Adding items in Combo Box and also set index to '0'</span>
  <span class="c1">' '0' index means by default we can see "Assembly Document" as already filled</span>
  <span class="k">With</span> <span class="n">DocumentTypeComboBox</span>
    <span class="p">.</span><span class="n">AddItem</span> <span class="s">"Assembly Document"</span>    <span class="c1">' Adding Assembly Document in Combo Box</span>
    <span class="p">.</span><span class="n">AddItem</span> <span class="s">"Drawing Document"</span>     <span class="c1">' Adding Drawing Document in Combo Box</span>
    <span class="p">.</span><span class="n">ListIndex</span> <span class="o">=</span> <span class="mi">0</span>                  <span class="c1">' Select list index for default value to show in combobox</span>
  <span class="k">End</span> <span class="k">With</span>
<span class="k">End</span> <span class="k">Sub</span>
</code></pre></div></div>

<p>Now, above code is <strong><em>fully commented</em></strong> and <strong><em>self explanatory</em></strong> hence I will not explain it.</p>

<h2 id="first-test-of-macro">First Test of Macro</h2>

<p>After writing code sample in previous section, we will test if every thing is working correct?</p>

<p>By working correct means:</p>

<ol>
  <li>
    <p>When we <code class="language-plaintext highlighter-rouge">Run</code> macro, is <strong>Open Document</strong> window appears or not?</p>
  </li>
  <li>
    <p>If window appears, then combobox has documents listed in it?</p>
  </li>
  <li>
    <p>If both item listed, then “<strong>Assembly document</strong>” is showing as pre-filled value or not?</p>
  </li>
  <li>
    <p>Since we have not given any functionality to “<strong>Open Document</strong>” button, hence it should not any done anything when clicking!!!</p>
  </li>
</ol>

<p>For testing all the above points we need to <code class="language-plaintext highlighter-rouge">Run</code> the macro as shown in below image.</p>

<p><img src="/assets/vba-images/Open_assembly_and_drawing_from_Userform/first-test-of-macro.png" alt="first-test-of-macro" /></p>

<p>After running the window we got a window as shown in below image.</p>

<p><img src="/assets/vba-images/Open_assembly_and_drawing_from_Userform/sample-userform-window.png" alt="sample-userform-window" /></p>

<p>Please <strong><em>do check</em></strong> if your macro is running perfectly till now or not!</p>

<p>If not, then I suggest you to read this article again.</p>

<h2 id="add-functionality-to-open-newpart-button">Add Functionality to Open NewPart Button</h2>

<p>To add functionality in our <code class="language-plaintext highlighter-rouge">Open Selected Button</code>, just double click the <code class="language-plaintext highlighter-rouge">Open NewPart Button</code>.</p>

<p>This will add give some code behind the designer and opens the <strong>code window</strong> of Userform designer.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">Private</span> <span class="k">Sub</span> <span class="nf">OpenDocumentButton_Click</span><span class="p">()</span>

<span class="k">End</span> <span class="k">Sub</span>
</code></pre></div></div>

<p>We need to update this code for opening new part after clicking the button.</p>

<p>For this replace all above code with below code.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">Option</span> <span class="n">Explicit</span>

<span class="c1">' Creating variable for Solidworks application</span>
<span class="k">Dim</span> <span class="nv">swApp</span> <span class="ow">As</span> <span class="n">SldWorks</span><span class="p">.</span><span class="n">SldWorks</span>
<span class="c1">' Creating variable for Solidworks document</span>
<span class="k">Dim</span> <span class="nv">swDoc</span> <span class="ow">As</span> <span class="n">SldWorks</span><span class="p">.</span><span class="n">ModelDoc2</span>

<span class="c1">' Private function of Open New Part Button </span>
<span class="k">Private</span> <span class="k">Sub</span> <span class="nf">OpenDocumentButton_Click</span><span class="p">()</span>

  <span class="c1">' Setting Solidworks variable to Solidworks application</span>
  <span class="k">Set</span> <span class="n">swApp</span> <span class="o">=</span> <span class="n">Application</span><span class="p">.</span><span class="n">SldWorks</span>
  
  <span class="c1">' Creating string type variable for storing default Assembly location</span>
  <span class="k">Dim</span> <span class="nv">defaultTemplate</span> <span class="ow">As</span> <span class="kt">String</span>
  
  <span class="k">If</span> <span class="n">DocumentTypeComboBox</span><span class="p">.</span><span class="n">Value</span> <span class="o">=</span> <span class="s">"Assembly Document"</span> <span class="k">Then</span>
    <span class="c1">' Setting value of this string type variable to "Default Assembly template"</span>
    <span class="n">defaultTemplate</span> <span class="o">=</span> <span class="n">swApp</span><span class="p">.</span><span class="n">GetUserPreferenceStringValue</span><span class="p">(</span><span class="n">swUserPreferenceStringValue_e</span><span class="p">.</span><span class="n">swDefaultTemplateAssembly</span><span class="p">)</span>
  <span class="k">Else</span>
    <span class="c1">' Setting value of this string type variable to "Default drawing template" without define paper size</span>
    <span class="n">defaultTemplate</span> <span class="o">=</span> <span class="n">swApp</span><span class="p">.</span><span class="n">GetUserPreferenceStringValue</span><span class="p">(</span><span class="n">swUserPreferenceStringValue_e</span><span class="p">.</span><span class="n">swDefaultTemplateDrawing</span><span class="p">)</span>
  <span class="k">End</span> <span class="k">If</span>

  <span class="c1">' Setting Solidworks document to new Assembly document</span>
  <span class="k">Set</span> <span class="n">swDoc</span> <span class="o">=</span> <span class="n">swApp</span><span class="p">.</span><span class="n">NewDocument</span><span class="p">(</span><span class="n">defaultTemplate</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
  
  <span class="c1">' Hiding the Window after opening the selected document</span>
  <span class="n">OpenDocumentWindow</span><span class="p">.</span><span class="n">Hide</span>
  
  <span class="c1">' Reset the Index of Combo Box to "0" again</span>
  <span class="n">DocumentTypeComboBox</span><span class="p">.</span><span class="n">ListIndex</span> <span class="o">=</span> <span class="mi">0</span>
    
<span class="k">End</span> <span class="k">Sub</span>
</code></pre></div></div>

<p>Now I have added codes in <strong>2 parts</strong>.</p>

<p>In <strong>1st part</strong> I added below code lines <em>at top</em> of the code window.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">Option</span> <span class="n">Explicit</span>

<span class="c1">' Creating variable for Solidworks application</span>
<span class="k">Dim</span> <span class="nv">swApp</span> <span class="ow">As</span> <span class="n">SldWorks</span><span class="p">.</span><span class="n">SldWorks</span>
<span class="c1">' Creating variable for Solidworks document</span>
<span class="k">Dim</span> <span class="nv">swDoc</span> <span class="ow">As</span> <span class="n">SldWorks</span><span class="p">.</span><span class="n">ModelDoc2</span>
</code></pre></div></div>

<p>Please see below image for more reference.</p>

<p><img src="/assets/vba-images/Open_assembly_and_drawing_from_Userform/add-code-at-top-of-userform-codewindow.png" alt="add-code-at-top-of-userform-codewindow" /></p>

<p>In <strong>2nd part</strong> I added <code class="language-plaintext highlighter-rouge">OpenDocumentButton_Click</code> function in the code window as shown in below image.</p>

<p><img src="/assets/vba-images/Open_assembly_and_drawing_from_Userform/code-when-button-clicked.png" alt="code-when-button-clicked" /></p>

<p>I have already explained code inside <code class="language-plaintext highlighter-rouge">OpenDocumentButton_Click</code> function in <a href="/solidworks-macros/open-assembly-and-drawing">Open Assembly and Drawing document</a>.</p>

<p>But here, I have added a condition which is shown in Red colored box in below image.</p>

<p><img src="/assets/vba-images/Open_assembly_and_drawing_from_Userform/condition-that-control-opening-document.png" alt="condition-that-control-opening-document" /></p>

<p>Basically, this condition stated that, if we select “<em>Assembly Document</em>” in combobox, then by clicking “<em>Open Select Document</em>” button our macro open “<strong>Assembly</strong>” document in <em>Solidworks</em>.</p>

<p>Otherwise, it will always open “<strong>Drawing</strong>” document in <em>Solidworks</em>.</p>

<p>The above code will <em>open New part document</em> when we click the button.</p>

<p><code class="language-plaintext highlighter-rouge">Run</code> the macro, and check wheather our macro is working correct document or not!!</p>

<p>If not, send your macro and I will guide you in doing it correctly!</p>

<h2 id="exercise-to-do">Exercise to do</h2>

<p>For those who wants to do more I have an exercise!!</p>

<ol>
  <li>
    <p>Add “<strong>Part Document</strong>” in ComboBox list.</p>
  </li>
  <li>
    <p>Make “<strong>Part Document</strong>” as <em>pre-filled</em> value in ComboBox.</p>
  </li>
  <li>
    <p>Change the <strong>conditional statement</strong>, so that it can handle <strong>all 3 conditions</strong>!!</p>
  </li>
</ol>

<p>Send me the Code of macro in my below <strong>e-mail</strong> and I will <strong><em>verify</em></strong> it.</p>

<p>That’s it for now.</p>

<p>Hope you learn some use of Userforms and by this post you can get the idea how they works.</p>

<p>I will provide more tutorials on using of Userform time to time.</p>

<p><strong><em>Till then do come to visit this blog and Happy learning!!!</em></strong></p>

:ET