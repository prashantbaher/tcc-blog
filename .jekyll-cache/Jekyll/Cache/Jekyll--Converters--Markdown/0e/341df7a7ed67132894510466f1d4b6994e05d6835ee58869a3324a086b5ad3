I"'|<h2 id="introduction">Introduction</h2>

<p>In this article, we learn <strong>how to browse SOLIDWORKS file(s)</strong> from a <strong>SOLIDWORKS VBA Userform</strong>.</p>

<p>In this article, I explain about <strong><em>2 different methods</em></strong> which are listed below.</p>

<ol>
  <li>
    <p>From <code class="language-plaintext highlighter-rouge">SldWorks</code> object directly.</p>
  </li>
  <li>
    <p>From <strong>Microsoft Excel</strong> externally.</p>
  </li>
</ol>

<p>Methods from these objects are <strong><em>updated</em></strong> methods, hence <strong><em>use any one of them</em></strong> for browsing SOLIDWORKS file(s).</p>

<hr />
<!--
## Video of Code on YouTube

Please see below video how visually we *browse SOLIDWORKS file(s)* in **SOLIDWORKS VBA Userform**.

<iframe src="https://www.youtube.com/embed/AQ3Fyw78ExI" frameborder="0" allowfullscreen></iframe>
<br>

Please note that there are **no explanation** in the video. 

**Explanation** of each line and why we write code this way is given in this post.

---
-->

<h2 id="creating-userform">Creating Userform</h2>

<p>1st we need to create a <strong>new macro</strong> in <em>SOLIDWORKS</em>.</p>

<p>If you don’t know how to create a new macro in Solidworks, please go to <strong><a href="/solidworks-macros/vba-in-solidworks">VBA in Solidworks</a></strong> post for this.</p>

<p>This opens a <strong>Visual Basic Editor</strong> with some code as shown in below image.</p>

<p><img src="/assets/vba-images/browse-solidworks-files/solidworks-vba-window.png" alt="solidworks-vba-window" /></p>

<p>After this we need to insert <em>a userform</em> in our macro.</p>

<p>For this, select the button shown in below image.</p>

<p><img src="/assets/vba-images/browse-solidworks-files/insert-userform-button.png" alt="insert-userform-button" /></p>

<p>This button is called <strong><em>insert userform</em></strong>.</p>

<p>As the name suggest, function of this button is <em>inserting a userform</em>.</p>

<blockquote>
  <p>Please note that in a macro we can insert any number of userform as we like. But for this example we insert only 1 userform.</p>
</blockquote>

<p>After clicking the <strong><em>insert userform</em></strong> button we get the userform window as shown in above image.</p>

<hr />

<h2 id="adding-controls-into-userform">Adding Controls into Userform</h2>

<p>Now in our userform window, we add following controls:</p>

<ol>
  <li>
    <p><strong>A TextBox</strong></p>
  </li>
  <li>
    <p><strong>A CommandButton</strong></p>
  </li>
</ol>

<h3 id="adding-combobox">Adding ComboBox</h3>

<p>You can find <code class="language-plaintext highlighter-rouge">TextBox</code> option, as highlighted in <em>Red Square</em> in below image.</p>

<p><img src="/assets/vba-images/browse-solidworks-files/textbox-in-userform.png" alt="textbox-in-userform" /></p>

<p>After adding ComboBox, we get window as shown in below image.</p>

<p><img src="/assets/vba-images/browse-solidworks-files/textbox-inside-userform.png" alt="textbox-inside-userform" /></p>

<h3 id="adding-commandbutton">Adding CommandButton</h3>

<p>You can find <code class="language-plaintext highlighter-rouge">CommandButton</code> option, as highlighted in <em>Red Square</em> in below image.</p>

<p><img src="/assets/vba-images/browse-solidworks-files/insert-command-button-into-userform.png" alt="insert-command-button-into-userform" /></p>

<p>After adding CommandButton, we get window as shown in below image.</p>

<p><img src="/assets/vba-images/browse-solidworks-files/command-button-into-userform.png" alt="command-button-into-userform" /></p>

<hr />

<h2 id="updating-properties">Updating Properties</h2>

<p>Now we update some properties of following:</p>

<ol>
  <li>
    <p><strong>Userform</strong></p>
  </li>
  <li>
    <p><strong>TextBox</strong></p>
  </li>
  <li>
    <p><strong>CommandButton</strong></p>
  </li>
</ol>

<h3 id="update-userform-properties">Update Userform Properties</h3>

<p>We update following properties of the Userform:</p>

<ol>
  <li>
    <p>Name of Userform</p>
  </li>
  <li>
    <p>Caption of Userform</p>
  </li>
</ol>

<p>In below image, I have shown the properties of <code class="language-plaintext highlighter-rouge">Userform1</code> and update the properties:</p>

<p><img src="/assets/vba-images/browse-solidworks-files/update-userform-properties.png" alt="update-userform-properties" /></p>

<p>Update the value of <em>Name</em> property from <code class="language-plaintext highlighter-rouge">UserForm1</code> to <code class="language-plaintext highlighter-rouge">BrowseDocumentWindow</code>.</p>

<ul>
  <li>From <em>Name</em> property, we access the Userform.</li>
</ul>

<p>Update the value of <em>Caption</em> property from <code class="language-plaintext highlighter-rouge">UserForm1</code> to <code class="language-plaintext highlighter-rouge">Browse Document</code>.</p>

<ul>
  <li>From <em>Caption</em> property, we update the text appears in the window of our Userform.</li>
</ul>

<blockquote>
  <p>Please note that it is <strong>not necessary</strong> to update properties but it is a good habit to update them for our purpose.</p>
</blockquote>

<h3 id="update-textbox-properties">Update TextBox Properties</h3>

<p>We update following property of the TextBox:</p>

<ol>
  <li>Name of TextBox</li>
</ol>

<p>In below image, I have shown the properties of <code class="language-plaintext highlighter-rouge">TextBox</code> and update the properties:</p>

<p><img src="/assets/vba-images/browse-solidworks-files/update-textbox-properties.png" alt="update-textbox-properties" /></p>

<p>Update the value of <em>Name</em> property from <code class="language-plaintext highlighter-rouge">TextBox</code> to <code class="language-plaintext highlighter-rouge">SelectedFileTextBox</code>.</p>

<ul>
  <li>From <em>Name</em> property, we access the TextBox <em>properties</em> like <strong>Text</strong> we want to show.</li>
</ul>

<h3 id="update-commandbutton-properties">Update CommandButton Properties</h3>

<p>We update following properties of the Command Button:</p>

<ol>
  <li>
    <p>Name of Command Button</p>
  </li>
  <li>
    <p>Caption of Command Button</p>
  </li>
</ol>

<p>In below image, I have shown the properties of <code class="language-plaintext highlighter-rouge">CommandButton1</code> and update the properties:</p>

<p><img src="/assets/vba-images/browse-solidworks-files/update-command-button-properties.png" alt="update-command-button-properties" /></p>

<p>Update the value of <em>Name</em> property from <code class="language-plaintext highlighter-rouge">CommandButton1</code> to <code class="language-plaintext highlighter-rouge">BrowseDocumentButton</code>.</p>

<blockquote>
  <p>From <em>Name</em> property, we access the Command Button.</p>
</blockquote>

<p>Update the value of <em>Caption</em> property from <code class="language-plaintext highlighter-rouge">CommandButton1</code> to <code class="language-plaintext highlighter-rouge">Browse SOLIDOWRKS File(s)</code>.</p>

<blockquote>
  <p>From <em>Caption</em> property, we update the text appears in the Command Button of our Userform.</p>
</blockquote>

<hr />

<h2 id="call-userform-in-main-module">Call UserForm in Main Module</h2>

<p>Now, we need to call the our <em>Userform</em> inside main <strong><em>module</em></strong>.</p>

<p>For this goto main <code class="language-plaintext highlighter-rouge">Sub procedure</code> inside the <strong>main Module</strong>.</p>

<p>Code inside the main Module is as given below.</p>

<figure class="highlight"><pre><code class="language-vb" data-lang="vb"><span class="k">Dim</span> <span class="nv">swApp</span> <span class="ow">As</span> <span class="kt">Object</span>
<span class="k">Sub</span> <span class="nf">main</span><span class="p">()</span>

<span class="k">Set</span> <span class="n">swApp</span> <span class="o">=</span> <span class="n">Application</span><span class="p">.</span><span class="n">SldWorks</span>
<span class="k">End</span> <span class="k">Sub</span></code></pre></figure>

<p>To call our <code class="language-plaintext highlighter-rouge">Userform</code>, replace above code with below code:</p>

<figure class="highlight"><pre><code class="language-vb" data-lang="vb"><span class="c1">' Main function of our VBA program</span>
<span class="k">Sub</span> <span class="nf">main</span><span class="p">()</span>
  <span class="c1">' Calling our window to show</span>
  <span class="n">BrowseDocumentWindow</span><span class="p">.</span><span class="n">Show</span>
<span class="k">End</span> <span class="k">Sub</span></code></pre></figure>

<p>Above function call our window to appears on screen.</p>

<p>When the window appears on screen, we hit the <em>Browse button</em> to browse SOLIDWORKS File(s).</p>

<hr />

<h2 id="add-functionality-to-button">Add Functionality to Button</h2>

<p>To add functionality in our <code class="language-plaintext highlighter-rouge">BrowseDocumentButton</code>, just double click the <em>button</em>.</p>

<p>This will add some code behind the designer.</p>

<p>Now open the <strong>code window</strong> of Userform designer.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">Private</span> <span class="k">Sub</span> <span class="nf">CommandButton1_Click</span><span class="p">()</span>

<span class="k">End</span> <span class="k">Sub</span>
</code></pre></div></div>

<p>We need to update this code for opening new part after clicking the button.</p>

<h2 id="method-1---from-sldworks-object-directly">Method 1 - From <code class="language-plaintext highlighter-rouge">SldWorks</code> object directly</h2>

<p>For this replace all above code with below code.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">Option</span> <span class="n">Explicit</span>

<span class="c1">' Creating variable for Solidworks application</span>
<span class="k">Dim</span> <span class="nv">swApp</span> <span class="ow">As</span> <span class="n">SldWorks</span><span class="p">.</span><span class="n">SldWorks</span>

<span class="c1">' Private function of Open New Part Button</span>
<span class="k">Private</span> <span class="k">Sub</span> <span class="nf">BrowseDocumentButton_Click</span><span class="p">()</span>

  <span class="c1">' Setting Solidworks variable to Solidworks application</span>
  <span class="k">Set</span> <span class="n">swApp</span> <span class="o">=</span> <span class="n">Application</span><span class="p">.</span><span class="n">SldWorks</span>
  
  <span class="c1">' Solidworks file filter string</span>
  <span class="k">Dim</span> <span class="nv">swFilter</span> <span class="ow">As</span> <span class="kt">String</span>
  
  <span class="c1">' Method parameters</span>
  <span class="k">Dim</span> <span class="nv">fileName</span> <span class="ow">As</span> <span class="kt">String</span>
  <span class="k">Dim</span> <span class="nv">fileConfig</span> <span class="ow">As</span> <span class="kt">String</span>
  <span class="k">Dim</span> <span class="nv">fileDispName</span> <span class="ow">As</span> <span class="kt">String</span>
  <span class="k">Dim</span> <span class="nv">fileOptions</span> <span class="ow">As</span> <span class="kt">Long</span>

  <span class="c1">' Set filters for different Solidworks files.</span>
  <span class="n">swFilter</span> <span class="o">=</span> <span class="s">"SOLIDWORKS Files (*.sldprt; *.sldasm; *.slddrw)|*.sldprt;*.sldasm;*.slddrw"</span>
  
  <span class="c1">' Browse and get the Selected file name</span>
  <span class="n">fileName</span> <span class="o">=</span> <span class="n">swApp</span><span class="p">.</span><span class="n">GetOpenFileName</span><span class="p">(</span><span class="s">"Browse Document"</span><span class="p">,</span> <span class="s">""</span><span class="p">,</span> <span class="n">swFilter</span><span class="p">,</span> <span class="n">fileOptions</span><span class="p">,</span> <span class="n">fileConfig</span><span class="p">,</span> <span class="n">fileDispName</span><span class="p">)</span>

  <span class="c1">' Show the selected file's full path in text box</span>
  <span class="n">SelectedFileTextBox</span><span class="p">.</span><span class="n">Text</span> <span class="o">=</span> <span class="n">fileName</span>
    
<span class="k">End</span> <span class="k">Sub</span>
</code></pre></div></div>

<hr />

<h3 id="understanding-method-1">Understanding Method 1</h3>

<p>Now let us walk through <strong>each line</strong> in the above code, and <strong>understand</strong> the meaning and purpose of every line.</p>

<p>I also give some link so that you can go through them if there are anything I explained in <strong>previous posts</strong>.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">Option</span> <span class="n">Explicit</span>
</code></pre></div></div>

<p>This line forces us to define every variable we are going to use.</p>

<p>For more information please visit <strong><a href="/solidworks-macros/open-new-document">Solidworks Macros - Open new Part document</a></strong> post.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Create variable for Solidworks application</span>
<span class="k">Dim</span> <span class="nv">swApp</span> <span class="ow">As</span> <span class="n">SldWorks</span><span class="p">.</span><span class="n">SldWorks</span>
</code></pre></div></div>

<p>In this line, we create a variable which we named as <code class="language-plaintext highlighter-rouge">swApp</code> and the type of this <code class="language-plaintext highlighter-rouge">swApp</code> variable is <code class="language-plaintext highlighter-rouge">SldWorks.SldWorks</code>.</p>

<p>Next is our button click event <code class="language-plaintext highlighter-rouge">BrowseDocumentButton_Click</code> procedure.</p>

<p>This procedure hold all the <em>statements (instructions)</em> we give to computer.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Set Solidworks variable to Solidworks application</span>
<span class="k">Set</span> <span class="n">swApp</span> <span class="o">=</span> <span class="n">Application</span><span class="p">.</span><span class="n">SldWorks</span>
</code></pre></div></div>

<p>In this line, we set the value of our Solidworks variable <code class="language-plaintext highlighter-rouge">swApp</code>; which we define earlier; to Solidworks application.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Solidworks file filter string</span>
<span class="k">Dim</span> <span class="nv">swFilter</span> <span class="ow">As</span> <span class="kt">String</span>

<span class="c1">' Method parameters</span>
<span class="k">Dim</span> <span class="nv">fileName</span> <span class="ow">As</span> <span class="kt">String</span>
<span class="k">Dim</span> <span class="nv">fileConfig</span> <span class="ow">As</span> <span class="kt">String</span>
<span class="k">Dim</span> <span class="nv">fileDispName</span> <span class="ow">As</span> <span class="kt">String</span>
<span class="k">Dim</span> <span class="nv">fileOptions</span> <span class="ow">As</span> <span class="kt">Long</span>
</code></pre></div></div>

<p>In above lines of code, we create SOLIDWORKS <em>files filter</em> string and <em>Method parameters</em>.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Set filters for different Solidworks files.</span>
<span class="n">Filter</span> <span class="o">=</span> <span class="s">"SOLIDWORKS Files (*.sldprt; *.sldasm; *.slddrw)|*.sldprt;*.sldasm;*.slddrw"</span>
</code></pre></div></div>

<p>In above line of code, we set filters for different SOLIDWORKS files.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Browse and get the Selected file name</span>
<span class="n">fileName</span> <span class="o">=</span> <span class="n">swApp</span><span class="p">.</span><span class="n">GetOpenFileName</span><span class="p">(</span><span class="s">"Browse Document"</span><span class="p">,</span> <span class="s">""</span><span class="p">,</span> <span class="n">swFilter</span><span class="p">,</span> <span class="n">fileOptions</span><span class="p">,</span> <span class="n">fileConfig</span><span class="p">,</span> <span class="n">fileDispName</span><span class="p">)</span>
</code></pre></div></div>

<p>For “<strong>Browse and get the Selected file name</strong>”, we use <code class="language-plaintext highlighter-rouge">GetOpenFileName</code> method from <strong>Solidworks</strong> <code class="language-plaintext highlighter-rouge">SldWorks</code> object.</p>

<p>This <code class="language-plaintext highlighter-rouge">GetOpenFileName</code> method takes following parameters as explained:</p>

<ul>
  <li>
    <p><strong>DialogTitle</strong> : <em>Title of the dialog.</em></p>
  </li>
  <li>
    <p><strong>InitialFileName</strong> : <em>Path and file name of the file to open.</em></p>
  </li>
  <li>
    <p><strong>FileFilter</strong> : <em>File name extension of the file to open.</em></p>
  </li>
  <li>
    <p><strong>OpenOptions</strong> : <em>Not used.</em></p>
  </li>
  <li>
    <p><strong>ConfigName</strong> : <em>Name of the configuration.</em></p>
  </li>
  <li>
    <p><strong>DisplayName</strong> : <em>Recommended file name to use.</em></p>
  </li>
</ul>

<p>After the function complete following are the results:</p>

<p><strong>Return Value</strong>:</p>

<ul>
  <li><em>Path and file name of the file to open.</em></li>
</ul>

<p>Below image shows our <strong>form</strong> in SOLIDWORKS.</p>

<p><img src="/assets/vba-images/browse-solidworks-files/userform-in-solidworks.png" alt="userform-in-solidworks" title="Our userform in Solidworks" /></p>

<p>Below image shows the opened window.</p>

<p><img src="/assets/vba-images/browse-solidworks-files/browse-window.png" alt="browse-window" title="Browsing window" /></p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Show the selected file's full path in text box</span>
<span class="n">SelectedFileTextBox</span><span class="p">.</span><span class="n">Text</span> <span class="o">=</span> <span class="n">fileName</span>
</code></pre></div></div>

<p>Now we set the value of text box to <strong>browsed</strong> file name.</p>

<p>Final window of method 1 is shown below/.</p>

<p><img src="/assets/vba-images/browse-solidworks-files/final-window-of-method-first.png" alt="final-window-of-method-first" title="Final window from Method 1" /></p>

<hr />

<h2 id="method-2---from-microsoft-excel-externally">Method 2 - From <strong>Microsoft Excel</strong> externally</h2>

<p><strong>Prerequisite</strong>:</p>

<ol>
  <li>
    <p><strong>Office 365</strong></p>
  </li>
  <li>
    <p><strong>Following below steps carefully</strong></p>
  </li>
</ol>

<p>For this method we need to use <strong>Microsoft Excel</strong> from SOLIDWORKS.</p>

<p>For using <strong>Microsoft Excel</strong>, we need to add reference files.</p>

<p>Please see following steps for adding reference files:</p>

<ol>
  <li>Select reference option as shown in below image.</li>
</ol>

<p><img src="/assets/vba-images/browse-solidworks-files/select-reference-option.png" alt="select-reference-option" title="Select reference option from Tools options" /></p>

<ol>
  <li>This open Reference window as shown in below image.</li>
</ol>

<p><img src="/assets/vba-images/browse-solidworks-files/reference-window.png" alt="reference-window" title="Reference window" /></p>

<ol>
  <li>Now select option given in below images and Press OK after selecting files..</li>
</ol>

<p><img src="/assets/vba-images/browse-solidworks-files/add-excel-reference.png" alt="add-excel-reference" title="Select reference file highlighted in red box" /></p>

<p>Now, replace code in <em><a href="#add-functionality-to-button">Add Functionality to Button</a></em> with below code sample.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">Option</span> <span class="n">Explicit</span>

<span class="c1">' Private function of Open New Part Button</span>
<span class="k">Private</span> <span class="k">Sub</span> <span class="nf">BrowseDocumentButton_Click</span><span class="p">()</span>
    
  <span class="c1">' Excel object</span>
  <span class="k">Dim</span> <span class="nv">xlObj</span> <span class="ow">As</span> <span class="kt">Object</span>
  
  <span class="c1">' File dialog object</span>
  <span class="k">Dim</span> <span class="nv">fDialog</span> <span class="ow">As</span> <span class="kt">Object</span>
  
  <span class="c1">' File name sting</span>
  <span class="k">Dim</span> <span class="nv">strFile</span> <span class="ow">As</span> <span class="kt">String</span>
  
  <span class="c1">' Create Excel object</span>
  <span class="k">Set</span> <span class="n">xlObj</span> <span class="o">=</span> <span class="n">CreateObject</span><span class="p">(</span><span class="s">"Excel.Application"</span><span class="p">)</span>
  
  <span class="c1">' Create File dialog object by setting option 3</span>
  <span class="k">Set</span> <span class="n">fDialog</span> <span class="o">=</span> <span class="n">xlObj</span><span class="p">.</span><span class="n">FileDialog</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span>
  
  <span class="c1">' Setting different properties of file dialog</span>
  <span class="k">With</span> <span class="n">fDialog</span>
    <span class="p">.</span><span class="n">Title</span> <span class="o">=</span> <span class="s">"Browse Document"</span>  <span class="c1">' Title of window</span>
    <span class="p">.</span><span class="n">AllowMultiSelect</span> <span class="o">=</span> <span class="k">True</span>    <span class="c1">' Allowing multiple select</span>
    <span class="p">.</span><span class="n">Filters</span><span class="p">.</span><span class="n">Clear</span>              <span class="c1">' Clear the filters</span>
    <span class="p">.</span><span class="n">Filters</span><span class="p">.</span><span class="n">Add</span> <span class="s">"SOLIDWORKS Files"</span><span class="p">,</span> <span class="s">"*.sldprt; *.sldasm; *.slddrw"</span>       <span class="c1">' Add filters for Solidworks files</span>
      <span class="k">If</span> <span class="p">.</span><span class="n">Show</span> <span class="k">Then</span>
        <span class="n">strFile</span> <span class="o">=</span> <span class="p">.</span><span class="n">SelectedItems</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
      <span class="k">Else</span>
        <span class="n">strFile</span> <span class="o">=</span> <span class="n">vbNullString</span>
      <span class="k">End</span> <span class="k">If</span>
  <span class="k">End</span> <span class="k">With</span>
    
  <span class="c1">' Show the selected file's full path in text box</span>
  <span class="n">SelectedFileTextBox</span><span class="p">.</span><span class="n">Text</span> <span class="o">=</span> <span class="n">strFile</span>
    
<span class="k">End</span> <span class="k">Sub</span>
</code></pre></div></div>

<hr />

<h3 id="understanding-method-2">Understanding Method 2</h3>

<p>Now let us walk through <strong>each line</strong> in the above code, and <strong>understand</strong> the meaning and purpose of every line.</p>

<p>I also give some link so that you can go through them if there are anything I explained in <strong>previous posts</strong>.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">Option</span> <span class="n">Explicit</span>
</code></pre></div></div>

<p>This line forces us to define every variable we are going to use.</p>

<p>For more information please visit <strong><a href="/solidworks-macros/open-new-document">Solidworks Macros - Open new Part document</a></strong> post.</p>

<p>Next is our button click event <code class="language-plaintext highlighter-rouge">BrowseDocumentButton_Click</code> procedure.</p>

<p>This procedure hold all the <em>statements (instructions)</em> we give to computer.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Excel object</span>
<span class="k">Dim</span> <span class="nv">xlObj</span> <span class="ow">As</span> <span class="kt">Object</span>
</code></pre></div></div>

<p>In this line, we create object for <strong>Microsoft Excel Application</strong>.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' File dialog object</span>
<span class="k">Dim</span> <span class="nv">fDialog</span> <span class="ow">As</span> <span class="kt">Object</span>

<span class="c1">' File name sting</span>
<span class="k">Dim</span> <span class="nv">strFile</span> <span class="ow">As</span> <span class="kt">String</span>
</code></pre></div></div>

<p>In above lines of code, we create <code class="language-plaintext highlighter-rouge">objects</code> for <strong>File Dialog</strong> and <code class="language-plaintext highlighter-rouge">string</code> for file name.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Create Excel object</span>
<span class="k">Set</span> <span class="n">xlObj</span> <span class="o">=</span> <span class="n">CreateObject</span><span class="p">(</span><span class="s">"Excel.Application"</span><span class="p">)</span>
</code></pre></div></div>

<p>In above line of code, we create <strong>Microsoft Excel Application</strong> and set the value of excel object.</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Create File dialog object by setting option 3</span>
<span class="k">Set</span> <span class="n">fDialog</span> <span class="o">=</span> <span class="n">xlObj</span><span class="p">.</span><span class="n">FileDialog</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span>
</code></pre></div></div>

<p>In above line of code, we create <strong>File dialog</strong> and set the value of file dialog by <code class="language-plaintext highlighter-rouge">FileDialog</code> method.</p>

<p><code class="language-plaintext highlighter-rouge">FileDialog</code> method take 1 parameter <code class="language-plaintext highlighter-rouge">enum</code>. Please see below links for more details about <code class="language-plaintext highlighter-rouge">FileDialog</code></p>

<p><strong><a href="https://docs.microsoft.com/en-us/office/vba/api/excel.application.filedialog">Application.FileDialog property (Excel)</a></strong></p>

<p><strong><a href="https://docs.microsoft.com/en-us/office/vba/api/office.msofiledialogtype">MsoFileDialogType enumeration (Office)</a></strong></p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Setting different properties of file dialog</span>
<span class="k">With</span> <span class="n">fDialog</span>
  <span class="p">.</span><span class="n">Title</span> <span class="o">=</span> <span class="s">"Browse Document"</span>  <span class="c1">' Title of window</span>
  <span class="p">.</span><span class="n">AllowMultiSelect</span> <span class="o">=</span> <span class="k">True</span>    <span class="c1">' Allowing multiple select</span>
  <span class="p">.</span><span class="n">Filters</span><span class="p">.</span><span class="n">Clear</span>              <span class="c1">' Clear the filters</span>
  <span class="p">.</span><span class="n">Filters</span><span class="p">.</span><span class="n">Add</span> <span class="s">"SOLIDWORKS Files"</span><span class="p">,</span> <span class="s">"*.sldprt; *.sldasm; *.slddrw"</span>       <span class="c1">' Add filters for Solidworks files</span>
    <span class="k">If</span> <span class="p">.</span><span class="n">Show</span> <span class="k">Then</span>
      <span class="n">strFile</span> <span class="o">=</span> <span class="p">.</span><span class="n">SelectedItems</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>     <span class="c1">' Select 3rd item from list</span>
    <span class="k">Else</span>
      <span class="n">strFile</span> <span class="o">=</span> <span class="n">vbNullString</span>
    <span class="k">End</span> <span class="k">If</span>
<span class="k">End</span> <span class="k">With</span>
</code></pre></div></div>

<p>In above code we set different properties of File dialog object.</p>

<ul>
  <li>
    <p><strong>Title</strong> : <em>Title of the dialog.</em></p>
  </li>
  <li>
    <p><strong>AllowMultiSelect</strong> : <em>Allowing multi select of files.</em></p>
  </li>
  <li>
    <p><strong>FileFilter</strong> : <em>File name extension of the file to open.</em></p>
  </li>
</ul>

<p><code class="language-plaintext highlighter-rouge">If</code> statement shows that, if <em>file dialog</em> is shown then assign the <em>first value</em> to <strong>file name</strong> string object.</p>

<p>After the function complete following are the results:</p>

<p><strong>Return Value</strong>:</p>

<ul>
  <li><em>Path and file name of the selected file(s).</em></li>
</ul>

<p>Below image shows our <strong>form</strong> in SOLIDWORKS.</p>

<p><img src="/assets/vba-images/browse-solidworks-files/userform-in-solidworks.png" alt="userform-in-solidworks" title="Our userform in Solidworks" /></p>

<p>Below image shows the opened window.</p>

<p><img src="/assets/vba-images/browse-solidworks-files/excel-browse-window.png" alt="excel-browse-window" title="Browsing window using MS Excel" /></p>

<p>Below image shows the <strong>multi-selection</strong> in opened window.</p>

<p><img src="/assets/vba-images/browse-solidworks-files/multiple-select-window.png" alt="multiple-select-window" title="Multilpe file selection in Browsing window using MS Excel" /></p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">' Show the selected file's full path in text box</span>
<span class="n">SelectedFileTextBox</span><span class="p">.</span><span class="n">Text</span> <span class="o">=</span> <span class="n">fileName</span>
</code></pre></div></div>

<p>Now we set the value of text box to <strong>browsed</strong> file name.</p>

<p>Final window of method 1 is shown below/.</p>

<p><img src="/assets/vba-images/browse-solidworks-files/final-window-of-method-first.png" alt="final-window-of-method-second" title="Final window from Method 2" /></p>

<p><em>Final window of both method is same.</em></p>

<hr />

<h2 id="final-words">Final words</h2>

<p><strong>This is it !!!</strong></p>

<p><em>I hope my efforts will helpful to someone!</em></p>

<p>If you found anything to <strong>add or update</strong>, please let me know on my <em>e-mail</em>.</p>

<p>Hope this post helps you in <em>Browsing SOLIDWORKS file(s)</em> with Solidworks VBA Macros.</p>

<p>For more such tutorials on <strong>Solidworks VBA Macro</strong>, do come to this blog after sometime.</p>

<p><em>If you like the post then please share it with your friends also.</em></p>

<p><em>Do let me know by you like this post or not!</em></p>

<p><em>Till then, Happy learning!!!</em></p>
:ET