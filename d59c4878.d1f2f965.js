(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{138:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return b})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return p}));var a=n(2),o=n(6),r=(n(0),n(152)),b={id:"sw-sketch-macro-create-point",title:"Create a Point"},i={unversionedId:"solidworks-macros/sw-sketch-macro-create-point",id:"solidworks-macros/sw-sketch-macro-create-point",isDocsHomePage:!1,title:"Create a Point",description:"In this post, I tell you about how to create a Point through Solidworks VBA Macros in a sketch.",source:"@site/docs\\solidworks-macros\\2019-09-16-create-point.md",slug:"/solidworks-macros/sw-sketch-macro-create-point",permalink:"/docs/solidworks-macros/sw-sketch-macro-create-point",version:"current",sidebar:"swvba",previous:{title:"Create a Centerpoint Arc Slot",permalink:"/docs/solidworks-macros/sw-sketch-macro-create-centerpoint-arc-slot"},next:{title:"Create a Spline",permalink:"/docs/solidworks-macros/sw-sketch-macro-create-spline"}},c=[{value:"Demo Video of Code on YouTube",id:"demo-video-of-code-on-youtube",children:[]},{value:"For Experience Macro Developer",id:"for-experience-macro-developer",children:[]},{value:"For Beginners Macro Developers",id:"for-beginners-macro-developers",children:[{value:"Understanding the Code",id:"understanding-the-code",children:[]},{value:"Creating sequence of Points",id:"creating-sequence-of-points",children:[]},{value:"NOTE",id:"note",children:[]}]},{value:"VBA Language feature used in this post",id:"vba-language-feature-used-in-this-post",children:[]},{value:"Solidworks API Objects",id:"solidworks-api-objects",children:[]}],l={rightToc:c};function p(e){var t=e.components,b=Object(o.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},l,b,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"In this post, I tell you about ",Object(r.b)("em",{parentName:"p"},"how to create a Point through Solidworks VBA Macros")," in a sketch."),Object(r.b)("p",null,"The process is almost identical with previous ",Object(r.b)("strong",{parentName:"p"},Object(r.b)("a",Object(a.a)({parentName:"strong"},{href:"sw-sketch-macro-create-line"}),"Sketch - Create Lines"))," post."),Object(r.b)("hr",null),Object(r.b)("h2",{id:"demo-video-of-code-on-youtube"},"Demo Video of Code on YouTube"),Object(r.b)("p",null,"I have not created the video for this post now. "),Object(r.b)("p",null,"I will upload the video soon for this post and update the post after that."),Object(r.b)("hr",null),Object(r.b)("h2",{id:"for-experience-macro-developer"},"For Experience Macro Developer"),Object(r.b)("p",null,"If you are an experience ",Object(r.b)("strong",{parentName:"p"},"Solidworks Macro developer"),", then you are looking for a specific code sample."),Object(r.b)("p",null,"Below is the code for creating ",Object(r.b)("strong",{parentName:"p"},"A Point")," from ",Object(r.b)("strong",{parentName:"p"},"Solidworks VBA Macro"),"."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-vb"}),"' Creating Variable for Sketch Point\nDim myPoint As SketchPoint\n      \n' Creating a Point\nSet myPoint = swSketchManager.CreatePoint(0, 1, 0)\n")),Object(r.b)("p",null,"For creating a ",Object(r.b)("strong",{parentName:"p"},"Point")," first you need to ",Object(r.b)("strong",{parentName:"p"},"Create")," a variable of ",Object(r.b)("inlineCode",{parentName:"p"},"SketchPoint")," type."),Object(r.b)("p",null,"After creating variable, you need to set the value of this variable."),Object(r.b)("p",null,"For this you used ",Object(r.b)("inlineCode",{parentName:"p"},"CreatePoint")," method from ",Object(r.b)("strong",{parentName:"p"},"Solidworks Sketch Manager"),"."),Object(r.b)("p",null,"This ",Object(r.b)("inlineCode",{parentName:"p"},"CreatePoint")," method set the value of ",Object(r.b)("inlineCode",{parentName:"p"},"SketchPoint")," type variable."),Object(r.b)("p",null,"This ",Object(r.b)("inlineCode",{parentName:"p"},"CreatePoint")," method takes following parameters as explained:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"X")," : ",Object(r.b)("em",{parentName:"p"},"X Location of Point"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"Y")," : ",Object(r.b)("em",{parentName:"p"},"Y Location of Point"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"Z")," : ",Object(r.b)("em",{parentName:"p"},"Z Location of Point")))),Object(r.b)("p",null,"If you want a more detail explaination then please read further otherwise this will help you to ",Object(r.b)("strong",{parentName:"p"},"Create a Point From VBA Macro"),"."),Object(r.b)("hr",null),Object(r.b)("h2",{id:"for-beginners-macro-developers"},"For Beginners Macro Developers"),Object(r.b)("p",null,"In this post, I tell you about ",Object(r.b)("inlineCode",{parentName:"p"},"CreatePoint")," method from ",Object(r.b)("strong",{parentName:"p"},"Solidworks")," ",Object(r.b)("inlineCode",{parentName:"p"},"SketchManager")," object."),Object(r.b)("p",null,"By this method 1st we create ",Object(r.b)("em",{parentName:"p"},"a simple point"),", after that we create ",Object(r.b)("em",{parentName:"p"},"a sequence of points"),"."),Object(r.b)("p",null,"This method is ",Object(r.b)("strong",{parentName:"p"},Object(r.b)("em",{parentName:"strong"},"most updated"))," method, I found in ",Object(r.b)("em",{parentName:"p"},"Solidworks API Help"),". "),Object(r.b)("p",null,"So ",Object(r.b)("strong",{parentName:"p"},Object(r.b)("em",{parentName:"strong"},"use this method"))," if you want to create ",Object(r.b)("strong",{parentName:"p"},"a new Point")," or ",Object(r.b)("strong",{parentName:"p"},"sequence of points"),"."),Object(r.b)("p",null,"Below is the ",Object(r.b)("inlineCode",{parentName:"p"},"code")," sample for creating ",Object(r.b)("em",{parentName:"p"},"a Point"),"."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-vb"}),"Option Explicit\n\n' Creating variable for Solidworks application\nDim swApp As SldWorks.SldWorks\n' Creating variable for Solidworks document\nDim swDoc As SldWorks.ModelDoc2\n' Boolean Variable\nDim BoolStatus As Boolean\n' Creating variable for Solidworks Sketch Manager\nDim swSketchManager As SldWorks.SketchManager\n\n' Main function of our VBA program\nSub main()\n\n  ' Setting Solidworks variable to Solidworks application\n  Set swApp = Application.SldWorks\n  \n  ' Creating string type variable for storing default part location\n  Dim defaultTemplate As String\n  ' Setting value of this string type variable to \"Default part template\"\n  defaultTemplate = swApp.GetUserPreferenceStringValue(swUserPreferenceStringValue_e.swDefaultTemplatePart)\n\n  ' Setting Solidworks document to new part document\n  Set swDoc = swApp.NewDocument(defaultTemplate, 0, 0, 0)\n\n  ' Selecting Front Plane\n  BoolStatus = swDoc.Extension.SelectByID2(\"Front Plane\", \"PLANE\", 0, 0, 0, False, 0, Nothing, swSelectOption_e.swSelectOptionDefault)\n  \n  ' Setting Sketch manager for our sketch\n  Set swSketchManager = swDoc.SketchManager\n  \n  ' Inserting a sketch into selected plane\n  swSketchManager.InsertSketch True\n  \n  ' Creating Varient for Polygon\n  Dim myPoint As SketchPoint\n  \n  ' Creating a Point\n  Set myPoint = swSketchManager.CreatePoint(0, 1, 0)\n  \n  ' #########Creating a number of points##############\n  \n  ' Declaring integer type variable for loop\n  Dim i As Integer\n  \n  ' Looping through 1 to 5\n  For i = 0 To 5\n  \n    ' Declaring integer type variables for X, Y and Z cordinates of point\n    Dim x, y, z As Integer\n    \n    ' Setting values of x, y and z\n    x = i\n    y = x + i\n    z = 0\n    \n    ' Create points till loop continues\n    Set myPoint = swSketchManager.CreatePoint(x, y, z)\n    \n  Next\n  \n  ' De-select the Polygon after creation\n  swDoc.ClearSelection2 True\n  \n  ' Zoom to fit screen in Solidworks Window\n  swDoc.ViewZoomtofit\n\nEnd Sub\n")),Object(r.b)("hr",null),Object(r.b)("h3",{id:"understanding-the-code"},"Understanding the Code"),Object(r.b)("p",null,"Now let us walk through ",Object(r.b)("em",{parentName:"p"},"each line")," in the above code, and ",Object(r.b)("strong",{parentName:"p"},"understand")," the meaning of every line."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-vb"}),"Option Explicit\n")),Object(r.b)("p",null,"This line forces us to define every variable we are going to use. "),Object(r.b)("p",null,"For more information please visit ",Object(r.b)("strong",{parentName:"p"},Object(r.b)("a",Object(a.a)({parentName:"strong"},{href:"sw-macro-open-part"}),"Solidworks Macros - Open new Part document"))," post."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-vb"}),"' Creating variable for Solidworks application\nDim swApp As SldWorks.SldWorks\n")),Object(r.b)("p",null,"In this line, we are creating a variable which we named as ",Object(r.b)("inlineCode",{parentName:"p"},"swApp")," and the type of this ",Object(r.b)("inlineCode",{parentName:"p"},"swApp")," variable is ",Object(r.b)("inlineCode",{parentName:"p"},"SldWorks.SldWorks"),"."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-vb"}),"' Creating variable for Solidworks document\nDim swDoc As SldWorks.ModelDoc2\n")),Object(r.b)("p",null,"In this line, we are creating a variable which we named as ",Object(r.b)("inlineCode",{parentName:"p"},"swDoc")," and the type of this ",Object(r.b)("inlineCode",{parentName:"p"},"swDoc")," variable is ",Object(r.b)("inlineCode",{parentName:"p"},"SldWorks.ModelDoc2"),"."),Object(r.b)("p",null,"Next is our ",Object(r.b)("inlineCode",{parentName:"p"},"Sub")," procedure named as ",Object(r.b)("inlineCode",{parentName:"p"},"main"),". This procedure hold all the ",Object(r.b)("em",{parentName:"p"},"statements (instructions)")," we give to computer."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-vb"}),"' Setting Solidworks variable to Solidworks application\nSet swApp = Application.SldWorks\n")),Object(r.b)("p",null,"In this line, we are setting the value of our Solidworks variable ",Object(r.b)("inlineCode",{parentName:"p"},"swApp")," which we defined earlier to Solidworks application."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-vb"}),"' Creating string type variable for storing default part location\nDim defaultTemplate As String\n\n' Setting value of this string type variable to \"Default part template\"\ndefaultTemplate = swApp.GetUserPreferenceStringValue(swUserPreferenceStringValue_e.swDefaultTemplatePart)\n")),Object(r.b)("p",null,"In 1st statement of above example, we are defining a variable of ",Object(r.b)("inlineCode",{parentName:"p"},"string")," type and named it as ",Object(r.b)("inlineCode",{parentName:"p"},"defaultTemplate"),"."),Object(r.b)("p",null,"This variable ",Object(r.b)("inlineCode",{parentName:"p"},"defaultTemplate"),", holds the location the location of ",Object(r.b)("strong",{parentName:"p"},"Default Part Template"),"."),Object(r.b)("p",null,"In 2nd line of above example. we assign value to our newly define ",Object(r.b)("inlineCode",{parentName:"p"},"defaultTemplate")," variable."),Object(r.b)("p",null,"We assign the value by using a ",Object(r.b)("em",{parentName:"p"},"Method")," named ",Object(r.b)("inlineCode",{parentName:"p"},"GetUserPreferenceStringValue()"),". "),Object(r.b)("p",null,"This method is a part of our main Solidworks variable ",Object(r.b)("inlineCode",{parentName:"p"},"swApp"),"."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-vb"}),"' Setting Solidworks document to new part document\nSet swDoc = swApp.NewDocument(defaultTemplate, 0, 0, 0)\n")),Object(r.b)("p",null,"In this line, we set the value of our ",Object(r.b)("inlineCode",{parentName:"p"},"swDoc")," variable to new document."),Object(r.b)("p",null,"For ",Object(r.b)("strong",{parentName:"p"},"more detailed information")," about above lines please visit ",Object(r.b)("strong",{parentName:"p"},Object(r.b)("a",Object(a.a)({parentName:"strong"},{href:"sw-macro-open-part"}),"Solidworks Macros - Open new Part document"))," post. "),Object(r.b)("p",null,"I have discussed them ",Object(r.b)("strong",{parentName:"p"},"thoroghly")," in ",Object(r.b)("strong",{parentName:"p"},Object(r.b)("a",Object(a.a)({parentName:"strong"},{href:"sw-macro-open-part"}),"Solidworks Macros - Open new Part document"))," post, so do checkout this post if you don't understand above code."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-vb"}),'\' Boolean Variable\nDim BoolStatus As Boolean\n\n\' Selecting Front Plane\nBoolStatus = swDoc.Extension.SelectByID2("Front Plane", "PLANE", 0, 0, 0, False, 0, Nothing, swSelectOption_e.swSelectOptionDefault)\n')),Object(r.b)("p",null,"In 1st line, we create a variable named ",Object(r.b)("inlineCode",{parentName:"p"},"BoolStatus")," as ",Object(r.b)("inlineCode",{parentName:"p"},"Boolean")," object."),Object(r.b)("p",null,"In next line, we select the ",Object(r.b)("em",{parentName:"p"},"front plane")," by using ",Object(r.b)("inlineCode",{parentName:"p"},"SelectByID2")," method from ",Object(r.b)("inlineCode",{parentName:"p"},"Extension")," object."),Object(r.b)("p",null,"For more information about selection method please visit ",Object(r.b)("strong",{parentName:"p"},Object(r.b)("a",Object(a.a)({parentName:"strong"},{href:"sw-macro-selection-methods"}),"Solidworks Macros - Selection Methods"))," post."),Object(r.b)("p",null,"I have discussed about different ",Object(r.b)("em",{parentName:"p"},"Selection methods")," in details in ",Object(r.b)("strong",{parentName:"p"},Object(r.b)("a",Object(a.a)({parentName:"strong"},{href:"sw-macro-selection-methods"}),"Soldworks Macros - Selection Methods"))," post, so do visit this post for more ",Object(r.b)("em",{parentName:"p"},"Selection methods"),"."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-vb"}),"' Creating variable for Solidworks Sketch Manager\nDim swSketchManager As SldWorks.SketchManager\n")),Object(r.b)("p",null,"In above line, we create variable ",Object(r.b)("inlineCode",{parentName:"p"},"swSketchManager")," for ",Object(r.b)("strong",{parentName:"p"},"Solidworks Sketch Manager"),"."),Object(r.b)("p",null,"As the name suggested, a ",Object(r.b)("strong",{parentName:"p"},"Sketch Manager")," holds variours methods and properties to manage ",Object(r.b)("em",{parentName:"p"},"Sketches"),"."),Object(r.b)("p",null,"To see methods and properties related to SketchManager object, please visit ",Object(r.b)("strong",{parentName:"p"},Object(r.b)("a",Object(a.a)({parentName:"strong"},{href:"https://help.solidworks.com/2017/english/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.ISketchManager_members.html"}),"this page")),"."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-vb"}),"' Setting Sketch manager for our sketch\nSet swSketchManager = swDoc.SketchManager\n")),Object(r.b)("p",null,"In above line, we set the ",Object(r.b)("strong",{parentName:"p"},"Sketch manager")," variable to current document's sketch manager."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-vb"}),"' Inserting a sketch into selected plane\nswSketchManager.InsertSketch True\n")),Object(r.b)("p",null,"In above line, we use ",Object(r.b)("inlineCode",{parentName:"p"},"InsertSketch")," method of ",Object(r.b)("em",{parentName:"p"},"SketchManager")," and give ",Object(r.b)("inlineCode",{parentName:"p"},"True")," value."),Object(r.b)("p",null,"This method allows us to insert a sketch in selected plane."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-vb"}),"' Creating Variable for Sketch Point\nDim myPoint As SketchPoint\n      \n' Creating a Point\nSet myPoint = swSketchManager.CreatePoint(0, 1, 0)\n")),Object(r.b)("p",null,"In above sample code, we 1st create a variable named ",Object(r.b)("inlineCode",{parentName:"p"},"myPoint")," of type ",Object(r.b)("inlineCode",{parentName:"p"},"SketchPoint"),"."),Object(r.b)("p",null,"In 2nd line, we ",Object(r.b)("strong",{parentName:"p"},"set")," the value of ",Object(r.b)("em",{parentName:"p"},"SketchPoint")," variable ",Object(r.b)("inlineCode",{parentName:"p"},"myPoint"),"."),Object(r.b)("p",null,"We get this value from ",Object(r.b)("inlineCode",{parentName:"p"},"CreatePoint")," method which is inside the ",Object(r.b)("inlineCode",{parentName:"p"},"swSketchManager")," variable."),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"swSketchManager")," variable is a type of ",Object(r.b)("strong",{parentName:"p"},"SketchManager"),", hence we used ",Object(r.b)("inlineCode",{parentName:"p"},"CreatePoint")," method from ",Object(r.b)("strong",{parentName:"p"},"SketchManager"),"."),Object(r.b)("p",null,"This ",Object(r.b)("inlineCode",{parentName:"p"},"CreatePoint")," method takes following parameters as explained:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"X")," : ",Object(r.b)("em",{parentName:"p"},"X Location of Point"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"Y")," : ",Object(r.b)("em",{parentName:"p"},"Y Location of Point"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"Z")," : ",Object(r.b)("em",{parentName:"p"},"Z Location of Point")))),Object(r.b)("p",null,"For creating a ",Object(r.b)("em",{parentName:"p"},"Sketch Point"),", I used following parameter Values:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"X")," : 0")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"Y")," : 1")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"Z")," : 0"))),Object(r.b)("p",null,"This create a point in ",Object(r.b)("em",{parentName:"p"},"Y - Direction")," at the distance of 1."),Object(r.b)("p",null,"Below Image described ",Object(r.b)("strong",{parentName:"p"},"the Parameters for a Point")," in more detail."),Object(r.b)("p",null,Object(r.b)("img",{alt:"point_parameters",src:n(340).default})),Object(r.b)("p",null,"This ",Object(r.b)("inlineCode",{parentName:"p"},"CreatePoint")," method returns ",Object(r.b)("em",{parentName:"p"},"Point")," interface i.e. ",Object(r.b)("inlineCode",{parentName:"p"},"ISketchPoint")," interface. "),Object(r.b)("p",null,"This ",Object(r.b)("inlineCode",{parentName:"p"},"ISketchPoint")," interface has various ",Object(r.b)("strong",{parentName:"p"},"methods and properties")," for ",Object(r.b)("em",{parentName:"p"},"a Point"),"."),Object(r.b)("p",null,"For more detail about ",Object(r.b)("strong",{parentName:"p"},"methods and properties")," of ",Object(r.b)("inlineCode",{parentName:"p"},"ISketchPoint")," interface you can visit ",Object(r.b)("strong",{parentName:"p"},Object(r.b)("a",Object(a.a)({parentName:"strong"},{href:"http://help.solidworks.com/2017/english/api/sldworksapi/SOLIDWORKS.Interop.sldworks~SOLIDWORKS.Interop.sldworks.ISketchPoint.html"}),"this page")),"."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"creating-sequence-of-points"},"Creating sequence of Points"),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Below code describe how to create Sequence of Points.")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-vb"}),"' Declaring integer type variable for loop\nDim i As Integer\n\n' Looping through 1 to 5\nFor i = 0 To 5\n\n  ' Declaring integer type variables for X, Y and Z cordinates of point\n  Dim x, y, z As Integer\n  \n  ' Setting values of x, y and z\n  x = i\n  y = x + i\n  z = 0\n  \n  ' Create points till loop continues\n  Set myPoint = swSketchManager.CreatePoint(x, y, z)\n  \nNext\n")),Object(r.b)("p",null,"Let us understand each line of code."),Object(r.b)("p",null,"Above Lines of code creates a number of points."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-vb"}),"' Declaring integer type variable for loop\nDim i As Integer\n")),Object(r.b)("p",null,"In above line, we create a variable named ",Object(r.b)("inlineCode",{parentName:"p"},"i")," of ",Object(r.b)("strong",{parentName:"p"},"integer")," type."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-vb"}),"' Looping through 1 to 5\nFor i = 0 To 5\n  \nNext\n")),Object(r.b)("p",null,"In above lines, we create a ",Object(r.b)("inlineCode",{parentName:"p"},"For")," loop."),Object(r.b)("p",null,"This loop iterate the value of ",Object(r.b)("inlineCode",{parentName:"p"},"i")," variable from ",Object(r.b)("strong",{parentName:"p"},"0 -> 5"),"."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-vb"}),"' Declaring integer type variables for X, Y and Z cordinates of point\nDim x, y, z As Integer\n\n' Setting values of x, y and z\nx = i\ny = x + i\nz = 0\n")),Object(r.b)("p",null,"In above lines, we 1st declare 3 variable ",Object(r.b)("em",{parentName:"p"},"x, y and z")," of ",Object(r.b)("strong",{parentName:"p"},"integer")," type."),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"x, y and z")," are co-ordinates of a single point in ",Object(r.b)("em",{parentName:"p"},"X, Y")," and ",Object(r.b)("em",{parentName:"p"},"Z")," direction."),Object(r.b)("p",null,"In next 3 lines, we set the values of ",Object(r.b)("em",{parentName:"p"},"x, y and z"),"."),Object(r.b)("p",null,"For all points, we set the value of ",Object(r.b)("em",{parentName:"p"},"z")," to ",Object(r.b)("strong",{parentName:"p"},"0")," because we want to place our points in ",Object(r.b)("strong",{parentName:"p"},"XY plane"),"."),Object(r.b)("p",null,"If the value of ",Object(r.b)("em",{parentName:"p"},"i = 0"),", then we set the value of ",Object(r.b)("em",{parentName:"p"},"x")," equal to ",Object(r.b)("em",{parentName:"p"},"i"),"."),Object(r.b)("p",null,"This makes ",Object(r.b)("em",{parentName:"p"},"x = 0")," also."),Object(r.b)("p",null,"Now, we set the value of ",Object(r.b)("em",{parentName:"p"},"y")," which is equal to ",Object(r.b)("strong",{parentName:"p"},"SUM")," of ",Object(r.b)("em",{parentName:"p"},"x")," and ",Object(r.b)("em",{parentName:"p"},"i"),"."),Object(r.b)("p",null,"Hence for ",Object(r.b)("em",{parentName:"p"},"i = 0"),", ",Object(r.b)("em",{parentName:"p"},"x = 0")," and ",Object(r.b)("em",{parentName:"p"},"y = 0"),"."),Object(r.b)("p",null,"For ",Object(r.b)("em",{parentName:"p"},"i = 1"),", ",Object(r.b)("em",{parentName:"p"},"x = 1")," and ",Object(r.b)("em",{parentName:"p"},"y = 2"),"."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-vb"}),"' Create points till loop continues\nSet myPoint = swSketchManager.CreatePoint(x, y, z)\n")),Object(r.b)("p",null,"In above line, we create a Point using ",Object(r.b)("inlineCode",{parentName:"p"},"CreatePoint")," function of ",Object(r.b)("inlineCode",{parentName:"p"},"swSketchManager")," variable with the values of ",Object(r.b)("em",{parentName:"p"},"x, y and z"),"."),Object(r.b)("p",null,"Code sample in this section, create a sequence of points."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"note"},"NOTE"),Object(r.b)("p",null,"It is ",Object(r.b)("strong",{parentName:"p"},Object(r.b)("em",{parentName:"strong"},"very important"))," to remember that, when you give distance or any other numeric value in ",Object(r.b)("strong",{parentName:"p"},"Solidworks API"),", Solidworks takes that numeric value in ",Object(r.b)("strong",{parentName:"p"},Object(r.b)("em",{parentName:"strong"},"Meter only")),"."),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Solidworks API")," does not care about your application's Unit systems."),Object(r.b)("p",null,"For example, I works in ",Object(r.b)("strong",{parentName:"p"},"ANSI"),' system means "inches" for distance. '),Object(r.b)("p",null,"But when I used Solidworks API through ",Object(r.b)("em",{parentName:"p"},"VBA macros")," or ",Object(r.b)("em",{parentName:"p"},"C#"),", I have to use ",Object(r.b)("strong",{parentName:"p"},"converted")," numeric values."),Object(r.b)("p",null,"Because Solidworks API output the distance in ",Object(r.b)("strong",{parentName:"p"},"Meter")," only; which is not my requirement."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-vb"}),"' De-select the Point after creation\nswDoc.ClearSelection2 True\n")),Object(r.b)("p",null,"In the this line of code, we de-select the created ",Object(r.b)("em",{parentName:"p"},"Point"),"."),Object(r.b)("p",null,"For de-selecting, we use ",Object(r.b)("inlineCode",{parentName:"p"},"ClearSelection2")," method from our Solidworks document variable ",Object(r.b)("inlineCode",{parentName:"p"},"swDoc"),"."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-vb"}),"' Zoom to fit screen in Solidworks Window\nswDoc.ViewZoomtofit\n")),Object(r.b)("p",null,"In this last line we use ",Object(r.b)("em",{parentName:"p"},"zoom to fit")," command."),Object(r.b)("p",null,"For Zoom to fit, we use ",Object(r.b)("inlineCode",{parentName:"p"},"ViewZoomtofit")," method from our Solidworks document variable ",Object(r.b)("inlineCode",{parentName:"p"},"swDoc"),"."),Object(r.b)("hr",null),Object(r.b)("h2",{id:"vba-language-feature-used-in-this-post"},"VBA Language feature used in this post"),Object(r.b)("p",null,"In this post used some features of ",Object(r.b)("strong",{parentName:"p"},"VBA programming language"),"."),Object(r.b)("p",null,"This section of post, has some brief information about the VBA programming language specific features."),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"We use ",Object(r.b)("strong",{parentName:"li"},"Option Explicit")," for capturing un-declared variables.")),Object(r.b)("p",null,"If you want to read more about ",Object(r.b)("strong",{parentName:"p"},"Option Explicit")," then please visit ",Object(r.b)("strong",{parentName:"p"},Object(r.b)("a",Object(a.a)({parentName:"strong"},{href:"../vba/vba-variables-decl"}),"Declaring and Scoping of Variables")),"."),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Then we create ",Object(r.b)("strong",{parentName:"li"},"variable")," for different data types.")),Object(r.b)("p",null,"If you don't know about them, then please visit ",Object(r.b)("strong",{parentName:"p"},Object(r.b)("a",Object(a.a)({parentName:"strong"},{href:"../vba/vba-variables"}),"Variables"))," and ",Object(r.b)("strong",{parentName:"p"},Object(r.b)("a",Object(a.a)({parentName:"strong"},{href:"../vba/vba-prog-concept#data-types-in-vba"}),"Data-types"))," posts of this blog."),Object(r.b)("p",null,"These posts will help you to understand what ",Object(r.b)("strong",{parentName:"p"},"Variables")," are and how to use them."),Object(r.b)("ol",{start:3},Object(r.b)("li",{parentName:"ol"},"Then we create ",Object(r.b)("strong",{parentName:"li"},"main Sub procedure")," for our macro.")),Object(r.b)("p",null,"If you don't know about the ",Object(r.b)("strong",{parentName:"p"},"Sub procedure"),", then I suggest you to visit ",Object(r.b)("strong",{parentName:"p"},Object(r.b)("a",Object(a.a)({parentName:"strong"},{href:"../vba/vba-procedures"}),"VBA Sub and Function Procedures"))," and ",Object(r.b)("strong",{parentName:"p"},Object(r.b)("a",Object(a.a)({parentName:"strong"},{href:"../vba/vba-procedures-exec"}),"Executing Sub and Function Procedures"))," posts of this blog."),Object(r.b)("p",null,"These posts will help you to understand what ",Object(r.b)("strong",{parentName:"p"},"Procedures")," are and how to use them."),Object(r.b)("ol",{start:4},Object(r.b)("li",{parentName:"ol"},"In most part we create some variables and set their values. We set those values by using some ",Object(r.b)("strong",{parentName:"li"},"functions")," provided from objects.")),Object(r.b)("p",null,"If you don't know about the ",Object(r.b)("strong",{parentName:"p"},"functions"),", then you should visit ",Object(r.b)("strong",{parentName:"p"},Object(r.b)("a",Object(a.a)({parentName:"strong"},{href:"../vba/vba-functions"}),"VBA Functions"))," and ",Object(r.b)("strong",{parentName:"p"},Object(r.b)("a",Object(a.a)({parentName:"strong"},{href:"../vba/vba-functions-adv"}),"VBA Functions that do more"))," posts of this blog."),Object(r.b)("p",null,"These posts will help you to understand what ",Object(r.b)("strong",{parentName:"p"},"functions")," are and how to use them."),Object(r.b)("ol",{start:5},Object(r.b)("li",{parentName:"ol"},"For creating a sequence of points, we use a ",Object(r.b)("strong",{parentName:"li"},"For-Next loop"),". We use a loop to set values of x, y and z co-ordinates of each points.")),Object(r.b)("p",null,"If you don't know about the ",Object(r.b)("strong",{parentName:"p"},"For-Next loop"),", then you should visit ",Object(r.b)("strong",{parentName:"p"},Object(r.b)("a",Object(a.a)({parentName:"strong"},{href:"../vba/vba-looping"}),"VBA Looping"))," post of this blog."),Object(r.b)("p",null,"This posts will help you to understand what ",Object(r.b)("strong",{parentName:"p"},"For-Next loop")," are and how to use them."),Object(r.b)("hr",null),Object(r.b)("h2",{id:"solidworks-api-objects"},"Solidworks API Objects"),Object(r.b)("p",null,"In this post, for creating a ",Object(r.b)("strong",{parentName:"p"},"Point"),", we use ",Object(r.b)("em",{parentName:"p"},"Solidworks API objects and their methods"),"."),Object(r.b)("p",null,"This section contains the list of all ",Object(r.b)("strong",{parentName:"p"},"Solidworks Objects")," used in this post."),Object(r.b)("p",null,"I have also attached links of these ",Object(r.b)("strong",{parentName:"p"},"Solidworks API Objects")," in ",Object(r.b)("strong",{parentName:"p"},"API Help website"),"."),Object(r.b)("p",null,"If you want to explore those objects, you can use these links."),Object(r.b)("p",null,"These Solidworks API Objects are listed below:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"Solidworks Application Object"))),Object(r.b)("p",null,"If you want explore ",Object(r.b)("strong",{parentName:"p"},Object(r.b)("em",{parentName:"strong"},"Properties and Methods/Functions"))," of ",Object(r.b)("strong",{parentName:"p"},"Solidworks Application Object")," object you can visit ",Object(r.b)("strong",{parentName:"p"},Object(r.b)("a",Object(a.a)({parentName:"strong"},{href:"http://help.solidworks.com/2019/english/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.ISldWorks_members.html"}),"this link")),"."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"Solidworks Document Object"))),Object(r.b)("p",null,"If you want explore ",Object(r.b)("strong",{parentName:"p"},Object(r.b)("em",{parentName:"strong"},"Properties and Methods/Functions"))," of ",Object(r.b)("strong",{parentName:"p"},"Solidworks Document Object")," object you can visit ",Object(r.b)("strong",{parentName:"p"},Object(r.b)("a",Object(a.a)({parentName:"strong"},{href:"http://help.solidworks.com/2019/english/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.IModelDoc2_members.html"}),"this link")),"."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"Solidworks Sketch Manager Object"))),Object(r.b)("p",null,"If you want explore ",Object(r.b)("strong",{parentName:"p"},Object(r.b)("em",{parentName:"strong"},"Properties and Methods/Functions"))," of ",Object(r.b)("strong",{parentName:"p"},"Solidworks Sketch Manager Object")," you can visit ",Object(r.b)("strong",{parentName:"p"},Object(r.b)("a",Object(a.a)({parentName:"strong"},{href:"https://help.solidworks.com/2017/english/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.ISketchManager_members.html"}),"this link")),"."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"Solidworks Sketch Point Object"))),Object(r.b)("p",null,"If you want explore ",Object(r.b)("strong",{parentName:"p"},Object(r.b)("em",{parentName:"strong"},"Properties and Methods/Functions"))," of ",Object(r.b)("strong",{parentName:"p"},"Solidworks Sketch Point Object")," you can visit ",Object(r.b)("strong",{parentName:"p"},Object(r.b)("a",Object(a.a)({parentName:"strong"},{href:"http://help.solidworks.com/2017/english/api/sldworksapi/SolidWorks.Interop.sldworks~SolidWorks.Interop.sldworks.ISketchPoint_members.html"}),"this link")),"."),Object(r.b)("hr",null),Object(r.b)("p",null,"Hope this post helps you to ",Object(r.b)("em",{parentName:"p"},"create a Point")," in Sketches with Solidworks VB Macros."),Object(r.b)("p",null,"For more such tutorials on ",Object(r.b)("strong",{parentName:"p"},"Solidworks VBA Macros"),", do come to this blog after sometime."),Object(r.b)("p",null,"Till then, Happy learning!!! "))}p.isMDXComponent=!0},152:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return O}));var a=n(0),o=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function b(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?b(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):b(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),p=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=p(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},u=o.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,b=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),s=p(n),u=a,O=s["".concat(b,".").concat(u)]||s[u]||m[u]||r;return n?o.a.createElement(O,i(i({ref:t},l),{},{components:n})):o.a.createElement(O,i({ref:t},l))}));function O(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,b=new Array(r);b[0]=u;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,b[1]=i;for(var l=2;l<r;l++)b[l]=n[l];return o.a.createElement.apply(null,b)}return o.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},340:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/point_parameters-91a5ca8c3a6fcfa5d211051549ea9dd8.png"}}]);